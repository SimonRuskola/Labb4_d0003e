
labb4_d0003e.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000023b6  0000244a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000003a9  00800108  00800108  00002452  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002452  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002484  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  000024c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002781  00000000  00000000  000026ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ff8  00000000  00000000  00004e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014e3  00000000  00000000  00005e65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b40  00000000  00000000  00007348  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000091a  00000000  00000000  00007e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000265a  00000000  00000000  000087a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000adfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__vector_1>
       8:	0c 94 01 06 	jmp	0xc02	; 0xc02 <__vector_2>
       c:	0c 94 6d 06 	jmp	0xcda	; 0xcda <__vector_3>
      10:	0c 94 d9 06 	jmp	0xdb2	; 0xdb2 <__vector_4>
      14:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 1c 0e 	jmp	0x1c38	; 0x1c38 <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 ca 0d 	jmp	0x1b94	; 0x1b94 <__vector_9>
      28:	0c 94 b1 07 	jmp	0xf62	; 0xf62 <__vector_10>
      2c:	0c 94 1d 08 	jmp	0x103a	; 0x103a <__vector_11>
      30:	0c 94 89 08 	jmp	0x1112	; 0x1112 <__vector_12>
      34:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <__vector_13>
      38:	0c 94 61 09 	jmp	0x12c2	; 0x12c2 <__vector_14>
      3c:	0c 94 cd 09 	jmp	0x139a	; 0x139a <__vector_15>
      40:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__vector_16>
      44:	0c 94 a5 0a 	jmp	0x154a	; 0x154a <__vector_17>
      48:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__vector_18>
      4c:	0c 94 7d 0b 	jmp	0x16fa	; 0x16fa <__vector_19>
      50:	0c 94 e9 0b 	jmp	0x17d2	; 0x17d2 <__vector_20>
      54:	0c 94 55 0c 	jmp	0x18aa	; 0x18aa <__vector_21>
      58:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__vector_22>
      5c:	a3 00       	.word	0x00a3	; ????
      5e:	85 00       	.word	0x0085	; ????
      60:	88 00       	.word	0x0088	; ????
      62:	8b 00       	.word	0x008b	; ????
      64:	8e 00       	.word	0x008e	; ????
      66:	91 00       	.word	0x0091	; ????
      68:	94 00       	.word	0x0094	; ????
      6a:	97 00       	.word	0x0097	; ????
      6c:	9a 00       	.word	0x009a	; ????
      6e:	9d 00       	.word	0x009d	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e6 eb       	ldi	r30, 0xB6	; 182
      84:	f3 e2       	ldi	r31, 0x23	; 35
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a8 30       	cpi	r26, 0x08	; 8
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	a8 e0       	ldi	r26, 0x08	; 8
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a1 3b       	cpi	r26, 0xB1	; 177
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <main>
      a6:	0c 94 d9 11 	jmp	0x23b2	; 0x23b2 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <LCD_Init>:

 }


void LCD_Init(void) {
	CLKPR = (1 << CLKPCE); 
      ae:	e1 e6       	ldi	r30, 0x61	; 97
      b0:	f0 e0       	ldi	r31, 0x00	; 0
      b2:	80 e8       	ldi	r24, 0x80	; 128
      b4:	80 83       	st	Z, r24
	CLKPR = 0x00;
      b6:	10 82       	st	Z, r1

    // Use external asynchronous clock source 
    // 1/3 Bias and 1/4 duty, 25 segments enabled 
    LCDCRB = (1<<LCDCS) | (1<<LCDMUX1)| (1<<LCDMUX0)| (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
      b8:	87 eb       	ldi	r24, 0xB7	; 183
      ba:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	// 
    // Using 16 as prescaler selection and 8 as LCD Clock Divide 
    LCDFRR = (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
      be:	87 e0       	ldi	r24, 0x07	; 7
      c0:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
    // Set segment drive time to 300 us and output voltage to 3.35 V
    LCDCCR = (1<<LCDCC3) | (1<<LCDCC2) | (1<<LCDCC1)| (1<<LCDCC0);
      c4:	8f e0       	ldi	r24, 0x0F	; 15
      c6:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
    // Enable LCD, low power waveform, no frame interrupt, no blanking 
    LCDCRA = (1<<LCDEN) | (1<<LCDAB) |  (0<<LCDBL);
      ca:	80 ec       	ldi	r24, 0xC0	; 192
      cc:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
      d0:	08 95       	ret

000000d2 <button_init>:
void button_init(void){


    
    // initialize button
    PORTB |= ((1 << 7)| (1 << 6 ) | (1 << 4));  // 7 down, 6 up, 4 center down 
      d2:	85 b1       	in	r24, 0x05	; 5
      d4:	80 6d       	ori	r24, 0xD0	; 208
      d6:	85 b9       	out	0x05, r24	; 5
	PORTE |= ( (1 << 2) | ( 1 << 3));           // 2 left, 3 right
      d8:	8e b1       	in	r24, 0x0e	; 14
      da:	8c 60       	ori	r24, 0x0C	; 12
      dc:	8e b9       	out	0x0e, r24	; 14


	// enable interupts for joystick
    EIMSK |= (1 << PCIE1) | (1 << PCIE0); //  PCIE1 enables PCINT15..8 interupts // PCIE0 enables PCINT7..0 interupts
      de:	8d b3       	in	r24, 0x1d	; 29
      e0:	80 6c       	ori	r24, 0xC0	; 192
      e2:	8d bb       	out	0x1d, r24	; 29
	//EIMSK |= (1 << PCINT15);

	PCMSK1 |= (1 << PCINT15)|(1 << PCINT14)|(1 << PCINT12); //enables those pins
      e4:	ec e6       	ldi	r30, 0x6C	; 108
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	80 81       	ld	r24, Z
      ea:	80 6d       	ori	r24, 0xD0	; 208
      ec:	80 83       	st	Z, r24
	PCMSK0 |= (1 << PCINT3)|(1 << PCINT2);
      ee:	eb e6       	ldi	r30, 0x6B	; 107
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	80 81       	ld	r24, Z
      f4:	8c 60       	ori	r24, 0x0C	; 12
      f6:	80 83       	st	Z, r24
      f8:	08 95       	ret

000000fa <getValueArray>:


}

int getValueArray(int i){
    switch (i)
      fa:	8a 30       	cpi	r24, 0x0A	; 10
      fc:	91 05       	cpc	r25, r1
      fe:	00 f5       	brcc	.+64     	; 0x140 <getValueArray+0x46>
     100:	fc 01       	movw	r30, r24
     102:	e2 5d       	subi	r30, 0xD2	; 210
     104:	ff 4f       	sbci	r31, 0xFF	; 255
     106:	0c 94 46 11 	jmp	0x228c	; 0x228c <__tablejump2__>
    {
    case 0:
        return ZeroValue;

    case 1:
        return OneValue;
     10a:	80 e8       	ldi	r24, 0x80	; 128
     10c:	90 e2       	ldi	r25, 0x20	; 32
     10e:	08 95       	ret
    
    case 2:
        return TwoValue;
     110:	81 e1       	ldi	r24, 0x11	; 17
     112:	9e e1       	ldi	r25, 0x1E	; 30
     114:	08 95       	ret

    case 3:
        return ThreeValue;
     116:	81 e1       	ldi	r24, 0x11	; 17
     118:	9b e1       	ldi	r25, 0x1B	; 27
     11a:	08 95       	ret
    
    case 4:
        return FourValue;
     11c:	80 e5       	ldi	r24, 0x50	; 80
     11e:	9b e0       	ldi	r25, 0x0B	; 11
     120:	08 95       	ret

    case 5:
        return FiveValue;
     122:	81 e4       	ldi	r24, 0x41	; 65
     124:	9b e1       	ldi	r25, 0x1B	; 27
     126:	08 95       	ret
    
    case 6:
        return SixValue;
     128:	81 e4       	ldi	r24, 0x41	; 65
     12a:	9f e1       	ldi	r25, 0x1F	; 31
     12c:	08 95       	ret
    
    case 7:
        return SevenValue;
     12e:	81 e1       	ldi	r24, 0x11	; 17
     130:	91 e0       	ldi	r25, 0x01	; 1
     132:	08 95       	ret
        
    case 8:
        return EightValue;
     134:	81 e5       	ldi	r24, 0x51	; 81
     136:	9f e1       	ldi	r25, 0x1F	; 31
     138:	08 95       	ret
    
    case 9:
        return NineValue;
     13a:	81 e5       	ldi	r24, 0x51	; 81
     13c:	9b e0       	ldi	r25, 0x0B	; 11
     13e:	08 95       	ret
    
    default: // 10
        return BlankValue;
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	08 95       	ret

int getValueArray(int i){
    switch (i)
    {
    case 0:
        return ZeroValue;
     146:	81 e5       	ldi	r24, 0x51	; 81
     148:	95 e1       	ldi	r25, 0x15	; 21
        return NineValue;
    
    default: // 10
        return BlankValue;
    }
}
     14a:	08 95       	ret

0000014c <writeChar>:

void writeChar(char ch, int pos) {
     14c:	ef 92       	push	r14
     14e:	ff 92       	push	r15
     150:	1f 93       	push	r17
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
     156:	00 d0       	rcall	.+0      	; 0x158 <writeChar+0xc>
     158:	cd b7       	in	r28, 0x3d	; 61
     15a:	de b7       	in	r29, 0x3e	; 62
	

	volatile int i = 0;
     15c:	1a 82       	std	Y+2, r1	; 0x02
     15e:	19 82       	std	Y+1, r1	; 0x01
	if (pos < 0 || pos > 5) {
     160:	66 30       	cpi	r22, 0x06	; 6
     162:	71 05       	cpc	r23, r1
     164:	08 f0       	brcs	.+2      	; 0x168 <writeChar+0x1c>
     166:	fe c1       	rjmp	.+1020   	; 0x564 <__stack+0x65>
		return; // do nothing if pos is outside the supported range
	}
	if ((int)ch < (0+48) || (int)ch > (9+48)) {
     168:	90 ed       	ldi	r25, 0xD0	; 208
     16a:	98 0f       	add	r25, r24
     16c:	9a 30       	cpi	r25, 0x0A	; 10
     16e:	28 f0       	brcs	.+10     	; 0x17a <writeChar+0x2e>
		i=10;
     170:	8a e0       	ldi	r24, 0x0A	; 10
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	9a 83       	std	Y+2, r25	; 0x02
     176:	89 83       	std	Y+1, r24	; 0x01
     178:	04 c0       	rjmp	.+8      	; 0x182 <writeChar+0x36>
	}else{
        i = ch - 48;
     17a:	90 e0       	ldi	r25, 0x00	; 0
     17c:	c0 97       	sbiw	r24, 0x30	; 48
     17e:	9a 83       	std	Y+2, r25	; 0x02
     180:	89 83       	std	Y+1, r24	; 0x01
    }
	if(pos==0){
     182:	61 15       	cp	r22, r1
     184:	71 05       	cpc	r23, r1
     186:	09 f0       	breq	.+2      	; 0x18a <writeChar+0x3e>
     188:	4e c0       	rjmp	.+156    	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
		LCDDR0 =  (LCDDR0&0xF0)  |        (0xF&getValueArray(i))<<0;
     18a:	0f 2e       	mov	r0, r31
     18c:	fc ee       	ldi	r31, 0xEC	; 236
     18e:	ef 2e       	mov	r14, r31
     190:	f1 2c       	mov	r15, r1
     192:	f0 2d       	mov	r31, r0
     194:	f7 01       	movw	r30, r14
     196:	10 81       	ld	r17, Z
     198:	89 81       	ldd	r24, Y+1	; 0x01
     19a:	9a 81       	ldd	r25, Y+2	; 0x02
     19c:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     1a0:	10 7f       	andi	r17, 0xF0	; 240
     1a2:	8f 70       	andi	r24, 0x0F	; 15
     1a4:	81 2b       	or	r24, r17
     1a6:	f7 01       	movw	r30, r14
     1a8:	80 83       	st	Z, r24
		LCDDR5 =  (LCDDR5&0xF0)  |  (((0xF<<4)&getValueArray(i))>>4);
     1aa:	0f 2e       	mov	r0, r31
     1ac:	f1 ef       	ldi	r31, 0xF1	; 241
     1ae:	ef 2e       	mov	r14, r31
     1b0:	f1 2c       	mov	r15, r1
     1b2:	f0 2d       	mov	r31, r0
     1b4:	f7 01       	movw	r30, r14
     1b6:	10 81       	ld	r17, Z
     1b8:	89 81       	ldd	r24, Y+1	; 0x01
     1ba:	9a 81       	ldd	r25, Y+2	; 0x02
     1bc:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     1c0:	80 7f       	andi	r24, 0xF0	; 240
     1c2:	99 27       	eor	r25, r25
     1c4:	95 95       	asr	r25
     1c6:	87 95       	ror	r24
     1c8:	95 95       	asr	r25
     1ca:	87 95       	ror	r24
     1cc:	95 95       	asr	r25
     1ce:	87 95       	ror	r24
     1d0:	95 95       	asr	r25
     1d2:	87 95       	ror	r24
     1d4:	10 7f       	andi	r17, 0xF0	; 240
     1d6:	81 2b       	or	r24, r17
     1d8:	f7 01       	movw	r30, r14
     1da:	80 83       	st	Z, r24
		LCDDR10 = (LCDDR10&0xF0) |  (((0xF<<8)&getValueArray(i))>>8);
     1dc:	0f 2e       	mov	r0, r31
     1de:	f6 ef       	ldi	r31, 0xF6	; 246
     1e0:	ef 2e       	mov	r14, r31
     1e2:	f1 2c       	mov	r15, r1
     1e4:	f0 2d       	mov	r31, r0
     1e6:	f7 01       	movw	r30, r14
     1e8:	10 81       	ld	r17, Z
     1ea:	89 81       	ldd	r24, Y+1	; 0x01
     1ec:	9a 81       	ldd	r25, Y+2	; 0x02
     1ee:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     1f2:	88 27       	eor	r24, r24
     1f4:	9f 70       	andi	r25, 0x0F	; 15
     1f6:	10 7f       	andi	r17, 0xF0	; 240
     1f8:	19 2b       	or	r17, r25
     1fa:	f7 01       	movw	r30, r14
     1fc:	10 83       	st	Z, r17
		LCDDR15 = (LCDDR15&0xF0) | (((0xF<<12)&getValueArray(i))>>12);
     1fe:	0f 2e       	mov	r0, r31
     200:	fb ef       	ldi	r31, 0xFB	; 251
     202:	ef 2e       	mov	r14, r31
     204:	f1 2c       	mov	r15, r1
     206:	f0 2d       	mov	r31, r0
     208:	f7 01       	movw	r30, r14
     20a:	10 81       	ld	r17, Z
     20c:	89 81       	ldd	r24, Y+1	; 0x01
     20e:	9a 81       	ldd	r25, Y+2	; 0x02
     210:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     214:	10 7f       	andi	r17, 0xF0	; 240
     216:	95 95       	asr	r25
     218:	95 95       	asr	r25
     21a:	95 95       	asr	r25
     21c:	95 95       	asr	r25
     21e:	91 2b       	or	r25, r17
     220:	f7 01       	movw	r30, r14
     222:	90 83       	st	Z, r25
     224:	9f c1       	rjmp	.+830    	; 0x564 <__stack+0x65>
		
	} else if(pos==1){
     226:	61 30       	cpi	r22, 0x01	; 1
     228:	71 05       	cpc	r23, r1
     22a:	09 f0       	breq	.+2      	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
     22c:	50 c0       	rjmp	.+160    	; 0x2ce <__EEPROM_REGION_LENGTH__+0xce>
		LCDDR0 =     (LCDDR0&0x0F)  |       ((0xF&getValueArray(i))<<4);
     22e:	0f 2e       	mov	r0, r31
     230:	fc ee       	ldi	r31, 0xEC	; 236
     232:	ef 2e       	mov	r14, r31
     234:	f1 2c       	mov	r15, r1
     236:	f0 2d       	mov	r31, r0
     238:	f7 01       	movw	r30, r14
     23a:	10 81       	ld	r17, Z
     23c:	89 81       	ldd	r24, Y+1	; 0x01
     23e:	9a 81       	ldd	r25, Y+2	; 0x02
     240:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     244:	1f 70       	andi	r17, 0x0F	; 15
     246:	82 95       	swap	r24
     248:	92 95       	swap	r25
     24a:	90 7f       	andi	r25, 0xF0	; 240
     24c:	98 27       	eor	r25, r24
     24e:	80 7f       	andi	r24, 0xF0	; 240
     250:	98 27       	eor	r25, r24
     252:	81 2b       	or	r24, r17
     254:	f7 01       	movw	r30, r14
     256:	80 83       	st	Z, r24
		LCDDR5 =     (LCDDR5&0x0F)  |  (((0xF<<4)&getValueArray(i))>>0);
     258:	0f 2e       	mov	r0, r31
     25a:	f1 ef       	ldi	r31, 0xF1	; 241
     25c:	ef 2e       	mov	r14, r31
     25e:	f1 2c       	mov	r15, r1
     260:	f0 2d       	mov	r31, r0
     262:	f7 01       	movw	r30, r14
     264:	10 81       	ld	r17, Z
     266:	89 81       	ldd	r24, Y+1	; 0x01
     268:	9a 81       	ldd	r25, Y+2	; 0x02
     26a:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     26e:	1f 70       	andi	r17, 0x0F	; 15
     270:	80 7f       	andi	r24, 0xF0	; 240
     272:	81 2b       	or	r24, r17
     274:	f7 01       	movw	r30, r14
     276:	80 83       	st	Z, r24
		LCDDR10 =    (LCDDR10&0x0F) |  (((0xF<<8)&getValueArray(i))>>4);
     278:	0f 2e       	mov	r0, r31
     27a:	f6 ef       	ldi	r31, 0xF6	; 246
     27c:	ef 2e       	mov	r14, r31
     27e:	f1 2c       	mov	r15, r1
     280:	f0 2d       	mov	r31, r0
     282:	f7 01       	movw	r30, r14
     284:	10 81       	ld	r17, Z
     286:	89 81       	ldd	r24, Y+1	; 0x01
     288:	9a 81       	ldd	r25, Y+2	; 0x02
     28a:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     28e:	88 27       	eor	r24, r24
     290:	9f 70       	andi	r25, 0x0F	; 15
     292:	95 95       	asr	r25
     294:	87 95       	ror	r24
     296:	95 95       	asr	r25
     298:	87 95       	ror	r24
     29a:	95 95       	asr	r25
     29c:	87 95       	ror	r24
     29e:	95 95       	asr	r25
     2a0:	87 95       	ror	r24
     2a2:	1f 70       	andi	r17, 0x0F	; 15
     2a4:	81 2b       	or	r24, r17
     2a6:	f7 01       	movw	r30, r14
     2a8:	80 83       	st	Z, r24
		LCDDR15 =    (LCDDR15&0x0F) | (((0xF<<12)&getValueArray(i))>>8);
     2aa:	0f 2e       	mov	r0, r31
     2ac:	fb ef       	ldi	r31, 0xFB	; 251
     2ae:	ef 2e       	mov	r14, r31
     2b0:	f1 2c       	mov	r15, r1
     2b2:	f0 2d       	mov	r31, r0
     2b4:	f7 01       	movw	r30, r14
     2b6:	10 81       	ld	r17, Z
     2b8:	89 81       	ldd	r24, Y+1	; 0x01
     2ba:	9a 81       	ldd	r25, Y+2	; 0x02
     2bc:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     2c0:	88 27       	eor	r24, r24
     2c2:	90 7f       	andi	r25, 0xF0	; 240
     2c4:	1f 70       	andi	r17, 0x0F	; 15
     2c6:	19 2b       	or	r17, r25
     2c8:	f7 01       	movw	r30, r14
     2ca:	10 83       	st	Z, r17
     2cc:	4b c1       	rjmp	.+662    	; 0x564 <__stack+0x65>
	} else if(pos==2){
     2ce:	62 30       	cpi	r22, 0x02	; 2
     2d0:	71 05       	cpc	r23, r1
     2d2:	09 f0       	breq	.+2      	; 0x2d6 <__EEPROM_REGION_LENGTH__+0xd6>
     2d4:	4e c0       	rjmp	.+156    	; 0x372 <__EEPROM_REGION_LENGTH__+0x172>
		LCDDR1 =  (LCDDR1&0xF0)  |        (0xF&getValueArray(i))<<0;
     2d6:	0f 2e       	mov	r0, r31
     2d8:	fd ee       	ldi	r31, 0xED	; 237
     2da:	ef 2e       	mov	r14, r31
     2dc:	f1 2c       	mov	r15, r1
     2de:	f0 2d       	mov	r31, r0
     2e0:	f7 01       	movw	r30, r14
     2e2:	10 81       	ld	r17, Z
     2e4:	89 81       	ldd	r24, Y+1	; 0x01
     2e6:	9a 81       	ldd	r25, Y+2	; 0x02
     2e8:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     2ec:	10 7f       	andi	r17, 0xF0	; 240
     2ee:	8f 70       	andi	r24, 0x0F	; 15
     2f0:	81 2b       	or	r24, r17
     2f2:	f7 01       	movw	r30, r14
     2f4:	80 83       	st	Z, r24
		LCDDR6 =  (LCDDR6&0xF0)  |  (((0xF<<4)&getValueArray(i))>>4);
     2f6:	0f 2e       	mov	r0, r31
     2f8:	f2 ef       	ldi	r31, 0xF2	; 242
     2fa:	ef 2e       	mov	r14, r31
     2fc:	f1 2c       	mov	r15, r1
     2fe:	f0 2d       	mov	r31, r0
     300:	f7 01       	movw	r30, r14
     302:	10 81       	ld	r17, Z
     304:	89 81       	ldd	r24, Y+1	; 0x01
     306:	9a 81       	ldd	r25, Y+2	; 0x02
     308:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     30c:	80 7f       	andi	r24, 0xF0	; 240
     30e:	99 27       	eor	r25, r25
     310:	95 95       	asr	r25
     312:	87 95       	ror	r24
     314:	95 95       	asr	r25
     316:	87 95       	ror	r24
     318:	95 95       	asr	r25
     31a:	87 95       	ror	r24
     31c:	95 95       	asr	r25
     31e:	87 95       	ror	r24
     320:	10 7f       	andi	r17, 0xF0	; 240
     322:	81 2b       	or	r24, r17
     324:	f7 01       	movw	r30, r14
     326:	80 83       	st	Z, r24
		LCDDR11 = (LCDDR11&0xF0) |  (((0xF<<8)&getValueArray(i))>>8);
     328:	0f 2e       	mov	r0, r31
     32a:	f7 ef       	ldi	r31, 0xF7	; 247
     32c:	ef 2e       	mov	r14, r31
     32e:	f1 2c       	mov	r15, r1
     330:	f0 2d       	mov	r31, r0
     332:	f7 01       	movw	r30, r14
     334:	10 81       	ld	r17, Z
     336:	89 81       	ldd	r24, Y+1	; 0x01
     338:	9a 81       	ldd	r25, Y+2	; 0x02
     33a:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     33e:	88 27       	eor	r24, r24
     340:	9f 70       	andi	r25, 0x0F	; 15
     342:	10 7f       	andi	r17, 0xF0	; 240
     344:	19 2b       	or	r17, r25
     346:	f7 01       	movw	r30, r14
     348:	10 83       	st	Z, r17
		LCDDR16 = (LCDDR16&0xF0) | (((0xF<<12)&getValueArray(i))>>12);
     34a:	0f 2e       	mov	r0, r31
     34c:	fc ef       	ldi	r31, 0xFC	; 252
     34e:	ef 2e       	mov	r14, r31
     350:	f1 2c       	mov	r15, r1
     352:	f0 2d       	mov	r31, r0
     354:	f7 01       	movw	r30, r14
     356:	10 81       	ld	r17, Z
     358:	89 81       	ldd	r24, Y+1	; 0x01
     35a:	9a 81       	ldd	r25, Y+2	; 0x02
     35c:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     360:	10 7f       	andi	r17, 0xF0	; 240
     362:	95 95       	asr	r25
     364:	95 95       	asr	r25
     366:	95 95       	asr	r25
     368:	95 95       	asr	r25
     36a:	91 2b       	or	r25, r17
     36c:	f7 01       	movw	r30, r14
     36e:	90 83       	st	Z, r25
     370:	f9 c0       	rjmp	.+498    	; 0x564 <__stack+0x65>
		
	} else if(pos==3){
     372:	63 30       	cpi	r22, 0x03	; 3
     374:	71 05       	cpc	r23, r1
     376:	09 f0       	breq	.+2      	; 0x37a <__EEPROM_REGION_LENGTH__+0x17a>
     378:	50 c0       	rjmp	.+160    	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
		LCDDR1 =     (LCDDR1&0x0F)  |       ((0xF&getValueArray(i))<<4);
     37a:	0f 2e       	mov	r0, r31
     37c:	fd ee       	ldi	r31, 0xED	; 237
     37e:	ef 2e       	mov	r14, r31
     380:	f1 2c       	mov	r15, r1
     382:	f0 2d       	mov	r31, r0
     384:	f7 01       	movw	r30, r14
     386:	10 81       	ld	r17, Z
     388:	89 81       	ldd	r24, Y+1	; 0x01
     38a:	9a 81       	ldd	r25, Y+2	; 0x02
     38c:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     390:	1f 70       	andi	r17, 0x0F	; 15
     392:	82 95       	swap	r24
     394:	92 95       	swap	r25
     396:	90 7f       	andi	r25, 0xF0	; 240
     398:	98 27       	eor	r25, r24
     39a:	80 7f       	andi	r24, 0xF0	; 240
     39c:	98 27       	eor	r25, r24
     39e:	81 2b       	or	r24, r17
     3a0:	f7 01       	movw	r30, r14
     3a2:	80 83       	st	Z, r24
		LCDDR6 =     (LCDDR6&0x0F)  |  (((0xF<<4)&getValueArray(i))>>0);
     3a4:	0f 2e       	mov	r0, r31
     3a6:	f2 ef       	ldi	r31, 0xF2	; 242
     3a8:	ef 2e       	mov	r14, r31
     3aa:	f1 2c       	mov	r15, r1
     3ac:	f0 2d       	mov	r31, r0
     3ae:	f7 01       	movw	r30, r14
     3b0:	10 81       	ld	r17, Z
     3b2:	89 81       	ldd	r24, Y+1	; 0x01
     3b4:	9a 81       	ldd	r25, Y+2	; 0x02
     3b6:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     3ba:	1f 70       	andi	r17, 0x0F	; 15
     3bc:	80 7f       	andi	r24, 0xF0	; 240
     3be:	81 2b       	or	r24, r17
     3c0:	f7 01       	movw	r30, r14
     3c2:	80 83       	st	Z, r24
		LCDDR11 =    (LCDDR11&0x0F) |  (((0xF<<8)&getValueArray(i))>>4);
     3c4:	0f 2e       	mov	r0, r31
     3c6:	f7 ef       	ldi	r31, 0xF7	; 247
     3c8:	ef 2e       	mov	r14, r31
     3ca:	f1 2c       	mov	r15, r1
     3cc:	f0 2d       	mov	r31, r0
     3ce:	f7 01       	movw	r30, r14
     3d0:	10 81       	ld	r17, Z
     3d2:	89 81       	ldd	r24, Y+1	; 0x01
     3d4:	9a 81       	ldd	r25, Y+2	; 0x02
     3d6:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     3da:	88 27       	eor	r24, r24
     3dc:	9f 70       	andi	r25, 0x0F	; 15
     3de:	95 95       	asr	r25
     3e0:	87 95       	ror	r24
     3e2:	95 95       	asr	r25
     3e4:	87 95       	ror	r24
     3e6:	95 95       	asr	r25
     3e8:	87 95       	ror	r24
     3ea:	95 95       	asr	r25
     3ec:	87 95       	ror	r24
     3ee:	1f 70       	andi	r17, 0x0F	; 15
     3f0:	81 2b       	or	r24, r17
     3f2:	f7 01       	movw	r30, r14
     3f4:	80 83       	st	Z, r24
		LCDDR16 =    (LCDDR16&0x0F) | (((0xF<<12)&getValueArray(i))>>8);
     3f6:	0f 2e       	mov	r0, r31
     3f8:	fc ef       	ldi	r31, 0xFC	; 252
     3fa:	ef 2e       	mov	r14, r31
     3fc:	f1 2c       	mov	r15, r1
     3fe:	f0 2d       	mov	r31, r0
     400:	f7 01       	movw	r30, r14
     402:	10 81       	ld	r17, Z
     404:	89 81       	ldd	r24, Y+1	; 0x01
     406:	9a 81       	ldd	r25, Y+2	; 0x02
     408:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     40c:	88 27       	eor	r24, r24
     40e:	90 7f       	andi	r25, 0xF0	; 240
     410:	1f 70       	andi	r17, 0x0F	; 15
     412:	19 2b       	or	r17, r25
     414:	f7 01       	movw	r30, r14
     416:	10 83       	st	Z, r17
     418:	a5 c0       	rjmp	.+330    	; 0x564 <__stack+0x65>
		
	} else if(pos==4){
     41a:	64 30       	cpi	r22, 0x04	; 4
     41c:	71 05       	cpc	r23, r1
     41e:	09 f0       	breq	.+2      	; 0x422 <__DATA_REGION_LENGTH__+0x22>
     420:	4e c0       	rjmp	.+156    	; 0x4be <__DATA_REGION_LENGTH__+0xbe>
		LCDDR2 =  (LCDDR2&0xF0)  |        (0xF&getValueArray(i))<<0;
     422:	0f 2e       	mov	r0, r31
     424:	fe ee       	ldi	r31, 0xEE	; 238
     426:	ef 2e       	mov	r14, r31
     428:	f1 2c       	mov	r15, r1
     42a:	f0 2d       	mov	r31, r0
     42c:	f7 01       	movw	r30, r14
     42e:	10 81       	ld	r17, Z
     430:	89 81       	ldd	r24, Y+1	; 0x01
     432:	9a 81       	ldd	r25, Y+2	; 0x02
     434:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     438:	10 7f       	andi	r17, 0xF0	; 240
     43a:	8f 70       	andi	r24, 0x0F	; 15
     43c:	81 2b       	or	r24, r17
     43e:	f7 01       	movw	r30, r14
     440:	80 83       	st	Z, r24
		LCDDR7 =  (LCDDR7&0xF0)  |  (((0xF<<4)&getValueArray(i))>>4);
     442:	0f 2e       	mov	r0, r31
     444:	f3 ef       	ldi	r31, 0xF3	; 243
     446:	ef 2e       	mov	r14, r31
     448:	f1 2c       	mov	r15, r1
     44a:	f0 2d       	mov	r31, r0
     44c:	f7 01       	movw	r30, r14
     44e:	10 81       	ld	r17, Z
     450:	89 81       	ldd	r24, Y+1	; 0x01
     452:	9a 81       	ldd	r25, Y+2	; 0x02
     454:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     458:	80 7f       	andi	r24, 0xF0	; 240
     45a:	99 27       	eor	r25, r25
     45c:	95 95       	asr	r25
     45e:	87 95       	ror	r24
     460:	95 95       	asr	r25
     462:	87 95       	ror	r24
     464:	95 95       	asr	r25
     466:	87 95       	ror	r24
     468:	95 95       	asr	r25
     46a:	87 95       	ror	r24
     46c:	10 7f       	andi	r17, 0xF0	; 240
     46e:	81 2b       	or	r24, r17
     470:	f7 01       	movw	r30, r14
     472:	80 83       	st	Z, r24
		LCDDR12 = (LCDDR12&0xF0) |  (((0xF<<8)&getValueArray(i))>>8);
     474:	0f 2e       	mov	r0, r31
     476:	f8 ef       	ldi	r31, 0xF8	; 248
     478:	ef 2e       	mov	r14, r31
     47a:	f1 2c       	mov	r15, r1
     47c:	f0 2d       	mov	r31, r0
     47e:	f7 01       	movw	r30, r14
     480:	10 81       	ld	r17, Z
     482:	89 81       	ldd	r24, Y+1	; 0x01
     484:	9a 81       	ldd	r25, Y+2	; 0x02
     486:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     48a:	88 27       	eor	r24, r24
     48c:	9f 70       	andi	r25, 0x0F	; 15
     48e:	10 7f       	andi	r17, 0xF0	; 240
     490:	19 2b       	or	r17, r25
     492:	f7 01       	movw	r30, r14
     494:	10 83       	st	Z, r17
		LCDDR17 = (LCDDR17&0xF0) | (((0xF<<12)&getValueArray(i))>>12);
     496:	0f 2e       	mov	r0, r31
     498:	fd ef       	ldi	r31, 0xFD	; 253
     49a:	ef 2e       	mov	r14, r31
     49c:	f1 2c       	mov	r15, r1
     49e:	f0 2d       	mov	r31, r0
     4a0:	f7 01       	movw	r30, r14
     4a2:	10 81       	ld	r17, Z
     4a4:	89 81       	ldd	r24, Y+1	; 0x01
     4a6:	9a 81       	ldd	r25, Y+2	; 0x02
     4a8:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     4ac:	10 7f       	andi	r17, 0xF0	; 240
     4ae:	95 95       	asr	r25
     4b0:	95 95       	asr	r25
     4b2:	95 95       	asr	r25
     4b4:	95 95       	asr	r25
     4b6:	91 2b       	or	r25, r17
     4b8:	f7 01       	movw	r30, r14
     4ba:	90 83       	st	Z, r25
     4bc:	53 c0       	rjmp	.+166    	; 0x564 <__stack+0x65>
		
	} else if(pos==5){
     4be:	65 30       	cpi	r22, 0x05	; 5
     4c0:	71 05       	cpc	r23, r1
     4c2:	09 f0       	breq	.+2      	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
     4c4:	4f c0       	rjmp	.+158    	; 0x564 <__stack+0x65>
		LCDDR2 =     (LCDDR2&0x0F)  |       ((0xF&getValueArray(i))<<4);
     4c6:	0f 2e       	mov	r0, r31
     4c8:	fe ee       	ldi	r31, 0xEE	; 238
     4ca:	ef 2e       	mov	r14, r31
     4cc:	f1 2c       	mov	r15, r1
     4ce:	f0 2d       	mov	r31, r0
     4d0:	f7 01       	movw	r30, r14
     4d2:	10 81       	ld	r17, Z
     4d4:	89 81       	ldd	r24, Y+1	; 0x01
     4d6:	9a 81       	ldd	r25, Y+2	; 0x02
     4d8:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     4dc:	1f 70       	andi	r17, 0x0F	; 15
     4de:	82 95       	swap	r24
     4e0:	92 95       	swap	r25
     4e2:	90 7f       	andi	r25, 0xF0	; 240
     4e4:	98 27       	eor	r25, r24
     4e6:	80 7f       	andi	r24, 0xF0	; 240
     4e8:	98 27       	eor	r25, r24
     4ea:	81 2b       	or	r24, r17
     4ec:	f7 01       	movw	r30, r14
     4ee:	80 83       	st	Z, r24
		LCDDR7 =     (LCDDR7&0x0F)  |  (((0xF<<4)&getValueArray(i))>>0);
     4f0:	0f 2e       	mov	r0, r31
     4f2:	f3 ef       	ldi	r31, 0xF3	; 243
     4f4:	ef 2e       	mov	r14, r31
     4f6:	f1 2c       	mov	r15, r1
     4f8:	f0 2d       	mov	r31, r0
     4fa:	f7 01       	movw	r30, r14
     4fc:	10 81       	ld	r17, Z
     4fe:	89 81       	ldd	r24, Y+1	; 0x01
     500:	9a 81       	ldd	r25, Y+2	; 0x02
     502:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     506:	1f 70       	andi	r17, 0x0F	; 15
     508:	80 7f       	andi	r24, 0xF0	; 240
     50a:	81 2b       	or	r24, r17
     50c:	f7 01       	movw	r30, r14
     50e:	80 83       	st	Z, r24
		LCDDR12 =    (LCDDR12&0x0F) |  (((0xF<<8)&getValueArray(i))>>4);
     510:	0f 2e       	mov	r0, r31
     512:	f8 ef       	ldi	r31, 0xF8	; 248
     514:	ef 2e       	mov	r14, r31
     516:	f1 2c       	mov	r15, r1
     518:	f0 2d       	mov	r31, r0
     51a:	f7 01       	movw	r30, r14
     51c:	10 81       	ld	r17, Z
     51e:	89 81       	ldd	r24, Y+1	; 0x01
     520:	9a 81       	ldd	r25, Y+2	; 0x02
     522:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     526:	88 27       	eor	r24, r24
     528:	9f 70       	andi	r25, 0x0F	; 15
     52a:	95 95       	asr	r25
     52c:	87 95       	ror	r24
     52e:	95 95       	asr	r25
     530:	87 95       	ror	r24
     532:	95 95       	asr	r25
     534:	87 95       	ror	r24
     536:	95 95       	asr	r25
     538:	87 95       	ror	r24
     53a:	1f 70       	andi	r17, 0x0F	; 15
     53c:	81 2b       	or	r24, r17
     53e:	f7 01       	movw	r30, r14
     540:	80 83       	st	Z, r24
		LCDDR17 =    (LCDDR17&0x0F) | (((0xF<<12)&getValueArray(i))>>8);
     542:	0f 2e       	mov	r0, r31
     544:	fd ef       	ldi	r31, 0xFD	; 253
     546:	ef 2e       	mov	r14, r31
     548:	f1 2c       	mov	r15, r1
     54a:	f0 2d       	mov	r31, r0
     54c:	f7 01       	movw	r30, r14
     54e:	10 81       	ld	r17, Z
     550:	89 81       	ldd	r24, Y+1	; 0x01
     552:	9a 81       	ldd	r25, Y+2	; 0x02
     554:	0e 94 7d 00 	call	0xfa	; 0xfa <getValueArray>
     558:	88 27       	eor	r24, r24
     55a:	90 7f       	andi	r25, 0xF0	; 240
     55c:	1f 70       	andi	r17, 0x0F	; 15
     55e:	19 2b       	or	r17, r25
     560:	f7 01       	movw	r30, r14
     562:	10 83       	st	Z, r17
		
	}
	

}
     564:	0f 90       	pop	r0
     566:	0f 90       	pop	r0
     568:	df 91       	pop	r29
     56a:	cf 91       	pop	r28
     56c:	1f 91       	pop	r17
     56e:	ff 90       	pop	r15
     570:	ef 90       	pop	r14
     572:	08 95       	ret

00000574 <printAt>:

void printAt(long num, int pos) {
     574:	cf 92       	push	r12
     576:	df 92       	push	r13
     578:	ef 92       	push	r14
     57a:	ff 92       	push	r15
     57c:	0f 93       	push	r16
     57e:	1f 93       	push	r17
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	00 d0       	rcall	.+0      	; 0x586 <printAt+0x12>
     586:	cd b7       	in	r28, 0x3d	; 61
     588:	de b7       	in	r29, 0x3e	; 62
     58a:	6b 01       	movw	r12, r22
     58c:	7c 01       	movw	r14, r24
     58e:	8a 01       	movw	r16, r20
    int pp = pos;
    writeChar( (num % 100) / 10 + '0', pp);
     590:	24 e6       	ldi	r18, 0x64	; 100
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	40 e0       	ldi	r20, 0x00	; 0
     596:	50 e0       	ldi	r21, 0x00	; 0
     598:	0e 94 27 11 	call	0x224e	; 0x224e <__divmodsi4>
     59c:	2a e0       	ldi	r18, 0x0A	; 10
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	40 e0       	ldi	r20, 0x00	; 0
     5a2:	50 e0       	ldi	r21, 0x00	; 0
     5a4:	0e 94 27 11 	call	0x224e	; 0x224e <__divmodsi4>
     5a8:	b8 01       	movw	r22, r16
     5aa:	80 e3       	ldi	r24, 0x30	; 48
     5ac:	82 0f       	add	r24, r18
     5ae:	0e 94 a6 00 	call	0x14c	; 0x14c <writeChar>
	for(volatile int i=0; i<1000; i++){
     5b2:	1a 82       	std	Y+2, r1	; 0x02
     5b4:	19 82       	std	Y+1, r1	; 0x01
     5b6:	89 81       	ldd	r24, Y+1	; 0x01
     5b8:	9a 81       	ldd	r25, Y+2	; 0x02
     5ba:	88 3e       	cpi	r24, 0xE8	; 232
     5bc:	93 40       	sbci	r25, 0x03	; 3
     5be:	54 f4       	brge	.+20     	; 0x5d4 <printAt+0x60>
     5c0:	89 81       	ldd	r24, Y+1	; 0x01
     5c2:	9a 81       	ldd	r25, Y+2	; 0x02
     5c4:	01 96       	adiw	r24, 0x01	; 1
     5c6:	9a 83       	std	Y+2, r25	; 0x02
     5c8:	89 83       	std	Y+1, r24	; 0x01
     5ca:	89 81       	ldd	r24, Y+1	; 0x01
     5cc:	9a 81       	ldd	r25, Y+2	; 0x02
     5ce:	88 3e       	cpi	r24, 0xE8	; 232
     5d0:	93 40       	sbci	r25, 0x03	; 3
     5d2:	b4 f3       	brlt	.-20     	; 0x5c0 <printAt+0x4c>
		
	}
    pp++;
    writeChar( num % 10 + '0', pp);
     5d4:	0f 5f       	subi	r16, 0xFF	; 255
     5d6:	1f 4f       	sbci	r17, 0xFF	; 255
     5d8:	c7 01       	movw	r24, r14
     5da:	b6 01       	movw	r22, r12
     5dc:	2a e0       	ldi	r18, 0x0A	; 10
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	40 e0       	ldi	r20, 0x00	; 0
     5e2:	50 e0       	ldi	r21, 0x00	; 0
     5e4:	0e 94 27 11 	call	0x224e	; 0x224e <__divmodsi4>
     5e8:	86 2f       	mov	r24, r22
     5ea:	b8 01       	movw	r22, r16
     5ec:	80 5d       	subi	r24, 0xD0	; 208
     5ee:	0e 94 a6 00 	call	0x14c	; 0x14c <writeChar>
}
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	df 91       	pop	r29
     5f8:	cf 91       	pop	r28
     5fa:	1f 91       	pop	r17
     5fc:	0f 91       	pop	r16
     5fe:	ff 90       	pop	r15
     600:	ef 90       	pop	r14
     602:	df 90       	pop	r13
     604:	cf 90       	pop	r12
     606:	08 95       	ret

00000608 <Gui__init>:
#include <stdio.h>


//, pulseGenerator pulse1, pulseGenerator pulse2

void Gui__init(guiObj* self) {
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	ec 01       	movw	r28, r24

    //self->pulse1 = pulse1;
    //self->currentPulse = pulse1;
    //self->pulse2 = pulse2;

    self->pos = 0;
     60e:	19 aa       	std	Y+49, r1	; 0x31
     610:	18 aa       	std	Y+48, r1	; 0x30

    if (!self->initialized)
     612:	8e a5       	ldd	r24, Y+46	; 0x2e
     614:	9f a5       	ldd	r25, Y+47	; 0x2f
     616:	89 2b       	or	r24, r25
     618:	41 f4       	brne	.+16     	; 0x62a <Gui__init+0x22>
    {
        LCD_Init();
     61a:	0e 94 57 00 	call	0xae	; 0xae <LCD_Init>
        button_init();
     61e:	0e 94 69 00 	call	0xd2	; 0xd2 <button_init>
        self->initialized = 1;
     622:	81 e0       	ldi	r24, 0x01	; 1
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	9f a7       	std	Y+47, r25	; 0x2f
     628:	8e a7       	std	Y+46, r24	; 0x2e
    }

    printAt(self->pulse1.freq,0);
     62a:	68 89       	ldd	r22, Y+16	; 0x10
     62c:	79 89       	ldd	r23, Y+17	; 0x11
     62e:	07 2e       	mov	r0, r23
     630:	00 0c       	add	r0, r0
     632:	88 0b       	sbc	r24, r24
     634:	99 0b       	sbc	r25, r25
     636:	40 e0       	ldi	r20, 0x00	; 0
     638:	50 e0       	ldi	r21, 0x00	; 0
     63a:	0e 94 ba 02 	call	0x574	; 0x574 <printAt>
    printAt(self->pulse2.freq,4);
     63e:	6e 8d       	ldd	r22, Y+30	; 0x1e
     640:	7f 8d       	ldd	r23, Y+31	; 0x1f
     642:	07 2e       	mov	r0, r23
     644:	00 0c       	add	r0, r0
     646:	88 0b       	sbc	r24, r24
     648:	99 0b       	sbc	r25, r25
     64a:	44 e0       	ldi	r20, 0x04	; 4
     64c:	50 e0       	ldi	r21, 0x00	; 0
     64e:	0e 94 ba 02 	call	0x574	; 0x574 <printAt>

    
    

 }
     652:	df 91       	pop	r29
     654:	cf 91       	pop	r28
     656:	08 95       	ret

00000658 <readJoystick>:
    pp++;
    writeChar( num % 10 + '0', pp);
}

int readJoystick(void){
    if(PINB>>7==0){ // 7 down
     658:	1f 9b       	sbis	0x03, 7	; 3
     65a:	0b c0       	rjmp	.+22     	; 0x672 <readJoystick+0x1a>
        return 7;
    }else if((PINB & (1<<6))==0){ // 6 up
     65c:	1e 9b       	sbis	0x03, 6	; 3
     65e:	0c c0       	rjmp	.+24     	; 0x678 <readJoystick+0x20>
        return 6;
    }else if((PINB & (1<<4))==0){ // 4 center
     660:	1c 9b       	sbis	0x03, 4	; 3
     662:	0d c0       	rjmp	.+26     	; 0x67e <readJoystick+0x26>
        return 4;
    }else if((PINE & (1<<2))==0){ // 2 left
     664:	62 9b       	sbis	0x0c, 2	; 12
     666:	0e c0       	rjmp	.+28     	; 0x684 <readJoystick+0x2c>
        return 2;
    }else if((PINE & (1<<3))==0){ // 3 right
     668:	63 9b       	sbis	0x0c, 3	; 12
     66a:	0f c0       	rjmp	.+30     	; 0x68a <readJoystick+0x32>
        return 3;
    }else{
        return 0;
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	08 95       	ret
    writeChar( num % 10 + '0', pp);
}

int readJoystick(void){
    if(PINB>>7==0){ // 7 down
        return 7;
     672:	87 e0       	ldi	r24, 0x07	; 7
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	08 95       	ret
    }else if((PINB & (1<<6))==0){ // 6 up
        return 6;
     678:	86 e0       	ldi	r24, 0x06	; 6
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	08 95       	ret
    }else if((PINB & (1<<4))==0){ // 4 center
        return 4;
     67e:	84 e0       	ldi	r24, 0x04	; 4
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	08 95       	ret
    }else if((PINE & (1<<2))==0){ // 2 left
        return 2;
     684:	82 e0       	ldi	r24, 0x02	; 2
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	08 95       	ret
    }else if((PINE & (1<<3))==0){ // 3 right
        return 3;
     68a:	83 e0       	ldi	r24, 0x03	; 3
     68c:	90 e0       	ldi	r25, 0x00	; 0
    }else{
        return 0;
    }
}
     68e:	08 95       	ret

00000690 <updateGui>:





void updateGui(guiObj* self){
     690:	cf 92       	push	r12
     692:	df 92       	push	r13
     694:	ef 92       	push	r14
     696:	ff 92       	push	r15
     698:	0f 93       	push	r16
     69a:	1f 93       	push	r17
     69c:	cf 93       	push	r28
     69e:	df 93       	push	r29
     6a0:	ec 01       	movw	r28, r24

    
    int value = readJoystick();
     6a2:	0e 94 2c 03 	call	0x658	; 0x658 <readJoystick>
    if(value==7){
     6a6:	87 30       	cpi	r24, 0x07	; 7
     6a8:	91 05       	cpc	r25, r1
     6aa:	21 f5       	brne	.+72     	; 0x6f4 <updateGui+0x64>
        if(!(self->currentPulse.freq<=0)){
     6ac:	8c a5       	ldd	r24, Y+44	; 0x2c
     6ae:	9d a5       	ldd	r25, Y+45	; 0x2d
     6b0:	18 16       	cp	r1, r24
     6b2:	19 06       	cpc	r1, r25
     6b4:	0c f0       	brlt	.+2      	; 0x6b8 <updateGui+0x28>
     6b6:	79 c0       	rjmp	.+242    	; 0x7aa <updateGui+0x11a>
            ASYNC(&self->currentPulse ,decFreq ,NULL );
     6b8:	8e 01       	movw	r16, r28
     6ba:	00 5e       	subi	r16, 0xE0	; 224
     6bc:	1f 4f       	sbci	r17, 0xFF	; 255
     6be:	c1 2c       	mov	r12, r1
     6c0:	d1 2c       	mov	r13, r1
     6c2:	0f 2e       	mov	r0, r31
     6c4:	f7 ec       	ldi	r31, 0xC7	; 199
     6c6:	ef 2e       	mov	r14, r31
     6c8:	f4 e0       	ldi	r31, 0x04	; 4
     6ca:	ff 2e       	mov	r15, r31
     6cc:	f0 2d       	mov	r31, r0
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	a9 01       	movw	r20, r18
     6d4:	60 e0       	ldi	r22, 0x00	; 0
     6d6:	70 e0       	ldi	r23, 0x00	; 0
     6d8:	cb 01       	movw	r24, r22
     6da:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <async>
            printAt(self->currentPulse.freq,self->pos);
     6de:	48 a9       	ldd	r20, Y+48	; 0x30
     6e0:	59 a9       	ldd	r21, Y+49	; 0x31
     6e2:	6c a5       	ldd	r22, Y+44	; 0x2c
     6e4:	7d a5       	ldd	r23, Y+45	; 0x2d
     6e6:	07 2e       	mov	r0, r23
     6e8:	00 0c       	add	r0, r0
     6ea:	88 0b       	sbc	r24, r24
     6ec:	99 0b       	sbc	r25, r25
     6ee:	0e 94 ba 02 	call	0x574	; 0x574 <printAt>
     6f2:	5b c0       	rjmp	.+182    	; 0x7aa <updateGui+0x11a>
        }
    }else if(value==2){ //left
     6f4:	82 30       	cpi	r24, 0x02	; 2
     6f6:	91 05       	cpc	r25, r1
     6f8:	a1 f4       	brne	.+40     	; 0x722 <updateGui+0x92>
        self->currentPulse = self->pulse1;
     6fa:	8e e0       	ldi	r24, 0x0E	; 14
     6fc:	fe 01       	movw	r30, r28
     6fe:	34 96       	adiw	r30, 0x04	; 4
     700:	de 01       	movw	r26, r28
     702:	90 96       	adiw	r26, 0x20	; 32
     704:	01 90       	ld	r0, Z+
     706:	0d 92       	st	X+, r0
     708:	8a 95       	dec	r24
     70a:	e1 f7       	brne	.-8      	; 0x704 <updateGui+0x74>
        self->pos = 0;
     70c:	19 aa       	std	Y+49, r1	; 0x31
     70e:	18 aa       	std	Y+48, r1	; 0x30
        printAt(32,2);
     710:	42 e0       	ldi	r20, 0x02	; 2
     712:	50 e0       	ldi	r21, 0x00	; 0
     714:	60 e2       	ldi	r22, 0x20	; 32
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	0e 94 ba 02 	call	0x574	; 0x574 <printAt>
     720:	44 c0       	rjmp	.+136    	; 0x7aa <updateGui+0x11a>
    }else if(value==3){ //right
     722:	83 30       	cpi	r24, 0x03	; 3
     724:	91 05       	cpc	r25, r1
     726:	b1 f4       	brne	.+44     	; 0x754 <updateGui+0xc4>
        self->currentPulse = self->pulse2;
     728:	8e e0       	ldi	r24, 0x0E	; 14
     72a:	fe 01       	movw	r30, r28
     72c:	72 96       	adiw	r30, 0x12	; 18
     72e:	de 01       	movw	r26, r28
     730:	90 96       	adiw	r26, 0x20	; 32
     732:	01 90       	ld	r0, Z+
     734:	0d 92       	st	X+, r0
     736:	8a 95       	dec	r24
     738:	e1 f7       	brne	.-8      	; 0x732 <updateGui+0xa2>
        self->pos = 4;
     73a:	84 e0       	ldi	r24, 0x04	; 4
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	99 ab       	std	Y+49, r25	; 0x31
     740:	88 ab       	std	Y+48, r24	; 0x30
        printAt(33,2);
     742:	42 e0       	ldi	r20, 0x02	; 2
     744:	50 e0       	ldi	r21, 0x00	; 0
     746:	61 e2       	ldi	r22, 0x21	; 33
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	0e 94 ba 02 	call	0x574	; 0x574 <printAt>
     752:	2b c0       	rjmp	.+86     	; 0x7aa <updateGui+0x11a>
    }else if(value==6){ //upp
     754:	86 30       	cpi	r24, 0x06	; 6
     756:	91 05       	cpc	r25, r1
     758:	f1 f4       	brne	.+60     	; 0x796 <updateGui+0x106>
        ASYNC(&self->currentPulse ,incFreq ,NULL);
     75a:	8e 01       	movw	r16, r28
     75c:	00 5e       	subi	r16, 0xE0	; 224
     75e:	1f 4f       	sbci	r17, 0xFF	; 255
     760:	c1 2c       	mov	r12, r1
     762:	d1 2c       	mov	r13, r1
     764:	0f 2e       	mov	r0, r31
     766:	ff eb       	ldi	r31, 0xBF	; 191
     768:	ef 2e       	mov	r14, r31
     76a:	f4 e0       	ldi	r31, 0x04	; 4
     76c:	ff 2e       	mov	r15, r31
     76e:	f0 2d       	mov	r31, r0
     770:	20 e0       	ldi	r18, 0x00	; 0
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	a9 01       	movw	r20, r18
     776:	60 e0       	ldi	r22, 0x00	; 0
     778:	70 e0       	ldi	r23, 0x00	; 0
     77a:	cb 01       	movw	r24, r22
     77c:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <async>
        printAt(self->currentPulse.freq,self->pos);
     780:	48 a9       	ldd	r20, Y+48	; 0x30
     782:	59 a9       	ldd	r21, Y+49	; 0x31
     784:	6c a5       	ldd	r22, Y+44	; 0x2c
     786:	7d a5       	ldd	r23, Y+45	; 0x2d
     788:	07 2e       	mov	r0, r23
     78a:	00 0c       	add	r0, r0
     78c:	88 0b       	sbc	r24, r24
     78e:	99 0b       	sbc	r25, r25
     790:	0e 94 ba 02 	call	0x574	; 0x574 <printAt>
     794:	0a c0       	rjmp	.+20     	; 0x7aa <updateGui+0x11a>
    }else if(value==4){ //center
     796:	04 97       	sbiw	r24, 0x04	; 4
     798:	41 f0       	breq	.+16     	; 0x7aa <updateGui+0x11a>
        
    }else{
        printAt(34,2);
     79a:	42 e0       	ldi	r20, 0x02	; 2
     79c:	50 e0       	ldi	r21, 0x00	; 0
     79e:	62 e2       	ldi	r22, 0x22	; 34
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	80 e0       	ldi	r24, 0x00	; 0
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	0e 94 ba 02 	call	0x574	; 0x574 <printAt>
   

    


}
     7aa:	df 91       	pop	r29
     7ac:	cf 91       	pop	r28
     7ae:	1f 91       	pop	r17
     7b0:	0f 91       	pop	r16
     7b2:	ff 90       	pop	r15
     7b4:	ef 90       	pop	r14
     7b6:	df 90       	pop	r13
     7b8:	cf 90       	pop	r12
     7ba:	08 95       	ret

000007bc <run>:

    }
}

void run(mainObj self){
    INSTALL(&gui, updateGui, IRQ_PCINT0);
     7bc:	41 e0       	ldi	r20, 0x01	; 1
     7be:	68 e4       	ldi	r22, 0x48	; 72
     7c0:	73 e0       	ldi	r23, 0x03	; 3
     7c2:	88 e2       	ldi	r24, 0x28	; 40
     7c4:	91 e0       	ldi	r25, 0x01	; 1
     7c6:	0e 94 dd 10 	call	0x21ba	; 0x21ba <install>
    INSTALL(&gui, updateGui, IRQ_PCINT1);
     7ca:	42 e0       	ldi	r20, 0x02	; 2
     7cc:	68 e4       	ldi	r22, 0x48	; 72
     7ce:	73 e0       	ldi	r23, 0x03	; 3
     7d0:	88 e2       	ldi	r24, 0x28	; 40
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	0e 94 dd 10 	call	0x21ba	; 0x21ba <install>


    SYNC(&pulse, cycle, NULL);
     7d8:	40 e0       	ldi	r20, 0x00	; 0
     7da:	50 e0       	ldi	r21, 0x00	; 0
     7dc:	66 e6       	ldi	r22, 0x66	; 102
     7de:	74 e0       	ldi	r23, 0x04	; 4
     7e0:	86 e1       	ldi	r24, 0x16	; 22
     7e2:	91 e0       	ldi	r25, 0x01	; 1
     7e4:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <sync>
    SYNC(&pulse2, cycle, NULL);
     7e8:	40 e0       	ldi	r20, 0x00	; 0
     7ea:	50 e0       	ldi	r21, 0x00	; 0
     7ec:	66 e6       	ldi	r22, 0x66	; 102
     7ee:	74 e0       	ldi	r23, 0x04	; 4
     7f0:	88 e0       	ldi	r24, 0x08	; 8
     7f2:	91 e0       	ldi	r25, 0x01	; 1
     7f4:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <sync>
     7f8:	08 95       	ret

000007fa <main>:



int main(void)
{
    pulseGenerator__init(&pulse, 4 , writer, 2); 
     7fa:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <writer>
     7fe:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <writer+0x1>
     802:	40 91 26 01 	lds	r20, 0x0126	; 0x800126 <writer+0x2>
     806:	50 91 27 01 	lds	r21, 0x0127	; 0x800127 <writer+0x3>
     80a:	02 e0       	ldi	r16, 0x02	; 2
     80c:	10 e0       	ldi	r17, 0x00	; 0
     80e:	64 e0       	ldi	r22, 0x04	; 4
     810:	70 e0       	ldi	r23, 0x00	; 0
     812:	86 e1       	ldi	r24, 0x16	; 22
     814:	91 e0       	ldi	r25, 0x01	; 1
     816:	0e 94 af 04 	call	0x95e	; 0x95e <pulseGenerator__init>
    pulseGenerator__init(&pulse2, 6 , writer, 1);
     81a:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <writer>
     81e:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <writer+0x1>
     822:	40 91 26 01 	lds	r20, 0x0126	; 0x800126 <writer+0x2>
     826:	50 91 27 01 	lds	r21, 0x0127	; 0x800127 <writer+0x3>
     82a:	01 e0       	ldi	r16, 0x01	; 1
     82c:	10 e0       	ldi	r17, 0x00	; 0
     82e:	66 e0       	ldi	r22, 0x06	; 6
     830:	70 e0       	ldi	r23, 0x00	; 0
     832:	88 e0       	ldi	r24, 0x08	; 8
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	0e 94 af 04 	call	0x95e	; 0x95e <pulseGenerator__init>
    gui.pulse1 = pulse;
     83a:	8e e0       	ldi	r24, 0x0E	; 14
     83c:	e6 e1       	ldi	r30, 0x16	; 22
     83e:	f1 e0       	ldi	r31, 0x01	; 1
     840:	ac e2       	ldi	r26, 0x2C	; 44
     842:	b1 e0       	ldi	r27, 0x01	; 1
     844:	01 90       	ld	r0, Z+
     846:	0d 92       	st	X+, r0
     848:	8a 95       	dec	r24
     84a:	e1 f7       	brne	.-8      	; 0x844 <main+0x4a>
    gui.pulse2= pulse2;
     84c:	8e e0       	ldi	r24, 0x0E	; 14
     84e:	e8 e0       	ldi	r30, 0x08	; 8
     850:	f1 e0       	ldi	r31, 0x01	; 1
     852:	aa e3       	ldi	r26, 0x3A	; 58
     854:	b1 e0       	ldi	r27, 0x01	; 1
     856:	01 90       	ld	r0, Z+
     858:	0d 92       	st	X+, r0
     85a:	8a 95       	dec	r24
     85c:	e1 f7       	brne	.-8      	; 0x856 <main+0x5c>
    gui.currentPulse = pulse;
     85e:	8e e0       	ldi	r24, 0x0E	; 14
     860:	e6 e1       	ldi	r30, 0x16	; 22
     862:	f1 e0       	ldi	r31, 0x01	; 1
     864:	a8 e4       	ldi	r26, 0x48	; 72
     866:	b1 e0       	ldi	r27, 0x01	; 1
     868:	01 90       	ld	r0, Z+
     86a:	0d 92       	st	X+, r0
     86c:	8a 95       	dec	r24
     86e:	e1 f7       	brne	.-8      	; 0x868 <main+0x6e>
    Gui__init(&gui);
     870:	88 e2       	ldi	r24, 0x28	; 40
     872:	91 e0       	ldi	r25, 0x01	; 1
     874:	0e 94 04 03 	call	0x608	; 0x608 <Gui__init>
   

    //ASYNC(&pulse, cycle, NULL);
   
    TINYTIMBER(&mainObject, run, NULL);
     878:	40 e0       	ldi	r20, 0x00	; 0
     87a:	50 e0       	ldi	r21, 0x00	; 0
     87c:	6e ed       	ldi	r22, 0xDE	; 222
     87e:	73 e0       	ldi	r23, 0x03	; 3
     880:	8a e5       	ldi	r24, 0x5A	; 90
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	0e 94 f7 10 	call	0x21ee	; 0x21ee <tinytimber>
     888:	ff cf       	rjmp	.-2      	; 0x888 <main+0x8e>

0000088a <write>:

#include "portWriter.h"
#include <avr/io.h>

void write(portWriter* self, int arg){
    if((PORTE>>arg)&1){
     88a:	8e b1       	in	r24, 0x0e	; 14
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	06 2e       	mov	r0, r22
     890:	02 c0       	rjmp	.+4      	; 0x896 <write+0xc>
     892:	95 95       	asr	r25
     894:	87 95       	ror	r24
     896:	0a 94       	dec	r0
     898:	e2 f7       	brpl	.-8      	; 0x892 <write+0x8>
     89a:	80 ff       	sbrs	r24, 0
     89c:	0c c0       	rjmp	.+24     	; 0x8b6 <write+0x2c>
        PORTE &= ~(1<<arg);
     89e:	2e b1       	in	r18, 0x0e	; 14
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	02 c0       	rjmp	.+4      	; 0x8aa <write+0x20>
     8a6:	88 0f       	add	r24, r24
     8a8:	99 1f       	adc	r25, r25
     8aa:	6a 95       	dec	r22
     8ac:	e2 f7       	brpl	.-8      	; 0x8a6 <write+0x1c>
     8ae:	80 95       	com	r24
     8b0:	82 23       	and	r24, r18
     8b2:	8e b9       	out	0x0e, r24	; 14
     8b4:	08 95       	ret
    }else{
        PORTE |= (1<<arg);
     8b6:	2e b1       	in	r18, 0x0e	; 14
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <write+0x38>
     8be:	88 0f       	add	r24, r24
     8c0:	99 1f       	adc	r25, r25
     8c2:	6a 95       	dec	r22
     8c4:	e2 f7       	brpl	.-8      	; 0x8be <write+0x34>
     8c6:	82 2b       	or	r24, r18
     8c8:	8e b9       	out	0x0e, r24	; 14
     8ca:	08 95       	ret

000008cc <cycle>:
    self->writer = writer;
    self->freq = freq;
 }


void cycle(pulseGenerator* self){
     8cc:	cf 92       	push	r12
     8ce:	df 92       	push	r13
     8d0:	ef 92       	push	r14
     8d2:	ff 92       	push	r15
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	ec 01       	movw	r28, r24

    //self->active = !(self->active);


    if(self->freq != 0){
     8de:	8c 85       	ldd	r24, Y+12	; 0x0c
     8e0:	9d 85       	ldd	r25, Y+13	; 0x0d
     8e2:	89 2b       	or	r24, r25
     8e4:	41 f0       	breq	.+16     	; 0x8f6 <cycle+0x2a>
        SYNC(&self->writer ,write, self->bit);
     8e6:	48 85       	ldd	r20, Y+8	; 0x08
     8e8:	59 85       	ldd	r21, Y+9	; 0x09
     8ea:	65 e4       	ldi	r22, 0x45	; 69
     8ec:	74 e0       	ldi	r23, 0x04	; 4
     8ee:	ce 01       	movw	r24, r28
     8f0:	04 96       	adiw	r24, 0x04	; 4
     8f2:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <sync>
    }

    

    AFTER(MSEC( (1000)/(self->freq) /2 ) , self, cycle, NULL);
     8f6:	6c 85       	ldd	r22, Y+12	; 0x0c
     8f8:	7d 85       	ldd	r23, Y+13	; 0x0d
     8fa:	84 ef       	ldi	r24, 0xF4	; 244
     8fc:	91 e0       	ldi	r25, 0x01	; 1
     8fe:	0e 94 13 11 	call	0x2226	; 0x2226 <__divmodhi4>
     902:	2d e7       	ldi	r18, 0x7D	; 125
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	db 01       	movw	r26, r22
     908:	0e 94 4c 11 	call	0x2298	; 0x2298 <__usmulhisi3>
     90c:	8b 01       	movw	r16, r22
     90e:	9c 01       	movw	r18, r24
     910:	99 23       	and	r25, r25
     912:	24 f4       	brge	.+8      	; 0x91c <cycle+0x50>
     914:	0d 5f       	subi	r16, 0xFD	; 253
     916:	1f 4f       	sbci	r17, 0xFF	; 255
     918:	2f 4f       	sbci	r18, 0xFF	; 255
     91a:	3f 4f       	sbci	r19, 0xFF	; 255
     91c:	c9 01       	movw	r24, r18
     91e:	b8 01       	movw	r22, r16
     920:	95 95       	asr	r25
     922:	87 95       	ror	r24
     924:	77 95       	ror	r23
     926:	67 95       	ror	r22
     928:	95 95       	asr	r25
     92a:	87 95       	ror	r24
     92c:	77 95       	ror	r23
     92e:	67 95       	ror	r22
     930:	c1 2c       	mov	r12, r1
     932:	d1 2c       	mov	r13, r1
     934:	0f 2e       	mov	r0, r31
     936:	f6 e6       	ldi	r31, 0x66	; 102
     938:	ef 2e       	mov	r14, r31
     93a:	f4 e0       	ldi	r31, 0x04	; 4
     93c:	ff 2e       	mov	r15, r31
     93e:	f0 2d       	mov	r31, r0
     940:	8e 01       	movw	r16, r28
     942:	20 e0       	ldi	r18, 0x00	; 0
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	a9 01       	movw	r20, r18
     948:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <async>
   // SEND( MSEC( (1000)/(self->freq) ) , MSEC(10)  , self, cycle, NULL);
    //SEND( MSEC( 1000 ) , 10  , self, cycle, NULL);


}
     94c:	df 91       	pop	r29
     94e:	cf 91       	pop	r28
     950:	1f 91       	pop	r17
     952:	0f 91       	pop	r16
     954:	ff 90       	pop	r15
     956:	ef 90       	pop	r14
     958:	df 90       	pop	r13
     95a:	cf 90       	pop	r12
     95c:	08 95       	ret

0000095e <pulseGenerator__init>:

#include "pulseGenerator.h"
#include "TinyTimber.h"


void pulseGenerator__init(pulseGenerator* self, int bit, portWriter writer, int freq) {
     95e:	0f 93       	push	r16
     960:	1f 93       	push	r17
     962:	fc 01       	movw	r30, r24
    self->bit = bit;
     964:	71 87       	std	Z+9, r23	; 0x09
     966:	60 87       	std	Z+8, r22	; 0x08
    self->active = 0;
     968:	13 86       	std	Z+11, r1	; 0x0b
     96a:	12 86       	std	Z+10, r1	; 0x0a
    self->writer = writer;
     96c:	24 83       	std	Z+4, r18	; 0x04
     96e:	35 83       	std	Z+5, r19	; 0x05
     970:	46 83       	std	Z+6, r20	; 0x06
     972:	57 83       	std	Z+7, r21	; 0x07
    self->freq = freq;
     974:	15 87       	std	Z+13, r17	; 0x0d
     976:	04 87       	std	Z+12, r16	; 0x0c
 }
     978:	1f 91       	pop	r17
     97a:	0f 91       	pop	r16
     97c:	08 95       	ret

0000097e <incFreq>:


}

void incFreq(pulseGenerator* self){
    self->freq++;
     97e:	fc 01       	movw	r30, r24
     980:	24 85       	ldd	r18, Z+12	; 0x0c
     982:	35 85       	ldd	r19, Z+13	; 0x0d
     984:	2f 5f       	subi	r18, 0xFF	; 255
     986:	3f 4f       	sbci	r19, 0xFF	; 255
     988:	35 87       	std	Z+13, r19	; 0x0d
     98a:	24 87       	std	Z+12, r18	; 0x0c
     98c:	08 95       	ret

0000098e <decFreq>:
}

void decFreq(pulseGenerator* self){
    self->freq--;
     98e:	fc 01       	movw	r30, r24
     990:	24 85       	ldd	r18, Z+12	; 0x0c
     992:	35 85       	ldd	r19, Z+13	; 0x0d
     994:	21 50       	subi	r18, 0x01	; 1
     996:	31 09       	sbc	r19, r1
     998:	35 87       	std	Z+13, r19	; 0x0d
     99a:	24 87       	std	Z+12, r18	; 0x0c
     99c:	08 95       	ret

0000099e <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     99e:	cf 93       	push	r28
     9a0:	df 93       	push	r29
     9a2:	00 d0       	rcall	.+0      	; 0x9a4 <initialize+0x6>
     9a4:	00 d0       	rcall	.+0      	; 0x9a6 <initialize+0x8>
     9a6:	cd b7       	in	r28, 0x3d	; 61
     9a8:	de b7       	in	r29, 0x3e	; 62
     9aa:	81 e5       	ldi	r24, 0x51	; 81
     9ac:	92 e0       	ldi	r25, 0x02	; 2
     9ae:	21 e3       	ldi	r18, 0x31	; 49
     9b0:	33 e0       	ldi	r19, 0x03	; 3
     9b2:	fc 01       	movw	r30, r24
     9b4:	70 97       	sbiw	r30, 0x10	; 16
     9b6:	91 83       	std	Z+1, r25	; 0x01
     9b8:	80 83       	st	Z, r24
     9ba:	40 96       	adiw	r24, 0x10	; 16
     9bc:	82 17       	cp	r24, r18
     9be:	93 07       	cpc	r25, r19
     9c0:	c1 f7       	brne	.-16     	; 0x9b2 <initialize+0x14>
     9c2:	10 92 22 03 	sts	0x0322, r1	; 0x800322 <messages+0xe1>
     9c6:	10 92 21 03 	sts	0x0321, r1	; 0x800321 <messages+0xe0>
     9ca:	ec e8       	ldi	r30, 0x8C	; 140
     9cc:	f1 e0       	ldi	r31, 0x01	; 1
     9ce:	89 ea       	ldi	r24, 0xA9	; 169
     9d0:	91 e0       	ldi	r25, 0x01	; 1
     9d2:	91 83       	std	Z+1, r25	; 0x01
     9d4:	80 83       	st	Z, r24
     9d6:	86 ec       	ldi	r24, 0xC6	; 198
     9d8:	91 e0       	ldi	r25, 0x01	; 1
     9da:	96 8f       	std	Z+30, r25	; 0x1e
     9dc:	85 8f       	std	Z+29, r24	; 0x1d
     9de:	a3 ee       	ldi	r26, 0xE3	; 227
     9e0:	b1 e0       	ldi	r27, 0x01	; 1
     9e2:	b3 af       	std	Z+59, r27	; 0x3b
     9e4:	a2 af       	std	Z+58, r26	; 0x3a
     9e6:	1d 92       	st	X+, r1
     9e8:	1c 92       	st	X, r1
     9ea:	fa 83       	std	Y+2, r31	; 0x02
     9ec:	e9 83       	std	Y+1, r30	; 0x01
     9ee:	ed e8       	ldi	r30, 0x8D	; 141
     9f0:	f3 e0       	ldi	r31, 0x03	; 3
     9f2:	fc 83       	std	Y+4, r31	; 0x04
     9f4:	eb 83       	std	Y+3, r30	; 0x03
     9f6:	89 81       	ldd	r24, Y+1	; 0x01
     9f8:	9a 81       	ldd	r25, Y+2	; 0x02
     9fa:	06 96       	adiw	r24, 0x06	; 6
     9fc:	0e 94 98 11 	call	0x2330	; 0x2330 <setjmp>
     a00:	8b 81       	ldd	r24, Y+3	; 0x03
     a02:	9c 81       	ldd	r25, Y+4	; 0x04
     a04:	e9 81       	ldd	r30, Y+1	; 0x01
     a06:	fa 81       	ldd	r31, Y+2	; 0x02
     a08:	97 8b       	std	Z+23, r25	; 0x17
     a0a:	86 8b       	std	Z+22, r24	; 0x16
     a0c:	91 8f       	std	Z+25, r25	; 0x19
     a0e:	80 8f       	std	Z+24, r24	; 0x18
     a10:	8f e6       	ldi	r24, 0x6F	; 111
     a12:	90 e1       	ldi	r25, 0x10	; 16
     a14:	94 8f       	std	Z+28, r25	; 0x1c
     a16:	83 8f       	std	Z+27, r24	; 0x1b
     a18:	15 82       	std	Z+5, r1	; 0x05
     a1a:	14 82       	std	Z+4, r1	; 0x04
     a1c:	7d 96       	adiw	r30, 0x1d	; 29
     a1e:	fa 83       	std	Y+2, r31	; 0x02
     a20:	e9 83       	std	Y+1, r30	; 0x01
     a22:	eb 81       	ldd	r30, Y+3	; 0x03
     a24:	fc 81       	ldd	r31, Y+4	; 0x04
     a26:	e0 5a       	subi	r30, 0xA0	; 160
     a28:	ff 4f       	sbci	r31, 0xFF	; 255
     a2a:	fc 83       	std	Y+4, r31	; 0x04
     a2c:	eb 83       	std	Y+3, r30	; 0x03
     a2e:	89 81       	ldd	r24, Y+1	; 0x01
     a30:	9a 81       	ldd	r25, Y+2	; 0x02
     a32:	80 50       	subi	r24, 0x00	; 0
     a34:	92 40       	sbci	r25, 0x02	; 2
     a36:	f9 f6       	brne	.-66     	; 0x9f6 <initialize+0x58>
     a38:	e4 e2       	ldi	r30, 0x24	; 36
     a3a:	f2 e0       	ldi	r31, 0x02	; 2
     a3c:	11 82       	std	Z+1, r1	; 0x01
     a3e:	10 82       	st	Z, r1
     a40:	15 82       	std	Z+5, r1	; 0x05
     a42:	14 82       	std	Z+4, r1	; 0x04
     a44:	13 82       	std	Z+3, r1	; 0x03
     a46:	12 82       	std	Z+2, r1	; 0x02
     a48:	e1 e6       	ldi	r30, 0x61	; 97
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	80 e8       	ldi	r24, 0x80	; 128
     a4e:	80 83       	st	Z, r24
     a50:	10 82       	st	Z, r1
     a52:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a56:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a5a:	84 e0       	ldi	r24, 0x04	; 4
     a5c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     a66:	0f 90       	pop	r0
     a68:	0f 90       	pop	r0
     a6a:	0f 90       	pop	r0
     a6c:	0f 90       	pop	r0
     a6e:	df 91       	pop	r29
     a70:	cf 91       	pop	r28
     a72:	08 95       	ret

00000a74 <dispatch>:
     a74:	cf 93       	push	r28
     a76:	df 93       	push	r29
     a78:	00 d0       	rcall	.+0      	; 0xa7a <dispatch+0x6>
     a7a:	cd b7       	in	r28, 0x3d	; 61
     a7c:	de b7       	in	r29, 0x3e	; 62
     a7e:	9a 83       	std	Y+2, r25	; 0x02
     a80:	89 83       	std	Y+1, r24	; 0x01
     a82:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a86:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a8a:	06 96       	adiw	r24, 0x06	; 6
     a8c:	0e 94 98 11 	call	0x2330	; 0x2330 <setjmp>
     a90:	89 2b       	or	r24, r25
     a92:	59 f4       	brne	.+22     	; 0xaaa <dispatch+0x36>
     a94:	89 81       	ldd	r24, Y+1	; 0x01
     a96:	9a 81       	ldd	r25, Y+2	; 0x02
     a98:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a9c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     aa0:	61 e0       	ldi	r22, 0x01	; 1
     aa2:	70 e0       	ldi	r23, 0x00	; 0
     aa4:	06 96       	adiw	r24, 0x06	; 6
     aa6:	0e 94 b8 11 	call	0x2370	; 0x2370 <longjmp>
     aaa:	0f 90       	pop	r0
     aac:	0f 90       	pop	r0
     aae:	df 91       	pop	r29
     ab0:	cf 91       	pop	r28
     ab2:	08 95       	ret

00000ab4 <schedule>:
     ab4:	0f 93       	push	r16
     ab6:	1f 93       	push	r17
     ab8:	cf 93       	push	r28
     aba:	df 93       	push	r29
     abc:	e0 91 66 01 	lds	r30, 0x0166	; 0x800166 <msgQ>
     ac0:	f0 91 67 01 	lds	r31, 0x0167	; 0x800167 <msgQ+0x1>
     ac4:	30 97       	sbiw	r30, 0x00	; 0
     ac6:	61 f1       	breq	.+88     	; 0xb20 <schedule+0x6c>
     ac8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     acc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     ad0:	00 97       	sbiw	r24, 0x00	; 0
     ad2:	31 f1       	breq	.+76     	; 0xb20 <schedule+0x6c>
     ad4:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     ad8:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     adc:	aa 81       	ldd	r26, Y+2	; 0x02
     ade:	bb 81       	ldd	r27, Y+3	; 0x03
     ae0:	10 97       	sbiw	r26, 0x00	; 0
     ae2:	79 f0       	breq	.+30     	; 0xb02 <schedule+0x4e>
     ae4:	46 81       	ldd	r20, Z+6	; 0x06
     ae6:	57 81       	ldd	r21, Z+7	; 0x07
     ae8:	60 85       	ldd	r22, Z+8	; 0x08
     aea:	71 85       	ldd	r23, Z+9	; 0x09
     aec:	16 96       	adiw	r26, 0x06	; 6
     aee:	0d 91       	ld	r16, X+
     af0:	1d 91       	ld	r17, X+
     af2:	2d 91       	ld	r18, X+
     af4:	3c 91       	ld	r19, X
     af6:	19 97       	sbiw	r26, 0x09	; 9
     af8:	40 1b       	sub	r20, r16
     afa:	51 0b       	sbc	r21, r17
     afc:	62 0b       	sbc	r22, r18
     afe:	73 0b       	sbc	r23, r19
     b00:	7a f4       	brpl	.+30     	; 0xb20 <schedule+0x6c>
     b02:	fc 01       	movw	r30, r24
     b04:	20 81       	ld	r18, Z
     b06:	31 81       	ldd	r19, Z+1	; 0x01
     b08:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     b0c:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     b10:	d1 83       	std	Z+1, r29	; 0x01
     b12:	c0 83       	st	Z, r28
     b14:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     b18:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     b1c:	0e 94 3a 05 	call	0xa74	; 0xa74 <dispatch>
     b20:	df 91       	pop	r29
     b22:	cf 91       	pop	r28
     b24:	1f 91       	pop	r17
     b26:	0f 91       	pop	r16
     b28:	08 95       	ret

00000b2a <__vector_1>:
     b2a:	1f 92       	push	r1
     b2c:	0f 92       	push	r0
     b2e:	0f b6       	in	r0, 0x3f	; 63
     b30:	0f 92       	push	r0
     b32:	11 24       	eor	r1, r1
     b34:	2f 93       	push	r18
     b36:	3f 93       	push	r19
     b38:	4f 93       	push	r20
     b3a:	5f 93       	push	r21
     b3c:	6f 93       	push	r22
     b3e:	7f 93       	push	r23
     b40:	8f 93       	push	r24
     b42:	9f 93       	push	r25
     b44:	af 93       	push	r26
     b46:	bf 93       	push	r27
     b48:	ef 93       	push	r30
     b4a:	ff 93       	push	r31
     b4c:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
     b50:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
     b54:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b58:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b5c:	c9 01       	movw	r24, r18
     b5e:	03 2e       	mov	r0, r19
     b60:	00 0c       	add	r0, r0
     b62:	aa 0b       	sbc	r26, r26
     b64:	bb 0b       	sbc	r27, r27
     b66:	dc 01       	movw	r26, r24
     b68:	99 27       	eor	r25, r25
     b6a:	88 27       	eor	r24, r24
     b6c:	60 e0       	ldi	r22, 0x00	; 0
     b6e:	70 e0       	ldi	r23, 0x00	; 0
     b70:	84 2b       	or	r24, r20
     b72:	95 2b       	or	r25, r21
     b74:	a6 2b       	or	r26, r22
     b76:	b7 2b       	or	r27, r23
     b78:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     b7c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     b80:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     b84:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     b88:	b0 9b       	sbis	0x16, 0	; 22
     b8a:	1b c0       	rjmp	.+54     	; 0xbc2 <__vector_1+0x98>
     b8c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b90:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b94:	c9 01       	movw	r24, r18
     b96:	01 96       	adiw	r24, 0x01	; 1
     b98:	09 2e       	mov	r0, r25
     b9a:	00 0c       	add	r0, r0
     b9c:	aa 0b       	sbc	r26, r26
     b9e:	bb 0b       	sbc	r27, r27
     ba0:	dc 01       	movw	r26, r24
     ba2:	99 27       	eor	r25, r25
     ba4:	88 27       	eor	r24, r24
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	84 2b       	or	r24, r20
     bac:	95 2b       	or	r25, r21
     bae:	a6 2b       	or	r26, r22
     bb0:	b7 2b       	or	r27, r23
     bb2:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     bb6:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     bba:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     bbe:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     bc2:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable>
     bc6:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0x1>
     bca:	30 97       	sbiw	r30, 0x00	; 0
     bcc:	39 f0       	breq	.+14     	; 0xbdc <__vector_1+0xb2>
     bce:	60 e0       	ldi	r22, 0x00	; 0
     bd0:	70 e0       	ldi	r23, 0x00	; 0
     bd2:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable>
     bd6:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0x1>
     bda:	09 95       	icall
     bdc:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
     be0:	ff 91       	pop	r31
     be2:	ef 91       	pop	r30
     be4:	bf 91       	pop	r27
     be6:	af 91       	pop	r26
     be8:	9f 91       	pop	r25
     bea:	8f 91       	pop	r24
     bec:	7f 91       	pop	r23
     bee:	6f 91       	pop	r22
     bf0:	5f 91       	pop	r21
     bf2:	4f 91       	pop	r20
     bf4:	3f 91       	pop	r19
     bf6:	2f 91       	pop	r18
     bf8:	0f 90       	pop	r0
     bfa:	0f be       	out	0x3f, r0	; 63
     bfc:	0f 90       	pop	r0
     bfe:	1f 90       	pop	r1
     c00:	18 95       	reti

00000c02 <__vector_2>:
     c02:	1f 92       	push	r1
     c04:	0f 92       	push	r0
     c06:	0f b6       	in	r0, 0x3f	; 63
     c08:	0f 92       	push	r0
     c0a:	11 24       	eor	r1, r1
     c0c:	2f 93       	push	r18
     c0e:	3f 93       	push	r19
     c10:	4f 93       	push	r20
     c12:	5f 93       	push	r21
     c14:	6f 93       	push	r22
     c16:	7f 93       	push	r23
     c18:	8f 93       	push	r24
     c1a:	9f 93       	push	r25
     c1c:	af 93       	push	r26
     c1e:	bf 93       	push	r27
     c20:	ef 93       	push	r30
     c22:	ff 93       	push	r31
     c24:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
     c28:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
     c2c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c30:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c34:	c9 01       	movw	r24, r18
     c36:	03 2e       	mov	r0, r19
     c38:	00 0c       	add	r0, r0
     c3a:	aa 0b       	sbc	r26, r26
     c3c:	bb 0b       	sbc	r27, r27
     c3e:	dc 01       	movw	r26, r24
     c40:	99 27       	eor	r25, r25
     c42:	88 27       	eor	r24, r24
     c44:	60 e0       	ldi	r22, 0x00	; 0
     c46:	70 e0       	ldi	r23, 0x00	; 0
     c48:	84 2b       	or	r24, r20
     c4a:	95 2b       	or	r25, r21
     c4c:	a6 2b       	or	r26, r22
     c4e:	b7 2b       	or	r27, r23
     c50:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     c54:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     c58:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     c5c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     c60:	b0 9b       	sbis	0x16, 0	; 22
     c62:	1b c0       	rjmp	.+54     	; 0xc9a <__vector_2+0x98>
     c64:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c68:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c6c:	c9 01       	movw	r24, r18
     c6e:	01 96       	adiw	r24, 0x01	; 1
     c70:	09 2e       	mov	r0, r25
     c72:	00 0c       	add	r0, r0
     c74:	aa 0b       	sbc	r26, r26
     c76:	bb 0b       	sbc	r27, r27
     c78:	dc 01       	movw	r26, r24
     c7a:	99 27       	eor	r25, r25
     c7c:	88 27       	eor	r24, r24
     c7e:	60 e0       	ldi	r22, 0x00	; 0
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	84 2b       	or	r24, r20
     c84:	95 2b       	or	r25, r21
     c86:	a6 2b       	or	r26, r22
     c88:	b7 2b       	or	r27, r23
     c8a:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     c8e:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     c92:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     c96:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     c9a:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x2>
     c9e:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x3>
     ca2:	30 97       	sbiw	r30, 0x00	; 0
     ca4:	39 f0       	breq	.+14     	; 0xcb4 <__vector_2+0xb2>
     ca6:	61 e0       	ldi	r22, 0x01	; 1
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x2>
     cae:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x3>
     cb2:	09 95       	icall
     cb4:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
     cb8:	ff 91       	pop	r31
     cba:	ef 91       	pop	r30
     cbc:	bf 91       	pop	r27
     cbe:	af 91       	pop	r26
     cc0:	9f 91       	pop	r25
     cc2:	8f 91       	pop	r24
     cc4:	7f 91       	pop	r23
     cc6:	6f 91       	pop	r22
     cc8:	5f 91       	pop	r21
     cca:	4f 91       	pop	r20
     ccc:	3f 91       	pop	r19
     cce:	2f 91       	pop	r18
     cd0:	0f 90       	pop	r0
     cd2:	0f be       	out	0x3f, r0	; 63
     cd4:	0f 90       	pop	r0
     cd6:	1f 90       	pop	r1
     cd8:	18 95       	reti

00000cda <__vector_3>:
     cda:	1f 92       	push	r1
     cdc:	0f 92       	push	r0
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	0f 92       	push	r0
     ce2:	11 24       	eor	r1, r1
     ce4:	2f 93       	push	r18
     ce6:	3f 93       	push	r19
     ce8:	4f 93       	push	r20
     cea:	5f 93       	push	r21
     cec:	6f 93       	push	r22
     cee:	7f 93       	push	r23
     cf0:	8f 93       	push	r24
     cf2:	9f 93       	push	r25
     cf4:	af 93       	push	r26
     cf6:	bf 93       	push	r27
     cf8:	ef 93       	push	r30
     cfa:	ff 93       	push	r31
     cfc:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
     d00:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
     d04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d0c:	c9 01       	movw	r24, r18
     d0e:	03 2e       	mov	r0, r19
     d10:	00 0c       	add	r0, r0
     d12:	aa 0b       	sbc	r26, r26
     d14:	bb 0b       	sbc	r27, r27
     d16:	dc 01       	movw	r26, r24
     d18:	99 27       	eor	r25, r25
     d1a:	88 27       	eor	r24, r24
     d1c:	60 e0       	ldi	r22, 0x00	; 0
     d1e:	70 e0       	ldi	r23, 0x00	; 0
     d20:	84 2b       	or	r24, r20
     d22:	95 2b       	or	r25, r21
     d24:	a6 2b       	or	r26, r22
     d26:	b7 2b       	or	r27, r23
     d28:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     d2c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     d30:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     d34:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     d38:	b0 9b       	sbis	0x16, 0	; 22
     d3a:	1b c0       	rjmp	.+54     	; 0xd72 <__vector_3+0x98>
     d3c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d40:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d44:	c9 01       	movw	r24, r18
     d46:	01 96       	adiw	r24, 0x01	; 1
     d48:	09 2e       	mov	r0, r25
     d4a:	00 0c       	add	r0, r0
     d4c:	aa 0b       	sbc	r26, r26
     d4e:	bb 0b       	sbc	r27, r27
     d50:	dc 01       	movw	r26, r24
     d52:	99 27       	eor	r25, r25
     d54:	88 27       	eor	r24, r24
     d56:	60 e0       	ldi	r22, 0x00	; 0
     d58:	70 e0       	ldi	r23, 0x00	; 0
     d5a:	84 2b       	or	r24, r20
     d5c:	95 2b       	or	r25, r21
     d5e:	a6 2b       	or	r26, r22
     d60:	b7 2b       	or	r27, r23
     d62:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     d66:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     d6a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     d6e:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     d72:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x4>
     d76:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x5>
     d7a:	30 97       	sbiw	r30, 0x00	; 0
     d7c:	39 f0       	breq	.+14     	; 0xd8c <__vector_3+0xb2>
     d7e:	62 e0       	ldi	r22, 0x02	; 2
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x4>
     d86:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x5>
     d8a:	09 95       	icall
     d8c:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
     d90:	ff 91       	pop	r31
     d92:	ef 91       	pop	r30
     d94:	bf 91       	pop	r27
     d96:	af 91       	pop	r26
     d98:	9f 91       	pop	r25
     d9a:	8f 91       	pop	r24
     d9c:	7f 91       	pop	r23
     d9e:	6f 91       	pop	r22
     da0:	5f 91       	pop	r21
     da2:	4f 91       	pop	r20
     da4:	3f 91       	pop	r19
     da6:	2f 91       	pop	r18
     da8:	0f 90       	pop	r0
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	0f 90       	pop	r0
     dae:	1f 90       	pop	r1
     db0:	18 95       	reti

00000db2 <__vector_4>:
     db2:	1f 92       	push	r1
     db4:	0f 92       	push	r0
     db6:	0f b6       	in	r0, 0x3f	; 63
     db8:	0f 92       	push	r0
     dba:	11 24       	eor	r1, r1
     dbc:	2f 93       	push	r18
     dbe:	3f 93       	push	r19
     dc0:	4f 93       	push	r20
     dc2:	5f 93       	push	r21
     dc4:	6f 93       	push	r22
     dc6:	7f 93       	push	r23
     dc8:	8f 93       	push	r24
     dca:	9f 93       	push	r25
     dcc:	af 93       	push	r26
     dce:	bf 93       	push	r27
     dd0:	ef 93       	push	r30
     dd2:	ff 93       	push	r31
     dd4:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
     dd8:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
     ddc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     de0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     de4:	c9 01       	movw	r24, r18
     de6:	03 2e       	mov	r0, r19
     de8:	00 0c       	add	r0, r0
     dea:	aa 0b       	sbc	r26, r26
     dec:	bb 0b       	sbc	r27, r27
     dee:	dc 01       	movw	r26, r24
     df0:	99 27       	eor	r25, r25
     df2:	88 27       	eor	r24, r24
     df4:	60 e0       	ldi	r22, 0x00	; 0
     df6:	70 e0       	ldi	r23, 0x00	; 0
     df8:	84 2b       	or	r24, r20
     dfa:	95 2b       	or	r25, r21
     dfc:	a6 2b       	or	r26, r22
     dfe:	b7 2b       	or	r27, r23
     e00:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     e04:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     e08:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     e0c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     e10:	b0 9b       	sbis	0x16, 0	; 22
     e12:	1b c0       	rjmp	.+54     	; 0xe4a <__vector_4+0x98>
     e14:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e18:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e1c:	c9 01       	movw	r24, r18
     e1e:	01 96       	adiw	r24, 0x01	; 1
     e20:	09 2e       	mov	r0, r25
     e22:	00 0c       	add	r0, r0
     e24:	aa 0b       	sbc	r26, r26
     e26:	bb 0b       	sbc	r27, r27
     e28:	dc 01       	movw	r26, r24
     e2a:	99 27       	eor	r25, r25
     e2c:	88 27       	eor	r24, r24
     e2e:	60 e0       	ldi	r22, 0x00	; 0
     e30:	70 e0       	ldi	r23, 0x00	; 0
     e32:	84 2b       	or	r24, r20
     e34:	95 2b       	or	r25, r21
     e36:	a6 2b       	or	r26, r22
     e38:	b7 2b       	or	r27, r23
     e3a:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     e3e:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     e42:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     e46:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     e4a:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x6>
     e4e:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x7>
     e52:	30 97       	sbiw	r30, 0x00	; 0
     e54:	39 f0       	breq	.+14     	; 0xe64 <__vector_4+0xb2>
     e56:	63 e0       	ldi	r22, 0x03	; 3
     e58:	70 e0       	ldi	r23, 0x00	; 0
     e5a:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x6>
     e5e:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x7>
     e62:	09 95       	icall
     e64:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
     e68:	ff 91       	pop	r31
     e6a:	ef 91       	pop	r30
     e6c:	bf 91       	pop	r27
     e6e:	af 91       	pop	r26
     e70:	9f 91       	pop	r25
     e72:	8f 91       	pop	r24
     e74:	7f 91       	pop	r23
     e76:	6f 91       	pop	r22
     e78:	5f 91       	pop	r21
     e7a:	4f 91       	pop	r20
     e7c:	3f 91       	pop	r19
     e7e:	2f 91       	pop	r18
     e80:	0f 90       	pop	r0
     e82:	0f be       	out	0x3f, r0	; 63
     e84:	0f 90       	pop	r0
     e86:	1f 90       	pop	r1
     e88:	18 95       	reti

00000e8a <__vector_5>:
     e8a:	1f 92       	push	r1
     e8c:	0f 92       	push	r0
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	0f 92       	push	r0
     e92:	11 24       	eor	r1, r1
     e94:	2f 93       	push	r18
     e96:	3f 93       	push	r19
     e98:	4f 93       	push	r20
     e9a:	5f 93       	push	r21
     e9c:	6f 93       	push	r22
     e9e:	7f 93       	push	r23
     ea0:	8f 93       	push	r24
     ea2:	9f 93       	push	r25
     ea4:	af 93       	push	r26
     ea6:	bf 93       	push	r27
     ea8:	ef 93       	push	r30
     eaa:	ff 93       	push	r31
     eac:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
     eb0:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
     eb4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eb8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ebc:	c9 01       	movw	r24, r18
     ebe:	03 2e       	mov	r0, r19
     ec0:	00 0c       	add	r0, r0
     ec2:	aa 0b       	sbc	r26, r26
     ec4:	bb 0b       	sbc	r27, r27
     ec6:	dc 01       	movw	r26, r24
     ec8:	99 27       	eor	r25, r25
     eca:	88 27       	eor	r24, r24
     ecc:	60 e0       	ldi	r22, 0x00	; 0
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	84 2b       	or	r24, r20
     ed2:	95 2b       	or	r25, r21
     ed4:	a6 2b       	or	r26, r22
     ed6:	b7 2b       	or	r27, r23
     ed8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     edc:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     ee0:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     ee4:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     ee8:	b0 9b       	sbis	0x16, 0	; 22
     eea:	1b c0       	rjmp	.+54     	; 0xf22 <__vector_5+0x98>
     eec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ef0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ef4:	c9 01       	movw	r24, r18
     ef6:	01 96       	adiw	r24, 0x01	; 1
     ef8:	09 2e       	mov	r0, r25
     efa:	00 0c       	add	r0, r0
     efc:	aa 0b       	sbc	r26, r26
     efe:	bb 0b       	sbc	r27, r27
     f00:	dc 01       	movw	r26, r24
     f02:	99 27       	eor	r25, r25
     f04:	88 27       	eor	r24, r24
     f06:	60 e0       	ldi	r22, 0x00	; 0
     f08:	70 e0       	ldi	r23, 0x00	; 0
     f0a:	84 2b       	or	r24, r20
     f0c:	95 2b       	or	r25, r21
     f0e:	a6 2b       	or	r26, r22
     f10:	b7 2b       	or	r27, r23
     f12:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     f16:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     f1a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     f1e:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     f22:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x8>
     f26:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x9>
     f2a:	30 97       	sbiw	r30, 0x00	; 0
     f2c:	39 f0       	breq	.+14     	; 0xf3c <__vector_5+0xb2>
     f2e:	64 e0       	ldi	r22, 0x04	; 4
     f30:	70 e0       	ldi	r23, 0x00	; 0
     f32:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x8>
     f36:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x9>
     f3a:	09 95       	icall
     f3c:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
     f40:	ff 91       	pop	r31
     f42:	ef 91       	pop	r30
     f44:	bf 91       	pop	r27
     f46:	af 91       	pop	r26
     f48:	9f 91       	pop	r25
     f4a:	8f 91       	pop	r24
     f4c:	7f 91       	pop	r23
     f4e:	6f 91       	pop	r22
     f50:	5f 91       	pop	r21
     f52:	4f 91       	pop	r20
     f54:	3f 91       	pop	r19
     f56:	2f 91       	pop	r18
     f58:	0f 90       	pop	r0
     f5a:	0f be       	out	0x3f, r0	; 63
     f5c:	0f 90       	pop	r0
     f5e:	1f 90       	pop	r1
     f60:	18 95       	reti

00000f62 <__vector_10>:
     f62:	1f 92       	push	r1
     f64:	0f 92       	push	r0
     f66:	0f b6       	in	r0, 0x3f	; 63
     f68:	0f 92       	push	r0
     f6a:	11 24       	eor	r1, r1
     f6c:	2f 93       	push	r18
     f6e:	3f 93       	push	r19
     f70:	4f 93       	push	r20
     f72:	5f 93       	push	r21
     f74:	6f 93       	push	r22
     f76:	7f 93       	push	r23
     f78:	8f 93       	push	r24
     f7a:	9f 93       	push	r25
     f7c:	af 93       	push	r26
     f7e:	bf 93       	push	r27
     f80:	ef 93       	push	r30
     f82:	ff 93       	push	r31
     f84:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
     f88:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
     f8c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f90:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f94:	c9 01       	movw	r24, r18
     f96:	03 2e       	mov	r0, r19
     f98:	00 0c       	add	r0, r0
     f9a:	aa 0b       	sbc	r26, r26
     f9c:	bb 0b       	sbc	r27, r27
     f9e:	dc 01       	movw	r26, r24
     fa0:	99 27       	eor	r25, r25
     fa2:	88 27       	eor	r24, r24
     fa4:	60 e0       	ldi	r22, 0x00	; 0
     fa6:	70 e0       	ldi	r23, 0x00	; 0
     fa8:	84 2b       	or	r24, r20
     faa:	95 2b       	or	r25, r21
     fac:	a6 2b       	or	r26, r22
     fae:	b7 2b       	or	r27, r23
     fb0:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     fb4:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     fb8:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     fbc:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     fc0:	b0 9b       	sbis	0x16, 0	; 22
     fc2:	1b c0       	rjmp	.+54     	; 0xffa <__vector_10+0x98>
     fc4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fc8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fcc:	c9 01       	movw	r24, r18
     fce:	01 96       	adiw	r24, 0x01	; 1
     fd0:	09 2e       	mov	r0, r25
     fd2:	00 0c       	add	r0, r0
     fd4:	aa 0b       	sbc	r26, r26
     fd6:	bb 0b       	sbc	r27, r27
     fd8:	dc 01       	movw	r26, r24
     fda:	99 27       	eor	r25, r25
     fdc:	88 27       	eor	r24, r24
     fde:	60 e0       	ldi	r22, 0x00	; 0
     fe0:	70 e0       	ldi	r23, 0x00	; 0
     fe2:	84 2b       	or	r24, r20
     fe4:	95 2b       	or	r25, r21
     fe6:	a6 2b       	or	r26, r22
     fe8:	b7 2b       	or	r27, r23
     fea:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
     fee:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
     ff2:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
     ff6:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
     ffa:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0xa>
     ffe:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0xb>
    1002:	30 97       	sbiw	r30, 0x00	; 0
    1004:	39 f0       	breq	.+14     	; 0x1014 <__vector_10+0xb2>
    1006:	65 e0       	ldi	r22, 0x05	; 5
    1008:	70 e0       	ldi	r23, 0x00	; 0
    100a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0xa>
    100e:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0xb>
    1012:	09 95       	icall
    1014:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1018:	ff 91       	pop	r31
    101a:	ef 91       	pop	r30
    101c:	bf 91       	pop	r27
    101e:	af 91       	pop	r26
    1020:	9f 91       	pop	r25
    1022:	8f 91       	pop	r24
    1024:	7f 91       	pop	r23
    1026:	6f 91       	pop	r22
    1028:	5f 91       	pop	r21
    102a:	4f 91       	pop	r20
    102c:	3f 91       	pop	r19
    102e:	2f 91       	pop	r18
    1030:	0f 90       	pop	r0
    1032:	0f be       	out	0x3f, r0	; 63
    1034:	0f 90       	pop	r0
    1036:	1f 90       	pop	r1
    1038:	18 95       	reti

0000103a <__vector_11>:
    103a:	1f 92       	push	r1
    103c:	0f 92       	push	r0
    103e:	0f b6       	in	r0, 0x3f	; 63
    1040:	0f 92       	push	r0
    1042:	11 24       	eor	r1, r1
    1044:	2f 93       	push	r18
    1046:	3f 93       	push	r19
    1048:	4f 93       	push	r20
    104a:	5f 93       	push	r21
    104c:	6f 93       	push	r22
    104e:	7f 93       	push	r23
    1050:	8f 93       	push	r24
    1052:	9f 93       	push	r25
    1054:	af 93       	push	r26
    1056:	bf 93       	push	r27
    1058:	ef 93       	push	r30
    105a:	ff 93       	push	r31
    105c:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1060:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1064:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1068:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    106c:	c9 01       	movw	r24, r18
    106e:	03 2e       	mov	r0, r19
    1070:	00 0c       	add	r0, r0
    1072:	aa 0b       	sbc	r26, r26
    1074:	bb 0b       	sbc	r27, r27
    1076:	dc 01       	movw	r26, r24
    1078:	99 27       	eor	r25, r25
    107a:	88 27       	eor	r24, r24
    107c:	60 e0       	ldi	r22, 0x00	; 0
    107e:	70 e0       	ldi	r23, 0x00	; 0
    1080:	84 2b       	or	r24, r20
    1082:	95 2b       	or	r25, r21
    1084:	a6 2b       	or	r26, r22
    1086:	b7 2b       	or	r27, r23
    1088:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    108c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1090:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1094:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1098:	b0 9b       	sbis	0x16, 0	; 22
    109a:	1b c0       	rjmp	.+54     	; 0x10d2 <__vector_11+0x98>
    109c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10a4:	c9 01       	movw	r24, r18
    10a6:	01 96       	adiw	r24, 0x01	; 1
    10a8:	09 2e       	mov	r0, r25
    10aa:	00 0c       	add	r0, r0
    10ac:	aa 0b       	sbc	r26, r26
    10ae:	bb 0b       	sbc	r27, r27
    10b0:	dc 01       	movw	r26, r24
    10b2:	99 27       	eor	r25, r25
    10b4:	88 27       	eor	r24, r24
    10b6:	60 e0       	ldi	r22, 0x00	; 0
    10b8:	70 e0       	ldi	r23, 0x00	; 0
    10ba:	84 2b       	or	r24, r20
    10bc:	95 2b       	or	r25, r21
    10be:	a6 2b       	or	r26, r22
    10c0:	b7 2b       	or	r27, r23
    10c2:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    10c6:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    10ca:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    10ce:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    10d2:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0xc>
    10d6:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0xd>
    10da:	30 97       	sbiw	r30, 0x00	; 0
    10dc:	39 f0       	breq	.+14     	; 0x10ec <__vector_11+0xb2>
    10de:	66 e0       	ldi	r22, 0x06	; 6
    10e0:	70 e0       	ldi	r23, 0x00	; 0
    10e2:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0xc>
    10e6:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0xd>
    10ea:	09 95       	icall
    10ec:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    10f0:	ff 91       	pop	r31
    10f2:	ef 91       	pop	r30
    10f4:	bf 91       	pop	r27
    10f6:	af 91       	pop	r26
    10f8:	9f 91       	pop	r25
    10fa:	8f 91       	pop	r24
    10fc:	7f 91       	pop	r23
    10fe:	6f 91       	pop	r22
    1100:	5f 91       	pop	r21
    1102:	4f 91       	pop	r20
    1104:	3f 91       	pop	r19
    1106:	2f 91       	pop	r18
    1108:	0f 90       	pop	r0
    110a:	0f be       	out	0x3f, r0	; 63
    110c:	0f 90       	pop	r0
    110e:	1f 90       	pop	r1
    1110:	18 95       	reti

00001112 <__vector_12>:
    1112:	1f 92       	push	r1
    1114:	0f 92       	push	r0
    1116:	0f b6       	in	r0, 0x3f	; 63
    1118:	0f 92       	push	r0
    111a:	11 24       	eor	r1, r1
    111c:	2f 93       	push	r18
    111e:	3f 93       	push	r19
    1120:	4f 93       	push	r20
    1122:	5f 93       	push	r21
    1124:	6f 93       	push	r22
    1126:	7f 93       	push	r23
    1128:	8f 93       	push	r24
    112a:	9f 93       	push	r25
    112c:	af 93       	push	r26
    112e:	bf 93       	push	r27
    1130:	ef 93       	push	r30
    1132:	ff 93       	push	r31
    1134:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1138:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    113c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1140:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1144:	c9 01       	movw	r24, r18
    1146:	03 2e       	mov	r0, r19
    1148:	00 0c       	add	r0, r0
    114a:	aa 0b       	sbc	r26, r26
    114c:	bb 0b       	sbc	r27, r27
    114e:	dc 01       	movw	r26, r24
    1150:	99 27       	eor	r25, r25
    1152:	88 27       	eor	r24, r24
    1154:	60 e0       	ldi	r22, 0x00	; 0
    1156:	70 e0       	ldi	r23, 0x00	; 0
    1158:	84 2b       	or	r24, r20
    115a:	95 2b       	or	r25, r21
    115c:	a6 2b       	or	r26, r22
    115e:	b7 2b       	or	r27, r23
    1160:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1164:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1168:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    116c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1170:	b0 9b       	sbis	0x16, 0	; 22
    1172:	1b c0       	rjmp	.+54     	; 0x11aa <__vector_12+0x98>
    1174:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1178:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    117c:	c9 01       	movw	r24, r18
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	09 2e       	mov	r0, r25
    1182:	00 0c       	add	r0, r0
    1184:	aa 0b       	sbc	r26, r26
    1186:	bb 0b       	sbc	r27, r27
    1188:	dc 01       	movw	r26, r24
    118a:	99 27       	eor	r25, r25
    118c:	88 27       	eor	r24, r24
    118e:	60 e0       	ldi	r22, 0x00	; 0
    1190:	70 e0       	ldi	r23, 0x00	; 0
    1192:	84 2b       	or	r24, r20
    1194:	95 2b       	or	r25, r21
    1196:	a6 2b       	or	r26, r22
    1198:	b7 2b       	or	r27, r23
    119a:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    119e:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    11a2:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    11a6:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    11aa:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0xe>
    11ae:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0xf>
    11b2:	30 97       	sbiw	r30, 0x00	; 0
    11b4:	39 f0       	breq	.+14     	; 0x11c4 <__vector_12+0xb2>
    11b6:	67 e0       	ldi	r22, 0x07	; 7
    11b8:	70 e0       	ldi	r23, 0x00	; 0
    11ba:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0xe>
    11be:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0xf>
    11c2:	09 95       	icall
    11c4:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    11c8:	ff 91       	pop	r31
    11ca:	ef 91       	pop	r30
    11cc:	bf 91       	pop	r27
    11ce:	af 91       	pop	r26
    11d0:	9f 91       	pop	r25
    11d2:	8f 91       	pop	r24
    11d4:	7f 91       	pop	r23
    11d6:	6f 91       	pop	r22
    11d8:	5f 91       	pop	r21
    11da:	4f 91       	pop	r20
    11dc:	3f 91       	pop	r19
    11de:	2f 91       	pop	r18
    11e0:	0f 90       	pop	r0
    11e2:	0f be       	out	0x3f, r0	; 63
    11e4:	0f 90       	pop	r0
    11e6:	1f 90       	pop	r1
    11e8:	18 95       	reti

000011ea <__vector_13>:
    11ea:	1f 92       	push	r1
    11ec:	0f 92       	push	r0
    11ee:	0f b6       	in	r0, 0x3f	; 63
    11f0:	0f 92       	push	r0
    11f2:	11 24       	eor	r1, r1
    11f4:	2f 93       	push	r18
    11f6:	3f 93       	push	r19
    11f8:	4f 93       	push	r20
    11fa:	5f 93       	push	r21
    11fc:	6f 93       	push	r22
    11fe:	7f 93       	push	r23
    1200:	8f 93       	push	r24
    1202:	9f 93       	push	r25
    1204:	af 93       	push	r26
    1206:	bf 93       	push	r27
    1208:	ef 93       	push	r30
    120a:	ff 93       	push	r31
    120c:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1210:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1214:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1218:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    121c:	c9 01       	movw	r24, r18
    121e:	03 2e       	mov	r0, r19
    1220:	00 0c       	add	r0, r0
    1222:	aa 0b       	sbc	r26, r26
    1224:	bb 0b       	sbc	r27, r27
    1226:	dc 01       	movw	r26, r24
    1228:	99 27       	eor	r25, r25
    122a:	88 27       	eor	r24, r24
    122c:	60 e0       	ldi	r22, 0x00	; 0
    122e:	70 e0       	ldi	r23, 0x00	; 0
    1230:	84 2b       	or	r24, r20
    1232:	95 2b       	or	r25, r21
    1234:	a6 2b       	or	r26, r22
    1236:	b7 2b       	or	r27, r23
    1238:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    123c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1240:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1244:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1248:	b0 9b       	sbis	0x16, 0	; 22
    124a:	1b c0       	rjmp	.+54     	; 0x1282 <__vector_13+0x98>
    124c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1250:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1254:	c9 01       	movw	r24, r18
    1256:	01 96       	adiw	r24, 0x01	; 1
    1258:	09 2e       	mov	r0, r25
    125a:	00 0c       	add	r0, r0
    125c:	aa 0b       	sbc	r26, r26
    125e:	bb 0b       	sbc	r27, r27
    1260:	dc 01       	movw	r26, r24
    1262:	99 27       	eor	r25, r25
    1264:	88 27       	eor	r24, r24
    1266:	60 e0       	ldi	r22, 0x00	; 0
    1268:	70 e0       	ldi	r23, 0x00	; 0
    126a:	84 2b       	or	r24, r20
    126c:	95 2b       	or	r25, r21
    126e:	a6 2b       	or	r26, r22
    1270:	b7 2b       	or	r27, r23
    1272:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1276:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    127a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    127e:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1282:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x10>
    1286:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x11>
    128a:	30 97       	sbiw	r30, 0x00	; 0
    128c:	39 f0       	breq	.+14     	; 0x129c <__vector_13+0xb2>
    128e:	68 e0       	ldi	r22, 0x08	; 8
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x10>
    1296:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x11>
    129a:	09 95       	icall
    129c:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    12a0:	ff 91       	pop	r31
    12a2:	ef 91       	pop	r30
    12a4:	bf 91       	pop	r27
    12a6:	af 91       	pop	r26
    12a8:	9f 91       	pop	r25
    12aa:	8f 91       	pop	r24
    12ac:	7f 91       	pop	r23
    12ae:	6f 91       	pop	r22
    12b0:	5f 91       	pop	r21
    12b2:	4f 91       	pop	r20
    12b4:	3f 91       	pop	r19
    12b6:	2f 91       	pop	r18
    12b8:	0f 90       	pop	r0
    12ba:	0f be       	out	0x3f, r0	; 63
    12bc:	0f 90       	pop	r0
    12be:	1f 90       	pop	r1
    12c0:	18 95       	reti

000012c2 <__vector_14>:
    12c2:	1f 92       	push	r1
    12c4:	0f 92       	push	r0
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	0f 92       	push	r0
    12ca:	11 24       	eor	r1, r1
    12cc:	2f 93       	push	r18
    12ce:	3f 93       	push	r19
    12d0:	4f 93       	push	r20
    12d2:	5f 93       	push	r21
    12d4:	6f 93       	push	r22
    12d6:	7f 93       	push	r23
    12d8:	8f 93       	push	r24
    12da:	9f 93       	push	r25
    12dc:	af 93       	push	r26
    12de:	bf 93       	push	r27
    12e0:	ef 93       	push	r30
    12e2:	ff 93       	push	r31
    12e4:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    12e8:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    12ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12f4:	c9 01       	movw	r24, r18
    12f6:	03 2e       	mov	r0, r19
    12f8:	00 0c       	add	r0, r0
    12fa:	aa 0b       	sbc	r26, r26
    12fc:	bb 0b       	sbc	r27, r27
    12fe:	dc 01       	movw	r26, r24
    1300:	99 27       	eor	r25, r25
    1302:	88 27       	eor	r24, r24
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	70 e0       	ldi	r23, 0x00	; 0
    1308:	84 2b       	or	r24, r20
    130a:	95 2b       	or	r25, r21
    130c:	a6 2b       	or	r26, r22
    130e:	b7 2b       	or	r27, r23
    1310:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1314:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1318:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    131c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1320:	b0 9b       	sbis	0x16, 0	; 22
    1322:	1b c0       	rjmp	.+54     	; 0x135a <__vector_14+0x98>
    1324:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1328:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    132c:	c9 01       	movw	r24, r18
    132e:	01 96       	adiw	r24, 0x01	; 1
    1330:	09 2e       	mov	r0, r25
    1332:	00 0c       	add	r0, r0
    1334:	aa 0b       	sbc	r26, r26
    1336:	bb 0b       	sbc	r27, r27
    1338:	dc 01       	movw	r26, r24
    133a:	99 27       	eor	r25, r25
    133c:	88 27       	eor	r24, r24
    133e:	60 e0       	ldi	r22, 0x00	; 0
    1340:	70 e0       	ldi	r23, 0x00	; 0
    1342:	84 2b       	or	r24, r20
    1344:	95 2b       	or	r25, r21
    1346:	a6 2b       	or	r26, r22
    1348:	b7 2b       	or	r27, r23
    134a:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    134e:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1352:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1356:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    135a:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x12>
    135e:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x13>
    1362:	30 97       	sbiw	r30, 0x00	; 0
    1364:	39 f0       	breq	.+14     	; 0x1374 <__vector_14+0xb2>
    1366:	69 e0       	ldi	r22, 0x09	; 9
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x12>
    136e:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x13>
    1372:	09 95       	icall
    1374:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1378:	ff 91       	pop	r31
    137a:	ef 91       	pop	r30
    137c:	bf 91       	pop	r27
    137e:	af 91       	pop	r26
    1380:	9f 91       	pop	r25
    1382:	8f 91       	pop	r24
    1384:	7f 91       	pop	r23
    1386:	6f 91       	pop	r22
    1388:	5f 91       	pop	r21
    138a:	4f 91       	pop	r20
    138c:	3f 91       	pop	r19
    138e:	2f 91       	pop	r18
    1390:	0f 90       	pop	r0
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	0f 90       	pop	r0
    1396:	1f 90       	pop	r1
    1398:	18 95       	reti

0000139a <__vector_15>:
    139a:	1f 92       	push	r1
    139c:	0f 92       	push	r0
    139e:	0f b6       	in	r0, 0x3f	; 63
    13a0:	0f 92       	push	r0
    13a2:	11 24       	eor	r1, r1
    13a4:	2f 93       	push	r18
    13a6:	3f 93       	push	r19
    13a8:	4f 93       	push	r20
    13aa:	5f 93       	push	r21
    13ac:	6f 93       	push	r22
    13ae:	7f 93       	push	r23
    13b0:	8f 93       	push	r24
    13b2:	9f 93       	push	r25
    13b4:	af 93       	push	r26
    13b6:	bf 93       	push	r27
    13b8:	ef 93       	push	r30
    13ba:	ff 93       	push	r31
    13bc:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    13c0:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    13c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13cc:	c9 01       	movw	r24, r18
    13ce:	03 2e       	mov	r0, r19
    13d0:	00 0c       	add	r0, r0
    13d2:	aa 0b       	sbc	r26, r26
    13d4:	bb 0b       	sbc	r27, r27
    13d6:	dc 01       	movw	r26, r24
    13d8:	99 27       	eor	r25, r25
    13da:	88 27       	eor	r24, r24
    13dc:	60 e0       	ldi	r22, 0x00	; 0
    13de:	70 e0       	ldi	r23, 0x00	; 0
    13e0:	84 2b       	or	r24, r20
    13e2:	95 2b       	or	r25, r21
    13e4:	a6 2b       	or	r26, r22
    13e6:	b7 2b       	or	r27, r23
    13e8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    13ec:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    13f0:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    13f4:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    13f8:	b0 9b       	sbis	0x16, 0	; 22
    13fa:	1b c0       	rjmp	.+54     	; 0x1432 <__vector_15+0x98>
    13fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1400:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1404:	c9 01       	movw	r24, r18
    1406:	01 96       	adiw	r24, 0x01	; 1
    1408:	09 2e       	mov	r0, r25
    140a:	00 0c       	add	r0, r0
    140c:	aa 0b       	sbc	r26, r26
    140e:	bb 0b       	sbc	r27, r27
    1410:	dc 01       	movw	r26, r24
    1412:	99 27       	eor	r25, r25
    1414:	88 27       	eor	r24, r24
    1416:	60 e0       	ldi	r22, 0x00	; 0
    1418:	70 e0       	ldi	r23, 0x00	; 0
    141a:	84 2b       	or	r24, r20
    141c:	95 2b       	or	r25, r21
    141e:	a6 2b       	or	r26, r22
    1420:	b7 2b       	or	r27, r23
    1422:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1426:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    142a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    142e:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1432:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x14>
    1436:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x15>
    143a:	30 97       	sbiw	r30, 0x00	; 0
    143c:	39 f0       	breq	.+14     	; 0x144c <__vector_15+0xb2>
    143e:	6a e0       	ldi	r22, 0x0A	; 10
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x14>
    1446:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x15>
    144a:	09 95       	icall
    144c:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1450:	ff 91       	pop	r31
    1452:	ef 91       	pop	r30
    1454:	bf 91       	pop	r27
    1456:	af 91       	pop	r26
    1458:	9f 91       	pop	r25
    145a:	8f 91       	pop	r24
    145c:	7f 91       	pop	r23
    145e:	6f 91       	pop	r22
    1460:	5f 91       	pop	r21
    1462:	4f 91       	pop	r20
    1464:	3f 91       	pop	r19
    1466:	2f 91       	pop	r18
    1468:	0f 90       	pop	r0
    146a:	0f be       	out	0x3f, r0	; 63
    146c:	0f 90       	pop	r0
    146e:	1f 90       	pop	r1
    1470:	18 95       	reti

00001472 <__vector_16>:
    1472:	1f 92       	push	r1
    1474:	0f 92       	push	r0
    1476:	0f b6       	in	r0, 0x3f	; 63
    1478:	0f 92       	push	r0
    147a:	11 24       	eor	r1, r1
    147c:	2f 93       	push	r18
    147e:	3f 93       	push	r19
    1480:	4f 93       	push	r20
    1482:	5f 93       	push	r21
    1484:	6f 93       	push	r22
    1486:	7f 93       	push	r23
    1488:	8f 93       	push	r24
    148a:	9f 93       	push	r25
    148c:	af 93       	push	r26
    148e:	bf 93       	push	r27
    1490:	ef 93       	push	r30
    1492:	ff 93       	push	r31
    1494:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1498:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    149c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14a4:	c9 01       	movw	r24, r18
    14a6:	03 2e       	mov	r0, r19
    14a8:	00 0c       	add	r0, r0
    14aa:	aa 0b       	sbc	r26, r26
    14ac:	bb 0b       	sbc	r27, r27
    14ae:	dc 01       	movw	r26, r24
    14b0:	99 27       	eor	r25, r25
    14b2:	88 27       	eor	r24, r24
    14b4:	60 e0       	ldi	r22, 0x00	; 0
    14b6:	70 e0       	ldi	r23, 0x00	; 0
    14b8:	84 2b       	or	r24, r20
    14ba:	95 2b       	or	r25, r21
    14bc:	a6 2b       	or	r26, r22
    14be:	b7 2b       	or	r27, r23
    14c0:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    14c4:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    14c8:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    14cc:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    14d0:	b0 9b       	sbis	0x16, 0	; 22
    14d2:	1b c0       	rjmp	.+54     	; 0x150a <__vector_16+0x98>
    14d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14dc:	c9 01       	movw	r24, r18
    14de:	01 96       	adiw	r24, 0x01	; 1
    14e0:	09 2e       	mov	r0, r25
    14e2:	00 0c       	add	r0, r0
    14e4:	aa 0b       	sbc	r26, r26
    14e6:	bb 0b       	sbc	r27, r27
    14e8:	dc 01       	movw	r26, r24
    14ea:	99 27       	eor	r25, r25
    14ec:	88 27       	eor	r24, r24
    14ee:	60 e0       	ldi	r22, 0x00	; 0
    14f0:	70 e0       	ldi	r23, 0x00	; 0
    14f2:	84 2b       	or	r24, r20
    14f4:	95 2b       	or	r25, r21
    14f6:	a6 2b       	or	r26, r22
    14f8:	b7 2b       	or	r27, r23
    14fa:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    14fe:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1502:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1506:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    150a:	e0 91 16 02 	lds	r30, 0x0216	; 0x800216 <mtable+0x16>
    150e:	f0 91 17 02 	lds	r31, 0x0217	; 0x800217 <mtable+0x17>
    1512:	30 97       	sbiw	r30, 0x00	; 0
    1514:	39 f0       	breq	.+14     	; 0x1524 <__vector_16+0xb2>
    1516:	6b e0       	ldi	r22, 0x0B	; 11
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <otable+0x16>
    151e:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <otable+0x17>
    1522:	09 95       	icall
    1524:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1528:	ff 91       	pop	r31
    152a:	ef 91       	pop	r30
    152c:	bf 91       	pop	r27
    152e:	af 91       	pop	r26
    1530:	9f 91       	pop	r25
    1532:	8f 91       	pop	r24
    1534:	7f 91       	pop	r23
    1536:	6f 91       	pop	r22
    1538:	5f 91       	pop	r21
    153a:	4f 91       	pop	r20
    153c:	3f 91       	pop	r19
    153e:	2f 91       	pop	r18
    1540:	0f 90       	pop	r0
    1542:	0f be       	out	0x3f, r0	; 63
    1544:	0f 90       	pop	r0
    1546:	1f 90       	pop	r1
    1548:	18 95       	reti

0000154a <__vector_17>:
    154a:	1f 92       	push	r1
    154c:	0f 92       	push	r0
    154e:	0f b6       	in	r0, 0x3f	; 63
    1550:	0f 92       	push	r0
    1552:	11 24       	eor	r1, r1
    1554:	2f 93       	push	r18
    1556:	3f 93       	push	r19
    1558:	4f 93       	push	r20
    155a:	5f 93       	push	r21
    155c:	6f 93       	push	r22
    155e:	7f 93       	push	r23
    1560:	8f 93       	push	r24
    1562:	9f 93       	push	r25
    1564:	af 93       	push	r26
    1566:	bf 93       	push	r27
    1568:	ef 93       	push	r30
    156a:	ff 93       	push	r31
    156c:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1570:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1574:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1578:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    157c:	c9 01       	movw	r24, r18
    157e:	03 2e       	mov	r0, r19
    1580:	00 0c       	add	r0, r0
    1582:	aa 0b       	sbc	r26, r26
    1584:	bb 0b       	sbc	r27, r27
    1586:	dc 01       	movw	r26, r24
    1588:	99 27       	eor	r25, r25
    158a:	88 27       	eor	r24, r24
    158c:	60 e0       	ldi	r22, 0x00	; 0
    158e:	70 e0       	ldi	r23, 0x00	; 0
    1590:	84 2b       	or	r24, r20
    1592:	95 2b       	or	r25, r21
    1594:	a6 2b       	or	r26, r22
    1596:	b7 2b       	or	r27, r23
    1598:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    159c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    15a0:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    15a4:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    15a8:	b0 9b       	sbis	0x16, 0	; 22
    15aa:	1b c0       	rjmp	.+54     	; 0x15e2 <__vector_17+0x98>
    15ac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15b0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15b4:	c9 01       	movw	r24, r18
    15b6:	01 96       	adiw	r24, 0x01	; 1
    15b8:	09 2e       	mov	r0, r25
    15ba:	00 0c       	add	r0, r0
    15bc:	aa 0b       	sbc	r26, r26
    15be:	bb 0b       	sbc	r27, r27
    15c0:	dc 01       	movw	r26, r24
    15c2:	99 27       	eor	r25, r25
    15c4:	88 27       	eor	r24, r24
    15c6:	60 e0       	ldi	r22, 0x00	; 0
    15c8:	70 e0       	ldi	r23, 0x00	; 0
    15ca:	84 2b       	or	r24, r20
    15cc:	95 2b       	or	r25, r21
    15ce:	a6 2b       	or	r26, r22
    15d0:	b7 2b       	or	r27, r23
    15d2:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    15d6:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    15da:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    15de:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    15e2:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <mtable+0x18>
    15e6:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <mtable+0x19>
    15ea:	30 97       	sbiw	r30, 0x00	; 0
    15ec:	39 f0       	breq	.+14     	; 0x15fc <__vector_17+0xb2>
    15ee:	6c e0       	ldi	r22, 0x0C	; 12
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <otable+0x18>
    15f6:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <otable+0x19>
    15fa:	09 95       	icall
    15fc:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1600:	ff 91       	pop	r31
    1602:	ef 91       	pop	r30
    1604:	bf 91       	pop	r27
    1606:	af 91       	pop	r26
    1608:	9f 91       	pop	r25
    160a:	8f 91       	pop	r24
    160c:	7f 91       	pop	r23
    160e:	6f 91       	pop	r22
    1610:	5f 91       	pop	r21
    1612:	4f 91       	pop	r20
    1614:	3f 91       	pop	r19
    1616:	2f 91       	pop	r18
    1618:	0f 90       	pop	r0
    161a:	0f be       	out	0x3f, r0	; 63
    161c:	0f 90       	pop	r0
    161e:	1f 90       	pop	r1
    1620:	18 95       	reti

00001622 <__vector_18>:
    1622:	1f 92       	push	r1
    1624:	0f 92       	push	r0
    1626:	0f b6       	in	r0, 0x3f	; 63
    1628:	0f 92       	push	r0
    162a:	11 24       	eor	r1, r1
    162c:	2f 93       	push	r18
    162e:	3f 93       	push	r19
    1630:	4f 93       	push	r20
    1632:	5f 93       	push	r21
    1634:	6f 93       	push	r22
    1636:	7f 93       	push	r23
    1638:	8f 93       	push	r24
    163a:	9f 93       	push	r25
    163c:	af 93       	push	r26
    163e:	bf 93       	push	r27
    1640:	ef 93       	push	r30
    1642:	ff 93       	push	r31
    1644:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1648:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    164c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1650:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1654:	c9 01       	movw	r24, r18
    1656:	03 2e       	mov	r0, r19
    1658:	00 0c       	add	r0, r0
    165a:	aa 0b       	sbc	r26, r26
    165c:	bb 0b       	sbc	r27, r27
    165e:	dc 01       	movw	r26, r24
    1660:	99 27       	eor	r25, r25
    1662:	88 27       	eor	r24, r24
    1664:	60 e0       	ldi	r22, 0x00	; 0
    1666:	70 e0       	ldi	r23, 0x00	; 0
    1668:	84 2b       	or	r24, r20
    166a:	95 2b       	or	r25, r21
    166c:	a6 2b       	or	r26, r22
    166e:	b7 2b       	or	r27, r23
    1670:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1674:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1678:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    167c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1680:	b0 9b       	sbis	0x16, 0	; 22
    1682:	1b c0       	rjmp	.+54     	; 0x16ba <__vector_18+0x98>
    1684:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1688:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    168c:	c9 01       	movw	r24, r18
    168e:	01 96       	adiw	r24, 0x01	; 1
    1690:	09 2e       	mov	r0, r25
    1692:	00 0c       	add	r0, r0
    1694:	aa 0b       	sbc	r26, r26
    1696:	bb 0b       	sbc	r27, r27
    1698:	dc 01       	movw	r26, r24
    169a:	99 27       	eor	r25, r25
    169c:	88 27       	eor	r24, r24
    169e:	60 e0       	ldi	r22, 0x00	; 0
    16a0:	70 e0       	ldi	r23, 0x00	; 0
    16a2:	84 2b       	or	r24, r20
    16a4:	95 2b       	or	r25, r21
    16a6:	a6 2b       	or	r26, r22
    16a8:	b7 2b       	or	r27, r23
    16aa:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    16ae:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    16b2:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    16b6:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    16ba:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <mtable+0x1a>
    16be:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <mtable+0x1b>
    16c2:	30 97       	sbiw	r30, 0x00	; 0
    16c4:	39 f0       	breq	.+14     	; 0x16d4 <__vector_18+0xb2>
    16c6:	6d e0       	ldi	r22, 0x0D	; 13
    16c8:	70 e0       	ldi	r23, 0x00	; 0
    16ca:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <otable+0x1a>
    16ce:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <otable+0x1b>
    16d2:	09 95       	icall
    16d4:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    16d8:	ff 91       	pop	r31
    16da:	ef 91       	pop	r30
    16dc:	bf 91       	pop	r27
    16de:	af 91       	pop	r26
    16e0:	9f 91       	pop	r25
    16e2:	8f 91       	pop	r24
    16e4:	7f 91       	pop	r23
    16e6:	6f 91       	pop	r22
    16e8:	5f 91       	pop	r21
    16ea:	4f 91       	pop	r20
    16ec:	3f 91       	pop	r19
    16ee:	2f 91       	pop	r18
    16f0:	0f 90       	pop	r0
    16f2:	0f be       	out	0x3f, r0	; 63
    16f4:	0f 90       	pop	r0
    16f6:	1f 90       	pop	r1
    16f8:	18 95       	reti

000016fa <__vector_19>:
    16fa:	1f 92       	push	r1
    16fc:	0f 92       	push	r0
    16fe:	0f b6       	in	r0, 0x3f	; 63
    1700:	0f 92       	push	r0
    1702:	11 24       	eor	r1, r1
    1704:	2f 93       	push	r18
    1706:	3f 93       	push	r19
    1708:	4f 93       	push	r20
    170a:	5f 93       	push	r21
    170c:	6f 93       	push	r22
    170e:	7f 93       	push	r23
    1710:	8f 93       	push	r24
    1712:	9f 93       	push	r25
    1714:	af 93       	push	r26
    1716:	bf 93       	push	r27
    1718:	ef 93       	push	r30
    171a:	ff 93       	push	r31
    171c:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1720:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1724:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1728:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    172c:	c9 01       	movw	r24, r18
    172e:	03 2e       	mov	r0, r19
    1730:	00 0c       	add	r0, r0
    1732:	aa 0b       	sbc	r26, r26
    1734:	bb 0b       	sbc	r27, r27
    1736:	dc 01       	movw	r26, r24
    1738:	99 27       	eor	r25, r25
    173a:	88 27       	eor	r24, r24
    173c:	60 e0       	ldi	r22, 0x00	; 0
    173e:	70 e0       	ldi	r23, 0x00	; 0
    1740:	84 2b       	or	r24, r20
    1742:	95 2b       	or	r25, r21
    1744:	a6 2b       	or	r26, r22
    1746:	b7 2b       	or	r27, r23
    1748:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    174c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1750:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1754:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1758:	b0 9b       	sbis	0x16, 0	; 22
    175a:	1b c0       	rjmp	.+54     	; 0x1792 <__vector_19+0x98>
    175c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1760:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1764:	c9 01       	movw	r24, r18
    1766:	01 96       	adiw	r24, 0x01	; 1
    1768:	09 2e       	mov	r0, r25
    176a:	00 0c       	add	r0, r0
    176c:	aa 0b       	sbc	r26, r26
    176e:	bb 0b       	sbc	r27, r27
    1770:	dc 01       	movw	r26, r24
    1772:	99 27       	eor	r25, r25
    1774:	88 27       	eor	r24, r24
    1776:	60 e0       	ldi	r22, 0x00	; 0
    1778:	70 e0       	ldi	r23, 0x00	; 0
    177a:	84 2b       	or	r24, r20
    177c:	95 2b       	or	r25, r21
    177e:	a6 2b       	or	r26, r22
    1780:	b7 2b       	or	r27, r23
    1782:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1786:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    178a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    178e:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1792:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <mtable+0x1c>
    1796:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <mtable+0x1d>
    179a:	30 97       	sbiw	r30, 0x00	; 0
    179c:	39 f0       	breq	.+14     	; 0x17ac <__vector_19+0xb2>
    179e:	6e e0       	ldi	r22, 0x0E	; 14
    17a0:	70 e0       	ldi	r23, 0x00	; 0
    17a2:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <otable+0x1c>
    17a6:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <otable+0x1d>
    17aa:	09 95       	icall
    17ac:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    17b0:	ff 91       	pop	r31
    17b2:	ef 91       	pop	r30
    17b4:	bf 91       	pop	r27
    17b6:	af 91       	pop	r26
    17b8:	9f 91       	pop	r25
    17ba:	8f 91       	pop	r24
    17bc:	7f 91       	pop	r23
    17be:	6f 91       	pop	r22
    17c0:	5f 91       	pop	r21
    17c2:	4f 91       	pop	r20
    17c4:	3f 91       	pop	r19
    17c6:	2f 91       	pop	r18
    17c8:	0f 90       	pop	r0
    17ca:	0f be       	out	0x3f, r0	; 63
    17cc:	0f 90       	pop	r0
    17ce:	1f 90       	pop	r1
    17d0:	18 95       	reti

000017d2 <__vector_20>:
    17d2:	1f 92       	push	r1
    17d4:	0f 92       	push	r0
    17d6:	0f b6       	in	r0, 0x3f	; 63
    17d8:	0f 92       	push	r0
    17da:	11 24       	eor	r1, r1
    17dc:	2f 93       	push	r18
    17de:	3f 93       	push	r19
    17e0:	4f 93       	push	r20
    17e2:	5f 93       	push	r21
    17e4:	6f 93       	push	r22
    17e6:	7f 93       	push	r23
    17e8:	8f 93       	push	r24
    17ea:	9f 93       	push	r25
    17ec:	af 93       	push	r26
    17ee:	bf 93       	push	r27
    17f0:	ef 93       	push	r30
    17f2:	ff 93       	push	r31
    17f4:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    17f8:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    17fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1800:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1804:	c9 01       	movw	r24, r18
    1806:	03 2e       	mov	r0, r19
    1808:	00 0c       	add	r0, r0
    180a:	aa 0b       	sbc	r26, r26
    180c:	bb 0b       	sbc	r27, r27
    180e:	dc 01       	movw	r26, r24
    1810:	99 27       	eor	r25, r25
    1812:	88 27       	eor	r24, r24
    1814:	60 e0       	ldi	r22, 0x00	; 0
    1816:	70 e0       	ldi	r23, 0x00	; 0
    1818:	84 2b       	or	r24, r20
    181a:	95 2b       	or	r25, r21
    181c:	a6 2b       	or	r26, r22
    181e:	b7 2b       	or	r27, r23
    1820:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1824:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1828:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    182c:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1830:	b0 9b       	sbis	0x16, 0	; 22
    1832:	1b c0       	rjmp	.+54     	; 0x186a <__vector_20+0x98>
    1834:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1838:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    183c:	c9 01       	movw	r24, r18
    183e:	01 96       	adiw	r24, 0x01	; 1
    1840:	09 2e       	mov	r0, r25
    1842:	00 0c       	add	r0, r0
    1844:	aa 0b       	sbc	r26, r26
    1846:	bb 0b       	sbc	r27, r27
    1848:	dc 01       	movw	r26, r24
    184a:	99 27       	eor	r25, r25
    184c:	88 27       	eor	r24, r24
    184e:	60 e0       	ldi	r22, 0x00	; 0
    1850:	70 e0       	ldi	r23, 0x00	; 0
    1852:	84 2b       	or	r24, r20
    1854:	95 2b       	or	r25, r21
    1856:	a6 2b       	or	r26, r22
    1858:	b7 2b       	or	r27, r23
    185a:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    185e:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1862:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1866:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    186a:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <mtable+0x1e>
    186e:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <mtable+0x1f>
    1872:	30 97       	sbiw	r30, 0x00	; 0
    1874:	39 f0       	breq	.+14     	; 0x1884 <__vector_20+0xb2>
    1876:	6f e0       	ldi	r22, 0x0F	; 15
    1878:	70 e0       	ldi	r23, 0x00	; 0
    187a:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <otable+0x1e>
    187e:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <otable+0x1f>
    1882:	09 95       	icall
    1884:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1888:	ff 91       	pop	r31
    188a:	ef 91       	pop	r30
    188c:	bf 91       	pop	r27
    188e:	af 91       	pop	r26
    1890:	9f 91       	pop	r25
    1892:	8f 91       	pop	r24
    1894:	7f 91       	pop	r23
    1896:	6f 91       	pop	r22
    1898:	5f 91       	pop	r21
    189a:	4f 91       	pop	r20
    189c:	3f 91       	pop	r19
    189e:	2f 91       	pop	r18
    18a0:	0f 90       	pop	r0
    18a2:	0f be       	out	0x3f, r0	; 63
    18a4:	0f 90       	pop	r0
    18a6:	1f 90       	pop	r1
    18a8:	18 95       	reti

000018aa <__vector_21>:
    18aa:	1f 92       	push	r1
    18ac:	0f 92       	push	r0
    18ae:	0f b6       	in	r0, 0x3f	; 63
    18b0:	0f 92       	push	r0
    18b2:	11 24       	eor	r1, r1
    18b4:	2f 93       	push	r18
    18b6:	3f 93       	push	r19
    18b8:	4f 93       	push	r20
    18ba:	5f 93       	push	r21
    18bc:	6f 93       	push	r22
    18be:	7f 93       	push	r23
    18c0:	8f 93       	push	r24
    18c2:	9f 93       	push	r25
    18c4:	af 93       	push	r26
    18c6:	bf 93       	push	r27
    18c8:	ef 93       	push	r30
    18ca:	ff 93       	push	r31
    18cc:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    18d0:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    18d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18dc:	c9 01       	movw	r24, r18
    18de:	03 2e       	mov	r0, r19
    18e0:	00 0c       	add	r0, r0
    18e2:	aa 0b       	sbc	r26, r26
    18e4:	bb 0b       	sbc	r27, r27
    18e6:	dc 01       	movw	r26, r24
    18e8:	99 27       	eor	r25, r25
    18ea:	88 27       	eor	r24, r24
    18ec:	60 e0       	ldi	r22, 0x00	; 0
    18ee:	70 e0       	ldi	r23, 0x00	; 0
    18f0:	84 2b       	or	r24, r20
    18f2:	95 2b       	or	r25, r21
    18f4:	a6 2b       	or	r26, r22
    18f6:	b7 2b       	or	r27, r23
    18f8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    18fc:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1900:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1904:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1908:	b0 9b       	sbis	0x16, 0	; 22
    190a:	1b c0       	rjmp	.+54     	; 0x1942 <__vector_21+0x98>
    190c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1910:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1914:	c9 01       	movw	r24, r18
    1916:	01 96       	adiw	r24, 0x01	; 1
    1918:	09 2e       	mov	r0, r25
    191a:	00 0c       	add	r0, r0
    191c:	aa 0b       	sbc	r26, r26
    191e:	bb 0b       	sbc	r27, r27
    1920:	dc 01       	movw	r26, r24
    1922:	99 27       	eor	r25, r25
    1924:	88 27       	eor	r24, r24
    1926:	60 e0       	ldi	r22, 0x00	; 0
    1928:	70 e0       	ldi	r23, 0x00	; 0
    192a:	84 2b       	or	r24, r20
    192c:	95 2b       	or	r25, r21
    192e:	a6 2b       	or	r26, r22
    1930:	b7 2b       	or	r27, r23
    1932:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1936:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    193a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    193e:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1942:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <mtable+0x20>
    1946:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <mtable+0x21>
    194a:	30 97       	sbiw	r30, 0x00	; 0
    194c:	39 f0       	breq	.+14     	; 0x195c <__vector_21+0xb2>
    194e:	60 e1       	ldi	r22, 0x10	; 16
    1950:	70 e0       	ldi	r23, 0x00	; 0
    1952:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <otable+0x20>
    1956:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <otable+0x21>
    195a:	09 95       	icall
    195c:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1960:	ff 91       	pop	r31
    1962:	ef 91       	pop	r30
    1964:	bf 91       	pop	r27
    1966:	af 91       	pop	r26
    1968:	9f 91       	pop	r25
    196a:	8f 91       	pop	r24
    196c:	7f 91       	pop	r23
    196e:	6f 91       	pop	r22
    1970:	5f 91       	pop	r21
    1972:	4f 91       	pop	r20
    1974:	3f 91       	pop	r19
    1976:	2f 91       	pop	r18
    1978:	0f 90       	pop	r0
    197a:	0f be       	out	0x3f, r0	; 63
    197c:	0f 90       	pop	r0
    197e:	1f 90       	pop	r1
    1980:	18 95       	reti

00001982 <__vector_22>:
    1982:	1f 92       	push	r1
    1984:	0f 92       	push	r0
    1986:	0f b6       	in	r0, 0x3f	; 63
    1988:	0f 92       	push	r0
    198a:	11 24       	eor	r1, r1
    198c:	2f 93       	push	r18
    198e:	3f 93       	push	r19
    1990:	4f 93       	push	r20
    1992:	5f 93       	push	r21
    1994:	6f 93       	push	r22
    1996:	7f 93       	push	r23
    1998:	8f 93       	push	r24
    199a:	9f 93       	push	r25
    199c:	af 93       	push	r26
    199e:	bf 93       	push	r27
    19a0:	ef 93       	push	r30
    19a2:	ff 93       	push	r31
    19a4:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    19a8:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    19ac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19b0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19b4:	c9 01       	movw	r24, r18
    19b6:	03 2e       	mov	r0, r19
    19b8:	00 0c       	add	r0, r0
    19ba:	aa 0b       	sbc	r26, r26
    19bc:	bb 0b       	sbc	r27, r27
    19be:	dc 01       	movw	r26, r24
    19c0:	99 27       	eor	r25, r25
    19c2:	88 27       	eor	r24, r24
    19c4:	60 e0       	ldi	r22, 0x00	; 0
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	84 2b       	or	r24, r20
    19ca:	95 2b       	or	r25, r21
    19cc:	a6 2b       	or	r26, r22
    19ce:	b7 2b       	or	r27, r23
    19d0:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    19d4:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    19d8:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    19dc:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    19e0:	b0 9b       	sbis	0x16, 0	; 22
    19e2:	1b c0       	rjmp	.+54     	; 0x1a1a <__vector_22+0x98>
    19e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ec:	c9 01       	movw	r24, r18
    19ee:	01 96       	adiw	r24, 0x01	; 1
    19f0:	09 2e       	mov	r0, r25
    19f2:	00 0c       	add	r0, r0
    19f4:	aa 0b       	sbc	r26, r26
    19f6:	bb 0b       	sbc	r27, r27
    19f8:	dc 01       	movw	r26, r24
    19fa:	99 27       	eor	r25, r25
    19fc:	88 27       	eor	r24, r24
    19fe:	60 e0       	ldi	r22, 0x00	; 0
    1a00:	70 e0       	ldi	r23, 0x00	; 0
    1a02:	84 2b       	or	r24, r20
    1a04:	95 2b       	or	r25, r21
    1a06:	a6 2b       	or	r26, r22
    1a08:	b7 2b       	or	r27, r23
    1a0a:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <timestamp>
    1a0e:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <timestamp+0x1>
    1a12:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <timestamp+0x2>
    1a16:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <timestamp+0x3>
    1a1a:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <mtable+0x22>
    1a1e:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <mtable+0x23>
    1a22:	30 97       	sbiw	r30, 0x00	; 0
    1a24:	39 f0       	breq	.+14     	; 0x1a34 <__vector_22+0xb2>
    1a26:	61 e1       	ldi	r22, 0x11	; 17
    1a28:	70 e0       	ldi	r23, 0x00	; 0
    1a2a:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <otable+0x22>
    1a2e:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <otable+0x23>
    1a32:	09 95       	icall
    1a34:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1a38:	ff 91       	pop	r31
    1a3a:	ef 91       	pop	r30
    1a3c:	bf 91       	pop	r27
    1a3e:	af 91       	pop	r26
    1a40:	9f 91       	pop	r25
    1a42:	8f 91       	pop	r24
    1a44:	7f 91       	pop	r23
    1a46:	6f 91       	pop	r22
    1a48:	5f 91       	pop	r21
    1a4a:	4f 91       	pop	r20
    1a4c:	3f 91       	pop	r19
    1a4e:	2f 91       	pop	r18
    1a50:	0f 90       	pop	r0
    1a52:	0f be       	out	0x3f, r0	; 63
    1a54:	0f 90       	pop	r0
    1a56:	1f 90       	pop	r1
    1a58:	18 95       	reti

00001a5a <enqueueByDeadline>:
    1a5a:	ef 92       	push	r14
    1a5c:	ff 92       	push	r15
    1a5e:	0f 93       	push	r16
    1a60:	1f 93       	push	r17
    1a62:	cf 93       	push	r28
    1a64:	df 93       	push	r29
    1a66:	7b 01       	movw	r14, r22
    1a68:	eb 01       	movw	r28, r22
    1a6a:	a8 81       	ld	r26, Y
    1a6c:	b9 81       	ldd	r27, Y+1	; 0x01
    1a6e:	10 97       	sbiw	r26, 0x00	; 0
    1a70:	61 f1       	breq	.+88     	; 0x1aca <enqueueByDeadline+0x70>
    1a72:	fc 01       	movw	r30, r24
    1a74:	06 81       	ldd	r16, Z+6	; 0x06
    1a76:	17 81       	ldd	r17, Z+7	; 0x07
    1a78:	20 85       	ldd	r18, Z+8	; 0x08
    1a7a:	31 85       	ldd	r19, Z+9	; 0x09
    1a7c:	16 96       	adiw	r26, 0x06	; 6
    1a7e:	4d 91       	ld	r20, X+
    1a80:	5d 91       	ld	r21, X+
    1a82:	6d 91       	ld	r22, X+
    1a84:	7c 91       	ld	r23, X
    1a86:	19 97       	sbiw	r26, 0x09	; 9
    1a88:	04 17       	cp	r16, r20
    1a8a:	15 07       	cpc	r17, r21
    1a8c:	26 07       	cpc	r18, r22
    1a8e:	37 07       	cpc	r19, r23
    1a90:	14 f4       	brge	.+4      	; 0x1a96 <enqueueByDeadline+0x3c>
    1a92:	1b c0       	rjmp	.+54     	; 0x1aca <enqueueByDeadline+0x70>
    1a94:	df 01       	movw	r26, r30
    1a96:	ed 91       	ld	r30, X+
    1a98:	fc 91       	ld	r31, X
    1a9a:	11 97       	sbiw	r26, 0x01	; 1
    1a9c:	30 97       	sbiw	r30, 0x00	; 0
    1a9e:	49 f0       	breq	.+18     	; 0x1ab2 <enqueueByDeadline+0x58>
    1aa0:	46 81       	ldd	r20, Z+6	; 0x06
    1aa2:	57 81       	ldd	r21, Z+7	; 0x07
    1aa4:	60 85       	ldd	r22, Z+8	; 0x08
    1aa6:	71 85       	ldd	r23, Z+9	; 0x09
    1aa8:	04 17       	cp	r16, r20
    1aaa:	15 07       	cpc	r17, r21
    1aac:	26 07       	cpc	r18, r22
    1aae:	37 07       	cpc	r19, r23
    1ab0:	8c f7       	brge	.-30     	; 0x1a94 <enqueueByDeadline+0x3a>
    1ab2:	ec 01       	movw	r28, r24
    1ab4:	f9 83       	std	Y+1, r31	; 0x01
    1ab6:	e8 83       	st	Y, r30
    1ab8:	10 97       	sbiw	r26, 0x00	; 0
    1aba:	21 f4       	brne	.+8      	; 0x1ac4 <enqueueByDeadline+0x6a>
    1abc:	f7 01       	movw	r30, r14
    1abe:	91 83       	std	Z+1, r25	; 0x01
    1ac0:	80 83       	st	Z, r24
    1ac2:	07 c0       	rjmp	.+14     	; 0x1ad2 <enqueueByDeadline+0x78>
    1ac4:	8d 93       	st	X+, r24
    1ac6:	9c 93       	st	X, r25
    1ac8:	04 c0       	rjmp	.+8      	; 0x1ad2 <enqueueByDeadline+0x78>
    1aca:	ec 01       	movw	r28, r24
    1acc:	b9 83       	std	Y+1, r27	; 0x01
    1ace:	a8 83       	st	Y, r26
    1ad0:	f5 cf       	rjmp	.-22     	; 0x1abc <enqueueByDeadline+0x62>
    1ad2:	df 91       	pop	r29
    1ad4:	cf 91       	pop	r28
    1ad6:	1f 91       	pop	r17
    1ad8:	0f 91       	pop	r16
    1ada:	ff 90       	pop	r15
    1adc:	ef 90       	pop	r14
    1ade:	08 95       	ret

00001ae0 <enqueueByBaseline>:
    1ae0:	ef 92       	push	r14
    1ae2:	ff 92       	push	r15
    1ae4:	0f 93       	push	r16
    1ae6:	1f 93       	push	r17
    1ae8:	cf 93       	push	r28
    1aea:	df 93       	push	r29
    1aec:	7b 01       	movw	r14, r22
    1aee:	eb 01       	movw	r28, r22
    1af0:	a8 81       	ld	r26, Y
    1af2:	b9 81       	ldd	r27, Y+1	; 0x01
    1af4:	10 97       	sbiw	r26, 0x00	; 0
    1af6:	61 f1       	breq	.+88     	; 0x1b50 <enqueueByBaseline+0x70>
    1af8:	fc 01       	movw	r30, r24
    1afa:	02 81       	ldd	r16, Z+2	; 0x02
    1afc:	13 81       	ldd	r17, Z+3	; 0x03
    1afe:	24 81       	ldd	r18, Z+4	; 0x04
    1b00:	35 81       	ldd	r19, Z+5	; 0x05
    1b02:	12 96       	adiw	r26, 0x02	; 2
    1b04:	4d 91       	ld	r20, X+
    1b06:	5d 91       	ld	r21, X+
    1b08:	6d 91       	ld	r22, X+
    1b0a:	7c 91       	ld	r23, X
    1b0c:	15 97       	sbiw	r26, 0x05	; 5
    1b0e:	04 17       	cp	r16, r20
    1b10:	15 07       	cpc	r17, r21
    1b12:	26 07       	cpc	r18, r22
    1b14:	37 07       	cpc	r19, r23
    1b16:	14 f4       	brge	.+4      	; 0x1b1c <enqueueByBaseline+0x3c>
    1b18:	1b c0       	rjmp	.+54     	; 0x1b50 <enqueueByBaseline+0x70>
    1b1a:	df 01       	movw	r26, r30
    1b1c:	ed 91       	ld	r30, X+
    1b1e:	fc 91       	ld	r31, X
    1b20:	11 97       	sbiw	r26, 0x01	; 1
    1b22:	30 97       	sbiw	r30, 0x00	; 0
    1b24:	49 f0       	breq	.+18     	; 0x1b38 <enqueueByBaseline+0x58>
    1b26:	42 81       	ldd	r20, Z+2	; 0x02
    1b28:	53 81       	ldd	r21, Z+3	; 0x03
    1b2a:	64 81       	ldd	r22, Z+4	; 0x04
    1b2c:	75 81       	ldd	r23, Z+5	; 0x05
    1b2e:	04 17       	cp	r16, r20
    1b30:	15 07       	cpc	r17, r21
    1b32:	26 07       	cpc	r18, r22
    1b34:	37 07       	cpc	r19, r23
    1b36:	8c f7       	brge	.-30     	; 0x1b1a <enqueueByBaseline+0x3a>
    1b38:	ec 01       	movw	r28, r24
    1b3a:	f9 83       	std	Y+1, r31	; 0x01
    1b3c:	e8 83       	st	Y, r30
    1b3e:	10 97       	sbiw	r26, 0x00	; 0
    1b40:	21 f4       	brne	.+8      	; 0x1b4a <enqueueByBaseline+0x6a>
    1b42:	f7 01       	movw	r30, r14
    1b44:	91 83       	std	Z+1, r25	; 0x01
    1b46:	80 83       	st	Z, r24
    1b48:	07 c0       	rjmp	.+14     	; 0x1b58 <enqueueByBaseline+0x78>
    1b4a:	8d 93       	st	X+, r24
    1b4c:	9c 93       	st	X, r25
    1b4e:	04 c0       	rjmp	.+8      	; 0x1b58 <enqueueByBaseline+0x78>
    1b50:	ec 01       	movw	r28, r24
    1b52:	b9 83       	std	Y+1, r27	; 0x01
    1b54:	a8 83       	st	Y, r26
    1b56:	f5 cf       	rjmp	.-22     	; 0x1b42 <enqueueByBaseline+0x62>
    1b58:	df 91       	pop	r29
    1b5a:	cf 91       	pop	r28
    1b5c:	1f 91       	pop	r17
    1b5e:	0f 91       	pop	r16
    1b60:	ff 90       	pop	r15
    1b62:	ef 90       	pop	r14
    1b64:	08 95       	ret

00001b66 <dequeue>:
    1b66:	dc 01       	movw	r26, r24
    1b68:	ed 91       	ld	r30, X+
    1b6a:	fc 91       	ld	r31, X
    1b6c:	11 97       	sbiw	r26, 0x01	; 1
    1b6e:	30 97       	sbiw	r30, 0x00	; 0
    1b70:	59 f4       	brne	.+22     	; 0x1b88 <dequeue+0x22>
    1b72:	8f ef       	ldi	r24, 0xFF	; 255
    1b74:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    1b78:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    1b7c:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    1b80:	81 e0       	ldi	r24, 0x01	; 1
    1b82:	83 bf       	out	0x33, r24	; 51
    1b84:	88 95       	sleep
    1b86:	fd cf       	rjmp	.-6      	; 0x1b82 <dequeue+0x1c>
    1b88:	20 81       	ld	r18, Z
    1b8a:	31 81       	ldd	r19, Z+1	; 0x01
    1b8c:	2d 93       	st	X+, r18
    1b8e:	3c 93       	st	X, r19
    1b90:	cf 01       	movw	r24, r30
    1b92:	08 95       	ret

00001b94 <__vector_9>:
    1b94:	1f 92       	push	r1
    1b96:	0f 92       	push	r0
    1b98:	0f b6       	in	r0, 0x3f	; 63
    1b9a:	0f 92       	push	r0
    1b9c:	11 24       	eor	r1, r1
    1b9e:	2f 93       	push	r18
    1ba0:	3f 93       	push	r19
    1ba2:	4f 93       	push	r20
    1ba4:	5f 93       	push	r21
    1ba6:	6f 93       	push	r22
    1ba8:	7f 93       	push	r23
    1baa:	8f 93       	push	r24
    1bac:	9f 93       	push	r25
    1bae:	ef 93       	push	r30
    1bb0:	ff 93       	push	r31
    1bb2:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    1bb6:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    1bba:	01 96       	adiw	r24, 0x01	; 1
    1bbc:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <overflows+0x1>
    1bc0:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <overflows>
    1bc4:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <timerQ>
    1bc8:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <timerQ+0x1>
    1bcc:	30 97       	sbiw	r30, 0x00	; 0
    1bce:	01 f1       	breq	.+64     	; 0x1c10 <__vector_9+0x7c>
    1bd0:	42 81       	ldd	r20, Z+2	; 0x02
    1bd2:	53 81       	ldd	r21, Z+3	; 0x03
    1bd4:	64 81       	ldd	r22, Z+4	; 0x04
    1bd6:	75 81       	ldd	r23, Z+5	; 0x05
    1bd8:	86 17       	cp	r24, r22
    1bda:	97 07       	cpc	r25, r23
    1bdc:	c9 f4       	brne	.+50     	; 0x1c10 <__vector_9+0x7c>
    1bde:	ca 01       	movw	r24, r20
    1be0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1be4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1be8:	42 1b       	sub	r20, r18
    1bea:	53 0b       	sbc	r21, r19
    1bec:	41 30       	cpi	r20, 0x01	; 1
    1bee:	51 05       	cpc	r21, r1
    1bf0:	29 f4       	brne	.+10     	; 0x1bfc <__vector_9+0x68>
    1bf2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bf6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bfa:	01 96       	adiw	r24, 0x01	; 1
    1bfc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c00:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c04:	ef e6       	ldi	r30, 0x6F	; 111
    1c06:	f0 e0       	ldi	r31, 0x00	; 0
    1c08:	80 81       	ld	r24, Z
    1c0a:	82 60       	ori	r24, 0x02	; 2
    1c0c:	80 83       	st	Z, r24
    1c0e:	05 c0       	rjmp	.+10     	; 0x1c1a <__vector_9+0x86>
    1c10:	ef e6       	ldi	r30, 0x6F	; 111
    1c12:	f0 e0       	ldi	r31, 0x00	; 0
    1c14:	80 81       	ld	r24, Z
    1c16:	8d 7f       	andi	r24, 0xFD	; 253
    1c18:	80 83       	st	Z, r24
    1c1a:	ff 91       	pop	r31
    1c1c:	ef 91       	pop	r30
    1c1e:	9f 91       	pop	r25
    1c20:	8f 91       	pop	r24
    1c22:	7f 91       	pop	r23
    1c24:	6f 91       	pop	r22
    1c26:	5f 91       	pop	r21
    1c28:	4f 91       	pop	r20
    1c2a:	3f 91       	pop	r19
    1c2c:	2f 91       	pop	r18
    1c2e:	0f 90       	pop	r0
    1c30:	0f be       	out	0x3f, r0	; 63
    1c32:	0f 90       	pop	r0
    1c34:	1f 90       	pop	r1
    1c36:	18 95       	reti

00001c38 <__vector_7>:
    1c38:	1f 92       	push	r1
    1c3a:	0f 92       	push	r0
    1c3c:	0f b6       	in	r0, 0x3f	; 63
    1c3e:	0f 92       	push	r0
    1c40:	11 24       	eor	r1, r1
    1c42:	cf 92       	push	r12
    1c44:	df 92       	push	r13
    1c46:	ef 92       	push	r14
    1c48:	ff 92       	push	r15
    1c4a:	2f 93       	push	r18
    1c4c:	3f 93       	push	r19
    1c4e:	4f 93       	push	r20
    1c50:	5f 93       	push	r21
    1c52:	6f 93       	push	r22
    1c54:	7f 93       	push	r23
    1c56:	8f 93       	push	r24
    1c58:	9f 93       	push	r25
    1c5a:	af 93       	push	r26
    1c5c:	bf 93       	push	r27
    1c5e:	ef 93       	push	r30
    1c60:	ff 93       	push	r31
    1c62:	c0 90 5e 01 	lds	r12, 0x015E	; 0x80015e <overflows>
    1c66:	d0 90 5f 01 	lds	r13, 0x015F	; 0x80015f <overflows+0x1>
    1c6a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c6e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c72:	b0 99       	sbic	0x16, 0	; 22
    1c74:	0f c0       	rjmp	.+30     	; 0x1c94 <__vector_7+0x5c>
    1c76:	0d 2c       	mov	r0, r13
    1c78:	00 0c       	add	r0, r0
    1c7a:	ee 08       	sbc	r14, r14
    1c7c:	ff 08       	sbc	r15, r15
    1c7e:	d6 01       	movw	r26, r12
    1c80:	99 27       	eor	r25, r25
    1c82:	88 27       	eor	r24, r24
    1c84:	69 01       	movw	r12, r18
    1c86:	e1 2c       	mov	r14, r1
    1c88:	f1 2c       	mov	r15, r1
    1c8a:	c8 2a       	or	r12, r24
    1c8c:	d9 2a       	or	r13, r25
    1c8e:	ea 2a       	or	r14, r26
    1c90:	fb 2a       	or	r15, r27
    1c92:	15 c0       	rjmp	.+42     	; 0x1cbe <__vector_7+0x86>
    1c94:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c98:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c9c:	8f ef       	ldi	r24, 0xFF	; 255
    1c9e:	c8 1a       	sub	r12, r24
    1ca0:	d8 0a       	sbc	r13, r24
    1ca2:	0d 2c       	mov	r0, r13
    1ca4:	00 0c       	add	r0, r0
    1ca6:	ee 08       	sbc	r14, r14
    1ca8:	ff 08       	sbc	r15, r15
    1caa:	d6 01       	movw	r26, r12
    1cac:	99 27       	eor	r25, r25
    1cae:	88 27       	eor	r24, r24
    1cb0:	69 01       	movw	r12, r18
    1cb2:	e1 2c       	mov	r14, r1
    1cb4:	f1 2c       	mov	r15, r1
    1cb6:	c8 2a       	or	r12, r24
    1cb8:	d9 2a       	or	r13, r25
    1cba:	ea 2a       	or	r14, r26
    1cbc:	fb 2a       	or	r15, r27
    1cbe:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <timerQ>
    1cc2:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <timerQ+0x1>
    1cc6:	30 97       	sbiw	r30, 0x00	; 0
    1cc8:	09 f4       	brne	.+2      	; 0x1ccc <__vector_7+0x94>
    1cca:	42 c0       	rjmp	.+132    	; 0x1d50 <__vector_7+0x118>
    1ccc:	82 81       	ldd	r24, Z+2	; 0x02
    1cce:	93 81       	ldd	r25, Z+3	; 0x03
    1cd0:	a4 81       	ldd	r26, Z+4	; 0x04
    1cd2:	b5 81       	ldd	r27, Z+5	; 0x05
    1cd4:	8c 19       	sub	r24, r12
    1cd6:	9d 09       	sbc	r25, r13
    1cd8:	ae 09       	sbc	r26, r14
    1cda:	bf 09       	sbc	r27, r15
    1cdc:	18 16       	cp	r1, r24
    1cde:	19 06       	cpc	r1, r25
    1ce0:	1a 06       	cpc	r1, r26
    1ce2:	1b 06       	cpc	r1, r27
    1ce4:	ec f1       	brlt	.+122    	; 0x1d60 <__vector_7+0x128>
    1ce6:	84 e6       	ldi	r24, 0x64	; 100
    1ce8:	91 e0       	ldi	r25, 0x01	; 1
    1cea:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <dequeue>
    1cee:	66 e6       	ldi	r22, 0x66	; 102
    1cf0:	71 e0       	ldi	r23, 0x01	; 1
    1cf2:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <enqueueByDeadline>
    1cf6:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <timerQ>
    1cfa:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <timerQ+0x1>
    1cfe:	30 97       	sbiw	r30, 0x00	; 0
    1d00:	39 f1       	breq	.+78     	; 0x1d50 <__vector_7+0x118>
    1d02:	82 81       	ldd	r24, Z+2	; 0x02
    1d04:	93 81       	ldd	r25, Z+3	; 0x03
    1d06:	a4 81       	ldd	r26, Z+4	; 0x04
    1d08:	b5 81       	ldd	r27, Z+5	; 0x05
    1d0a:	8c 19       	sub	r24, r12
    1d0c:	9d 09       	sbc	r25, r13
    1d0e:	ae 09       	sbc	r26, r14
    1d10:	bf 09       	sbc	r27, r15
    1d12:	18 16       	cp	r1, r24
    1d14:	19 06       	cpc	r1, r25
    1d16:	1a 06       	cpc	r1, r26
    1d18:	1b 06       	cpc	r1, r27
    1d1a:	2c f7       	brge	.-54     	; 0x1ce6 <__vector_7+0xae>
    1d1c:	21 c0       	rjmp	.+66     	; 0x1d60 <__vector_7+0x128>
    1d1e:	9c 01       	movw	r18, r24
    1d20:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d24:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d28:	84 1b       	sub	r24, r20
    1d2a:	95 0b       	sbc	r25, r21
    1d2c:	01 97       	sbiw	r24, 0x01	; 1
    1d2e:	31 f4       	brne	.+12     	; 0x1d3c <__vector_7+0x104>
    1d30:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d34:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d38:	2f 5f       	subi	r18, 0xFF	; 255
    1d3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d3c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d40:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d44:	ef e6       	ldi	r30, 0x6F	; 111
    1d46:	f0 e0       	ldi	r31, 0x00	; 0
    1d48:	80 81       	ld	r24, Z
    1d4a:	82 60       	ori	r24, 0x02	; 2
    1d4c:	80 83       	st	Z, r24
    1d4e:	05 c0       	rjmp	.+10     	; 0x1d5a <__vector_7+0x122>
    1d50:	ef e6       	ldi	r30, 0x6F	; 111
    1d52:	f0 e0       	ldi	r31, 0x00	; 0
    1d54:	80 81       	ld	r24, Z
    1d56:	8d 7f       	andi	r24, 0xFD	; 253
    1d58:	80 83       	st	Z, r24
    1d5a:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    1d5e:	0c c0       	rjmp	.+24     	; 0x1d78 <__vector_7+0x140>
    1d60:	82 81       	ldd	r24, Z+2	; 0x02
    1d62:	93 81       	ldd	r25, Z+3	; 0x03
    1d64:	a4 81       	ldd	r26, Z+4	; 0x04
    1d66:	b5 81       	ldd	r27, Z+5	; 0x05
    1d68:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1d6c:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1d70:	2a 17       	cp	r18, r26
    1d72:	3b 07       	cpc	r19, r27
    1d74:	69 f7       	brne	.-38     	; 0x1d50 <__vector_7+0x118>
    1d76:	d3 cf       	rjmp	.-90     	; 0x1d1e <__vector_7+0xe6>
    1d78:	ff 91       	pop	r31
    1d7a:	ef 91       	pop	r30
    1d7c:	bf 91       	pop	r27
    1d7e:	af 91       	pop	r26
    1d80:	9f 91       	pop	r25
    1d82:	8f 91       	pop	r24
    1d84:	7f 91       	pop	r23
    1d86:	6f 91       	pop	r22
    1d88:	5f 91       	pop	r21
    1d8a:	4f 91       	pop	r20
    1d8c:	3f 91       	pop	r19
    1d8e:	2f 91       	pop	r18
    1d90:	ff 90       	pop	r15
    1d92:	ef 90       	pop	r14
    1d94:	df 90       	pop	r13
    1d96:	cf 90       	pop	r12
    1d98:	0f 90       	pop	r0
    1d9a:	0f be       	out	0x3f, r0	; 63
    1d9c:	0f 90       	pop	r0
    1d9e:	1f 90       	pop	r1
    1da0:	18 95       	reti

00001da2 <async>:
    1da2:	3f 92       	push	r3
    1da4:	4f 92       	push	r4
    1da6:	5f 92       	push	r5
    1da8:	6f 92       	push	r6
    1daa:	7f 92       	push	r7
    1dac:	8f 92       	push	r8
    1dae:	9f 92       	push	r9
    1db0:	af 92       	push	r10
    1db2:	bf 92       	push	r11
    1db4:	cf 92       	push	r12
    1db6:	df 92       	push	r13
    1db8:	ef 92       	push	r14
    1dba:	ff 92       	push	r15
    1dbc:	0f 93       	push	r16
    1dbe:	1f 93       	push	r17
    1dc0:	cf 93       	push	r28
    1dc2:	df 93       	push	r29
    1dc4:	2b 01       	movw	r4, r22
    1dc6:	3c 01       	movw	r6, r24
    1dc8:	49 01       	movw	r8, r18
    1dca:	5a 01       	movw	r10, r20
    1dcc:	8f b7       	in	r24, 0x3f	; 63
    1dce:	80 78       	andi	r24, 0x80	; 128
    1dd0:	38 2e       	mov	r3, r24
    1dd2:	f8 94       	cli
    1dd4:	86 e0       	ldi	r24, 0x06	; 6
    1dd6:	91 e0       	ldi	r25, 0x01	; 1
    1dd8:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <dequeue>
    1ddc:	ec 01       	movw	r28, r24
    1dde:	1b 87       	std	Y+11, r17	; 0x0b
    1de0:	0a 87       	std	Y+10, r16	; 0x0a
    1de2:	fd 86       	std	Y+13, r15	; 0x0d
    1de4:	ec 86       	std	Y+12, r14	; 0x0c
    1de6:	df 86       	std	Y+15, r13	; 0x0f
    1de8:	ce 86       	std	Y+14, r12	; 0x0e
    1dea:	33 20       	and	r3, r3
    1dec:	61 f0       	breq	.+24     	; 0x1e06 <async+0x64>
    1dee:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1df2:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1df6:	02 80       	ldd	r0, Z+2	; 0x02
    1df8:	f3 81       	ldd	r31, Z+3	; 0x03
    1dfa:	e0 2d       	mov	r30, r0
    1dfc:	82 81       	ldd	r24, Z+2	; 0x02
    1dfe:	93 81       	ldd	r25, Z+3	; 0x03
    1e00:	a4 81       	ldd	r26, Z+4	; 0x04
    1e02:	b5 81       	ldd	r27, Z+5	; 0x05
    1e04:	08 c0       	rjmp	.+16     	; 0x1e16 <async+0x74>
    1e06:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <timestamp>
    1e0a:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <timestamp+0x1>
    1e0e:	a0 91 62 01 	lds	r26, 0x0162	; 0x800162 <timestamp+0x2>
    1e12:	b0 91 63 01 	lds	r27, 0x0163	; 0x800163 <timestamp+0x3>
    1e16:	48 0e       	add	r4, r24
    1e18:	59 1e       	adc	r5, r25
    1e1a:	6a 1e       	adc	r6, r26
    1e1c:	7b 1e       	adc	r7, r27
    1e1e:	4a 82       	std	Y+2, r4	; 0x02
    1e20:	5b 82       	std	Y+3, r5	; 0x03
    1e22:	6c 82       	std	Y+4, r6	; 0x04
    1e24:	7d 82       	std	Y+5, r7	; 0x05
    1e26:	18 14       	cp	r1, r8
    1e28:	19 04       	cpc	r1, r9
    1e2a:	1a 04       	cpc	r1, r10
    1e2c:	1b 04       	cpc	r1, r11
    1e2e:	44 f0       	brlt	.+16     	; 0x1e40 <async+0x9e>
    1e30:	0f 2e       	mov	r0, r31
    1e32:	88 24       	eor	r8, r8
    1e34:	8a 94       	dec	r8
    1e36:	98 2c       	mov	r9, r8
    1e38:	a8 2c       	mov	r10, r8
    1e3a:	ff e7       	ldi	r31, 0x7F	; 127
    1e3c:	bf 2e       	mov	r11, r31
    1e3e:	f0 2d       	mov	r31, r0
    1e40:	84 0c       	add	r8, r4
    1e42:	95 1c       	adc	r9, r5
    1e44:	a6 1c       	adc	r10, r6
    1e46:	b7 1c       	adc	r11, r7
    1e48:	8e 82       	std	Y+6, r8	; 0x06
    1e4a:	9f 82       	std	Y+7, r9	; 0x07
    1e4c:	a8 86       	std	Y+8, r10	; 0x08
    1e4e:	b9 86       	std	Y+9, r11	; 0x09
    1e50:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <overflows>
    1e54:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <overflows+0x1>
    1e58:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e5c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e60:	b0 99       	sbic	0x16, 0	; 22
    1e62:	0e c0       	rjmp	.+28     	; 0x1e80 <async+0xde>
    1e64:	09 2e       	mov	r0, r25
    1e66:	00 0c       	add	r0, r0
    1e68:	aa 0b       	sbc	r26, r26
    1e6a:	bb 0b       	sbc	r27, r27
    1e6c:	dc 01       	movw	r26, r24
    1e6e:	99 27       	eor	r25, r25
    1e70:	88 27       	eor	r24, r24
    1e72:	60 e0       	ldi	r22, 0x00	; 0
    1e74:	70 e0       	ldi	r23, 0x00	; 0
    1e76:	84 2b       	or	r24, r20
    1e78:	95 2b       	or	r25, r21
    1e7a:	a6 2b       	or	r26, r22
    1e7c:	b7 2b       	or	r27, r23
    1e7e:	13 c0       	rjmp	.+38     	; 0x1ea6 <async+0x104>
    1e80:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e84:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e88:	01 96       	adiw	r24, 0x01	; 1
    1e8a:	09 2e       	mov	r0, r25
    1e8c:	00 0c       	add	r0, r0
    1e8e:	aa 0b       	sbc	r26, r26
    1e90:	bb 0b       	sbc	r27, r27
    1e92:	dc 01       	movw	r26, r24
    1e94:	99 27       	eor	r25, r25
    1e96:	88 27       	eor	r24, r24
    1e98:	a9 01       	movw	r20, r18
    1e9a:	60 e0       	ldi	r22, 0x00	; 0
    1e9c:	70 e0       	ldi	r23, 0x00	; 0
    1e9e:	84 2b       	or	r24, r20
    1ea0:	95 2b       	or	r25, r21
    1ea2:	a6 2b       	or	r26, r22
    1ea4:	b7 2b       	or	r27, r23
    1ea6:	48 1a       	sub	r4, r24
    1ea8:	59 0a       	sbc	r5, r25
    1eaa:	6a 0a       	sbc	r6, r26
    1eac:	7b 0a       	sbc	r7, r27
    1eae:	14 14       	cp	r1, r4
    1eb0:	15 04       	cpc	r1, r5
    1eb2:	16 04       	cpc	r1, r6
    1eb4:	17 04       	cpc	r1, r7
    1eb6:	ac f5       	brge	.+106    	; 0x1f22 <async+0x180>
    1eb8:	64 e6       	ldi	r22, 0x64	; 100
    1eba:	71 e0       	ldi	r23, 0x01	; 1
    1ebc:	ce 01       	movw	r24, r28
    1ebe:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <enqueueByBaseline>
    1ec2:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <timerQ>
    1ec6:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <timerQ+0x1>
    1eca:	30 97       	sbiw	r30, 0x00	; 0
    1ecc:	21 f1       	breq	.+72     	; 0x1f16 <async+0x174>
    1ece:	82 81       	ldd	r24, Z+2	; 0x02
    1ed0:	93 81       	ldd	r25, Z+3	; 0x03
    1ed2:	a4 81       	ldd	r26, Z+4	; 0x04
    1ed4:	b5 81       	ldd	r27, Z+5	; 0x05
    1ed6:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <overflows>
    1eda:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <overflows+0x1>
    1ede:	2a 17       	cp	r18, r26
    1ee0:	3b 07       	cpc	r19, r27
    1ee2:	c9 f4       	brne	.+50     	; 0x1f16 <async+0x174>
    1ee4:	9c 01       	movw	r18, r24
    1ee6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1eea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1eee:	84 1b       	sub	r24, r20
    1ef0:	95 0b       	sbc	r25, r21
    1ef2:	01 97       	sbiw	r24, 0x01	; 1
    1ef4:	31 f4       	brne	.+12     	; 0x1f02 <async+0x160>
    1ef6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1efa:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1efe:	2f 5f       	subi	r18, 0xFF	; 255
    1f00:	3f 4f       	sbci	r19, 0xFF	; 255
    1f02:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1f06:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1f0a:	ef e6       	ldi	r30, 0x6F	; 111
    1f0c:	f0 e0       	ldi	r31, 0x00	; 0
    1f0e:	80 81       	ld	r24, Z
    1f10:	82 60       	ori	r24, 0x02	; 2
    1f12:	80 83       	st	Z, r24
    1f14:	41 c0       	rjmp	.+130    	; 0x1f98 <async+0x1f6>
    1f16:	ef e6       	ldi	r30, 0x6F	; 111
    1f18:	f0 e0       	ldi	r31, 0x00	; 0
    1f1a:	80 81       	ld	r24, Z
    1f1c:	8d 7f       	andi	r24, 0xFD	; 253
    1f1e:	80 83       	st	Z, r24
    1f20:	3b c0       	rjmp	.+118    	; 0x1f98 <async+0x1f6>
    1f22:	66 e6       	ldi	r22, 0x66	; 102
    1f24:	71 e0       	ldi	r23, 0x01	; 1
    1f26:	ce 01       	movw	r24, r28
    1f28:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <enqueueByDeadline>
    1f2c:	33 20       	and	r3, r3
    1f2e:	b9 f1       	breq	.+110    	; 0x1f9e <async+0x1fc>
    1f30:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1f34:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1f38:	00 97       	sbiw	r24, 0x00	; 0
    1f3a:	81 f1       	breq	.+96     	; 0x1f9c <async+0x1fa>
    1f3c:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1f40:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1f44:	20 91 66 01 	lds	r18, 0x0166	; 0x800166 <msgQ>
    1f48:	30 91 67 01 	lds	r19, 0x0167	; 0x800167 <msgQ+0x1>
    1f4c:	02 81       	ldd	r16, Z+2	; 0x02
    1f4e:	13 81       	ldd	r17, Z+3	; 0x03
    1f50:	d9 01       	movw	r26, r18
    1f52:	16 96       	adiw	r26, 0x06	; 6
    1f54:	4d 91       	ld	r20, X+
    1f56:	5d 91       	ld	r21, X+
    1f58:	6d 91       	ld	r22, X+
    1f5a:	7c 91       	ld	r23, X
    1f5c:	19 97       	sbiw	r26, 0x09	; 9
    1f5e:	d8 01       	movw	r26, r16
    1f60:	16 96       	adiw	r26, 0x06	; 6
    1f62:	0d 91       	ld	r16, X+
    1f64:	1d 91       	ld	r17, X+
    1f66:	2d 91       	ld	r18, X+
    1f68:	3c 91       	ld	r19, X
    1f6a:	19 97       	sbiw	r26, 0x09	; 9
    1f6c:	40 1b       	sub	r20, r16
    1f6e:	51 0b       	sbc	r21, r17
    1f70:	62 0b       	sbc	r22, r18
    1f72:	73 0b       	sbc	r23, r19
    1f74:	9a f4       	brpl	.+38     	; 0x1f9c <async+0x1fa>
    1f76:	dc 01       	movw	r26, r24
    1f78:	2d 91       	ld	r18, X+
    1f7a:	3c 91       	ld	r19, X
    1f7c:	11 97       	sbiw	r26, 0x01	; 1
    1f7e:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1f82:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1f86:	ed 93       	st	X+, r30
    1f88:	fc 93       	st	X, r31
    1f8a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1f8e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1f92:	0e 94 3a 05 	call	0xa74	; 0xa74 <dispatch>
    1f96:	02 c0       	rjmp	.+4      	; 0x1f9c <async+0x1fa>
    1f98:	33 20       	and	r3, r3
    1f9a:	09 f0       	breq	.+2      	; 0x1f9e <async+0x1fc>
    1f9c:	78 94       	sei
    1f9e:	ce 01       	movw	r24, r28
    1fa0:	df 91       	pop	r29
    1fa2:	cf 91       	pop	r28
    1fa4:	1f 91       	pop	r17
    1fa6:	0f 91       	pop	r16
    1fa8:	ff 90       	pop	r15
    1faa:	ef 90       	pop	r14
    1fac:	df 90       	pop	r13
    1fae:	cf 90       	pop	r12
    1fb0:	bf 90       	pop	r11
    1fb2:	af 90       	pop	r10
    1fb4:	9f 90       	pop	r9
    1fb6:	8f 90       	pop	r8
    1fb8:	7f 90       	pop	r7
    1fba:	6f 90       	pop	r6
    1fbc:	5f 90       	pop	r5
    1fbe:	4f 90       	pop	r4
    1fc0:	3f 90       	pop	r3
    1fc2:	08 95       	ret

00001fc4 <sync>:
    1fc4:	cf 92       	push	r12
    1fc6:	df 92       	push	r13
    1fc8:	ef 92       	push	r14
    1fca:	ff 92       	push	r15
    1fcc:	0f 93       	push	r16
    1fce:	1f 93       	push	r17
    1fd0:	cf 93       	push	r28
    1fd2:	df 93       	push	r29
    1fd4:	ec 01       	movw	r28, r24
    1fd6:	7b 01       	movw	r14, r22
    1fd8:	6a 01       	movw	r12, r20
    1fda:	1f b7       	in	r17, 0x3f	; 63
    1fdc:	10 78       	andi	r17, 0x80	; 128
    1fde:	f8 94       	cli
    1fe0:	a8 81       	ld	r26, Y
    1fe2:	b9 81       	ldd	r27, Y+1	; 0x01
    1fe4:	10 97       	sbiw	r26, 0x00	; 0
    1fe6:	61 f1       	breq	.+88     	; 0x2040 <sync+0x7c>
    1fe8:	14 96       	adiw	r26, 0x04	; 4
    1fea:	ed 91       	ld	r30, X+
    1fec:	fc 91       	ld	r31, X
    1fee:	15 97       	sbiw	r26, 0x05	; 5
    1ff0:	30 97       	sbiw	r30, 0x00	; 0
    1ff2:	41 f0       	breq	.+16     	; 0x2004 <sync+0x40>
    1ff4:	a0 81       	ld	r26, Z
    1ff6:	b1 81       	ldd	r27, Z+1	; 0x01
    1ff8:	14 96       	adiw	r26, 0x04	; 4
    1ffa:	ed 91       	ld	r30, X+
    1ffc:	fc 91       	ld	r31, X
    1ffe:	15 97       	sbiw	r26, 0x05	; 5
    2000:	30 97       	sbiw	r30, 0x00	; 0
    2002:	c1 f7       	brne	.-16     	; 0x1ff4 <sync+0x30>
    2004:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2008:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    200c:	2a 17       	cp	r18, r26
    200e:	3b 07       	cpc	r19, r27
    2010:	21 f0       	breq	.+8      	; 0x201a <sync+0x56>
    2012:	11 23       	and	r17, r17
    2014:	09 f4       	brne	.+2      	; 0x2018 <sync+0x54>
    2016:	3d c0       	rjmp	.+122    	; 0x2092 <sync+0xce>
    2018:	07 c0       	rjmp	.+14     	; 0x2028 <sync+0x64>
    201a:	11 23       	and	r17, r17
    201c:	09 f4       	brne	.+2      	; 0x2020 <sync+0x5c>
    201e:	3c c0       	rjmp	.+120    	; 0x2098 <sync+0xd4>
    2020:	78 94       	sei
    2022:	8f ef       	ldi	r24, 0xFF	; 255
    2024:	9f ef       	ldi	r25, 0xFF	; 255
    2026:	52 c0       	rjmp	.+164    	; 0x20cc <sync+0x108>
    2028:	8a 81       	ldd	r24, Y+2	; 0x02
    202a:	9b 81       	ldd	r25, Y+3	; 0x03
    202c:	00 97       	sbiw	r24, 0x00	; 0
    202e:	d1 f1       	breq	.+116    	; 0x20a4 <sync+0xe0>
    2030:	fc 01       	movw	r30, r24
    2032:	15 82       	std	Z+5, r1	; 0x05
    2034:	14 82       	std	Z+4, r1	; 0x04
    2036:	36 c0       	rjmp	.+108    	; 0x20a4 <sync+0xe0>
    2038:	78 94       	sei
    203a:	80 e0       	ldi	r24, 0x00	; 0
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	46 c0       	rjmp	.+140    	; 0x20cc <sync+0x108>
    2040:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2044:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2048:	99 83       	std	Y+1, r25	; 0x01
    204a:	88 83       	st	Y, r24
    204c:	11 23       	and	r17, r17
    204e:	29 f0       	breq	.+10     	; 0x205a <sync+0x96>
    2050:	8a 81       	ldd	r24, Y+2	; 0x02
    2052:	9b 81       	ldd	r25, Y+3	; 0x03
    2054:	01 97       	sbiw	r24, 0x01	; 1
    2056:	09 f0       	breq	.+2      	; 0x205a <sync+0x96>
    2058:	78 94       	sei
    205a:	b6 01       	movw	r22, r12
    205c:	ce 01       	movw	r24, r28
    205e:	f7 01       	movw	r30, r14
    2060:	09 95       	icall
    2062:	f8 2e       	mov	r15, r24
    2064:	09 2f       	mov	r16, r25
    2066:	8f b7       	in	r24, 0x3f	; 63
    2068:	f8 94       	cli
    206a:	19 82       	std	Y+1, r1	; 0x01
    206c:	18 82       	st	Y, r1
    206e:	8a 81       	ldd	r24, Y+2	; 0x02
    2070:	9b 81       	ldd	r25, Y+3	; 0x03
    2072:	82 30       	cpi	r24, 0x02	; 2
    2074:	91 05       	cpc	r25, r1
    2076:	38 f0       	brcs	.+14     	; 0x2086 <sync+0xc2>
    2078:	1b 82       	std	Y+3, r1	; 0x03
    207a:	1a 82       	std	Y+2, r1	; 0x02
    207c:	fc 01       	movw	r30, r24
    207e:	15 82       	std	Z+5, r1	; 0x05
    2080:	14 82       	std	Z+4, r1	; 0x04
    2082:	0e 94 3a 05 	call	0xa74	; 0xa74 <dispatch>
    2086:	11 23       	and	r17, r17
    2088:	51 f0       	breq	.+20     	; 0x209e <sync+0xda>
    208a:	78 94       	sei
    208c:	8f 2d       	mov	r24, r15
    208e:	90 2f       	mov	r25, r16
    2090:	1d c0       	rjmp	.+58     	; 0x20cc <sync+0x108>
    2092:	8f ef       	ldi	r24, 0xFF	; 255
    2094:	9f ef       	ldi	r25, 0xFF	; 255
    2096:	1a c0       	rjmp	.+52     	; 0x20cc <sync+0x108>
    2098:	8f ef       	ldi	r24, 0xFF	; 255
    209a:	9f ef       	ldi	r25, 0xFF	; 255
    209c:	17 c0       	rjmp	.+46     	; 0x20cc <sync+0x108>
    209e:	8f 2d       	mov	r24, r15
    20a0:	90 2f       	mov	r25, r16
    20a2:	14 c0       	rjmp	.+40     	; 0x20cc <sync+0x108>
    20a4:	3b 83       	std	Y+3, r19	; 0x03
    20a6:	2a 83       	std	Y+2, r18	; 0x02
    20a8:	f9 01       	movw	r30, r18
    20aa:	d5 83       	std	Z+5, r29	; 0x05
    20ac:	c4 83       	std	Z+4, r28	; 0x04
    20ae:	cd 01       	movw	r24, r26
    20b0:	0e 94 3a 05 	call	0xa74	; 0xa74 <dispatch>
    20b4:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20b8:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20bc:	82 81       	ldd	r24, Z+2	; 0x02
    20be:	93 81       	ldd	r25, Z+3	; 0x03
    20c0:	89 2b       	or	r24, r25
    20c2:	09 f4       	brne	.+2      	; 0x20c6 <sync+0x102>
    20c4:	b9 cf       	rjmp	.-142    	; 0x2038 <sync+0x74>
    20c6:	f9 83       	std	Y+1, r31	; 0x01
    20c8:	e8 83       	st	Y, r30
    20ca:	c2 cf       	rjmp	.-124    	; 0x2050 <sync+0x8c>
    20cc:	df 91       	pop	r29
    20ce:	cf 91       	pop	r28
    20d0:	1f 91       	pop	r17
    20d2:	0f 91       	pop	r16
    20d4:	ff 90       	pop	r15
    20d6:	ef 90       	pop	r14
    20d8:	df 90       	pop	r13
    20da:	cf 90       	pop	r12
    20dc:	08 95       	ret

000020de <run>:
    20de:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20e2:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20e6:	86 e6       	ldi	r24, 0x66	; 102
    20e8:	91 e0       	ldi	r25, 0x01	; 1
    20ea:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <dequeue>
    20ee:	ec 01       	movw	r28, r24
    20f0:	d8 01       	movw	r26, r16
    20f2:	13 96       	adiw	r26, 0x03	; 3
    20f4:	9c 93       	st	X, r25
    20f6:	8e 93       	st	-X, r24
    20f8:	12 97       	sbiw	r26, 0x02	; 2
    20fa:	78 94       	sei
    20fc:	4e 85       	ldd	r20, Y+14	; 0x0e
    20fe:	5f 85       	ldd	r21, Y+15	; 0x0f
    2100:	6c 85       	ldd	r22, Y+12	; 0x0c
    2102:	7d 85       	ldd	r23, Y+13	; 0x0d
    2104:	8a 85       	ldd	r24, Y+10	; 0x0a
    2106:	9b 85       	ldd	r25, Y+11	; 0x0b
    2108:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <sync>
    210c:	8f b7       	in	r24, 0x3f	; 63
    210e:	f8 94       	cli
    2110:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2114:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    2118:	99 83       	std	Y+1, r25	; 0x01
    211a:	88 83       	st	Y, r24
    211c:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    2120:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    2124:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    2128:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    212c:	00 81       	ld	r16, Z
    212e:	11 81       	ldd	r17, Z+1	; 0x01
    2130:	e8 01       	movw	r28, r16
    2132:	2a 81       	ldd	r18, Y+2	; 0x02
    2134:	3b 81       	ldd	r19, Y+3	; 0x03
    2136:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <msgQ>
    213a:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <msgQ+0x1>
    213e:	10 97       	sbiw	r26, 0x00	; 0
    2140:	c1 f0       	breq	.+48     	; 0x2172 <run+0x94>
    2142:	21 15       	cp	r18, r1
    2144:	31 05       	cpc	r19, r1
    2146:	59 f2       	breq	.-106    	; 0x20de <run>
    2148:	16 96       	adiw	r26, 0x06	; 6
    214a:	8d 91       	ld	r24, X+
    214c:	9d 91       	ld	r25, X+
    214e:	0d 90       	ld	r0, X+
    2150:	bc 91       	ld	r27, X
    2152:	a0 2d       	mov	r26, r0
    2154:	e9 01       	movw	r28, r18
    2156:	4e 81       	ldd	r20, Y+6	; 0x06
    2158:	5f 81       	ldd	r21, Y+7	; 0x07
    215a:	68 85       	ldd	r22, Y+8	; 0x08
    215c:	79 85       	ldd	r23, Y+9	; 0x09
    215e:	84 1b       	sub	r24, r20
    2160:	95 0b       	sbc	r25, r21
    2162:	a6 0b       	sbc	r26, r22
    2164:	b7 0b       	sbc	r27, r23
    2166:	18 16       	cp	r1, r24
    2168:	19 06       	cpc	r1, r25
    216a:	1a 06       	cpc	r1, r26
    216c:	1b 06       	cpc	r1, r27
    216e:	0c f0       	brlt	.+2      	; 0x2172 <run+0x94>
    2170:	b6 cf       	rjmp	.-148    	; 0x20de <run>
    2172:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <activeStack+0x1>
    2176:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <activeStack>
    217a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    217e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    2182:	91 83       	std	Z+1, r25	; 0x01
    2184:	80 83       	st	Z, r24
    2186:	f0 93 05 01 	sts	0x0105, r31	; 0x800105 <threadPool+0x1>
    218a:	e0 93 04 01 	sts	0x0104, r30	; 0x800104 <threadPool>
    218e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    2192:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    2196:	14 96       	adiw	r26, 0x04	; 4
    2198:	ed 91       	ld	r30, X+
    219a:	fc 91       	ld	r31, X
    219c:	15 97       	sbiw	r26, 0x05	; 5
    219e:	30 97       	sbiw	r30, 0x00	; 0
    21a0:	41 f0       	breq	.+16     	; 0x21b2 <run+0xd4>
    21a2:	a0 81       	ld	r26, Z
    21a4:	b1 81       	ldd	r27, Z+1	; 0x01
    21a6:	14 96       	adiw	r26, 0x04	; 4
    21a8:	ed 91       	ld	r30, X+
    21aa:	fc 91       	ld	r31, X
    21ac:	15 97       	sbiw	r26, 0x05	; 5
    21ae:	30 97       	sbiw	r30, 0x00	; 0
    21b0:	c1 f7       	brne	.-16     	; 0x21a2 <run+0xc4>
    21b2:	cd 01       	movw	r24, r26
    21b4:	0e 94 3a 05 	call	0xa74	; 0xa74 <dispatch>
    21b8:	92 cf       	rjmp	.-220    	; 0x20de <run>

000021ba <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    21ba:	42 31       	cpi	r20, 0x12	; 18
    21bc:	b8 f4       	brcc	.+46     	; 0x21ec <install+0x32>
        char status;
        DISABLE(status);
    21be:	2f b7       	in	r18, 0x3f	; 63
    21c0:	f8 94       	cli
        otable[i] = obj;
    21c2:	50 e0       	ldi	r21, 0x00	; 0
    21c4:	44 0f       	add	r20, r20
    21c6:	55 1f       	adc	r21, r21
    21c8:	fa 01       	movw	r30, r20
    21ca:	e8 59       	subi	r30, 0x98	; 152
    21cc:	fe 4f       	sbci	r31, 0xFE	; 254
    21ce:	91 83       	std	Z+1, r25	; 0x01
    21d0:	80 83       	st	Z, r24
        mtable[i] = m;
    21d2:	fa 01       	movw	r30, r20
    21d4:	e0 50       	subi	r30, 0x00	; 0
    21d6:	fe 4f       	sbci	r31, 0xFE	; 254
    21d8:	71 83       	std	Z+1, r23	; 0x01
    21da:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    21dc:	41 e0       	ldi	r20, 0x01	; 1
    21de:	50 e0       	ldi	r21, 0x00	; 0
    21e0:	fc 01       	movw	r30, r24
    21e2:	53 83       	std	Z+3, r21	; 0x03
    21e4:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    21e6:	22 23       	and	r18, r18
    21e8:	0c f4       	brge	.+2      	; 0x21ec <install+0x32>
    21ea:	78 94       	sei
    21ec:	08 95       	ret

000021ee <tinytimber>:
    }   
}

int tinytimber(Object *obj, Method m, int arg) {
    21ee:	8c 01       	movw	r16, r24
    21f0:	7b 01       	movw	r14, r22
    21f2:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    21f4:	8f b7       	in	r24, 0x3f	; 63
    21f6:	f8 94       	cli
    initialize();
    21f8:	0e 94 cf 04 	call	0x99e	; 0x99e <initialize>
    ENABLE(1);
    21fc:	78 94       	sei
    if (m != NULL)
    21fe:	e1 14       	cp	r14, r1
    2200:	f1 04       	cpc	r15, r1
    2202:	41 f0       	breq	.+16     	; 0x2214 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	a9 01       	movw	r20, r18
    220a:	60 e0       	ldi	r22, 0x00	; 0
    220c:	70 e0       	ldi	r23, 0x00	; 0
    220e:	cb 01       	movw	r24, r22
    2210:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <async>
    DISABLE(status);
    2214:	8f b7       	in	r24, 0x3f	; 63
    2216:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    2218:	0e 94 5a 05 	call	0xab4	; 0xab4 <schedule>
    ENABLE(1);
    221c:	78 94       	sei
    while (1) {
        SLEEP();
    221e:	81 e0       	ldi	r24, 0x01	; 1
    2220:	83 bf       	out	0x33, r24	; 51
    2222:	88 95       	sleep
    2224:	fd cf       	rjmp	.-6      	; 0x2220 <tinytimber+0x32>

00002226 <__divmodhi4>:
    2226:	97 fb       	bst	r25, 7
    2228:	07 2e       	mov	r0, r23
    222a:	16 f4       	brtc	.+4      	; 0x2230 <__divmodhi4+0xa>
    222c:	00 94       	com	r0
    222e:	07 d0       	rcall	.+14     	; 0x223e <__divmodhi4_neg1>
    2230:	77 fd       	sbrc	r23, 7
    2232:	09 d0       	rcall	.+18     	; 0x2246 <__divmodhi4_neg2>
    2234:	0e 94 53 11 	call	0x22a6	; 0x22a6 <__udivmodhi4>
    2238:	07 fc       	sbrc	r0, 7
    223a:	05 d0       	rcall	.+10     	; 0x2246 <__divmodhi4_neg2>
    223c:	3e f4       	brtc	.+14     	; 0x224c <__divmodhi4_exit>

0000223e <__divmodhi4_neg1>:
    223e:	90 95       	com	r25
    2240:	81 95       	neg	r24
    2242:	9f 4f       	sbci	r25, 0xFF	; 255
    2244:	08 95       	ret

00002246 <__divmodhi4_neg2>:
    2246:	70 95       	com	r23
    2248:	61 95       	neg	r22
    224a:	7f 4f       	sbci	r23, 0xFF	; 255

0000224c <__divmodhi4_exit>:
    224c:	08 95       	ret

0000224e <__divmodsi4>:
    224e:	05 2e       	mov	r0, r21
    2250:	97 fb       	bst	r25, 7
    2252:	1e f4       	brtc	.+6      	; 0x225a <__divmodsi4+0xc>
    2254:	00 94       	com	r0
    2256:	0e 94 3e 11 	call	0x227c	; 0x227c <__negsi2>
    225a:	57 fd       	sbrc	r21, 7
    225c:	07 d0       	rcall	.+14     	; 0x226c <__divmodsi4_neg2>
    225e:	0e 94 67 11 	call	0x22ce	; 0x22ce <__udivmodsi4>
    2262:	07 fc       	sbrc	r0, 7
    2264:	03 d0       	rcall	.+6      	; 0x226c <__divmodsi4_neg2>
    2266:	4e f4       	brtc	.+18     	; 0x227a <__divmodsi4_exit>
    2268:	0c 94 3e 11 	jmp	0x227c	; 0x227c <__negsi2>

0000226c <__divmodsi4_neg2>:
    226c:	50 95       	com	r21
    226e:	40 95       	com	r20
    2270:	30 95       	com	r19
    2272:	21 95       	neg	r18
    2274:	3f 4f       	sbci	r19, 0xFF	; 255
    2276:	4f 4f       	sbci	r20, 0xFF	; 255
    2278:	5f 4f       	sbci	r21, 0xFF	; 255

0000227a <__divmodsi4_exit>:
    227a:	08 95       	ret

0000227c <__negsi2>:
    227c:	90 95       	com	r25
    227e:	80 95       	com	r24
    2280:	70 95       	com	r23
    2282:	61 95       	neg	r22
    2284:	7f 4f       	sbci	r23, 0xFF	; 255
    2286:	8f 4f       	sbci	r24, 0xFF	; 255
    2288:	9f 4f       	sbci	r25, 0xFF	; 255
    228a:	08 95       	ret

0000228c <__tablejump2__>:
    228c:	ee 0f       	add	r30, r30
    228e:	ff 1f       	adc	r31, r31
    2290:	05 90       	lpm	r0, Z+
    2292:	f4 91       	lpm	r31, Z
    2294:	e0 2d       	mov	r30, r0
    2296:	09 94       	ijmp

00002298 <__usmulhisi3>:
    2298:	0e 94 89 11 	call	0x2312	; 0x2312 <__umulhisi3>

0000229c <__usmulhisi3_tail>:
    229c:	b7 ff       	sbrs	r27, 7
    229e:	08 95       	ret
    22a0:	82 1b       	sub	r24, r18
    22a2:	93 0b       	sbc	r25, r19
    22a4:	08 95       	ret

000022a6 <__udivmodhi4>:
    22a6:	aa 1b       	sub	r26, r26
    22a8:	bb 1b       	sub	r27, r27
    22aa:	51 e1       	ldi	r21, 0x11	; 17
    22ac:	07 c0       	rjmp	.+14     	; 0x22bc <__udivmodhi4_ep>

000022ae <__udivmodhi4_loop>:
    22ae:	aa 1f       	adc	r26, r26
    22b0:	bb 1f       	adc	r27, r27
    22b2:	a6 17       	cp	r26, r22
    22b4:	b7 07       	cpc	r27, r23
    22b6:	10 f0       	brcs	.+4      	; 0x22bc <__udivmodhi4_ep>
    22b8:	a6 1b       	sub	r26, r22
    22ba:	b7 0b       	sbc	r27, r23

000022bc <__udivmodhi4_ep>:
    22bc:	88 1f       	adc	r24, r24
    22be:	99 1f       	adc	r25, r25
    22c0:	5a 95       	dec	r21
    22c2:	a9 f7       	brne	.-22     	; 0x22ae <__udivmodhi4_loop>
    22c4:	80 95       	com	r24
    22c6:	90 95       	com	r25
    22c8:	bc 01       	movw	r22, r24
    22ca:	cd 01       	movw	r24, r26
    22cc:	08 95       	ret

000022ce <__udivmodsi4>:
    22ce:	a1 e2       	ldi	r26, 0x21	; 33
    22d0:	1a 2e       	mov	r1, r26
    22d2:	aa 1b       	sub	r26, r26
    22d4:	bb 1b       	sub	r27, r27
    22d6:	fd 01       	movw	r30, r26
    22d8:	0d c0       	rjmp	.+26     	; 0x22f4 <__udivmodsi4_ep>

000022da <__udivmodsi4_loop>:
    22da:	aa 1f       	adc	r26, r26
    22dc:	bb 1f       	adc	r27, r27
    22de:	ee 1f       	adc	r30, r30
    22e0:	ff 1f       	adc	r31, r31
    22e2:	a2 17       	cp	r26, r18
    22e4:	b3 07       	cpc	r27, r19
    22e6:	e4 07       	cpc	r30, r20
    22e8:	f5 07       	cpc	r31, r21
    22ea:	20 f0       	brcs	.+8      	; 0x22f4 <__udivmodsi4_ep>
    22ec:	a2 1b       	sub	r26, r18
    22ee:	b3 0b       	sbc	r27, r19
    22f0:	e4 0b       	sbc	r30, r20
    22f2:	f5 0b       	sbc	r31, r21

000022f4 <__udivmodsi4_ep>:
    22f4:	66 1f       	adc	r22, r22
    22f6:	77 1f       	adc	r23, r23
    22f8:	88 1f       	adc	r24, r24
    22fa:	99 1f       	adc	r25, r25
    22fc:	1a 94       	dec	r1
    22fe:	69 f7       	brne	.-38     	; 0x22da <__udivmodsi4_loop>
    2300:	60 95       	com	r22
    2302:	70 95       	com	r23
    2304:	80 95       	com	r24
    2306:	90 95       	com	r25
    2308:	9b 01       	movw	r18, r22
    230a:	ac 01       	movw	r20, r24
    230c:	bd 01       	movw	r22, r26
    230e:	cf 01       	movw	r24, r30
    2310:	08 95       	ret

00002312 <__umulhisi3>:
    2312:	a2 9f       	mul	r26, r18
    2314:	b0 01       	movw	r22, r0
    2316:	b3 9f       	mul	r27, r19
    2318:	c0 01       	movw	r24, r0
    231a:	a3 9f       	mul	r26, r19
    231c:	70 0d       	add	r23, r0
    231e:	81 1d       	adc	r24, r1
    2320:	11 24       	eor	r1, r1
    2322:	91 1d       	adc	r25, r1
    2324:	b2 9f       	mul	r27, r18
    2326:	70 0d       	add	r23, r0
    2328:	81 1d       	adc	r24, r1
    232a:	11 24       	eor	r1, r1
    232c:	91 1d       	adc	r25, r1
    232e:	08 95       	ret

00002330 <setjmp>:
    2330:	dc 01       	movw	r26, r24
    2332:	2d 92       	st	X+, r2
    2334:	3d 92       	st	X+, r3
    2336:	4d 92       	st	X+, r4
    2338:	5d 92       	st	X+, r5
    233a:	6d 92       	st	X+, r6
    233c:	7d 92       	st	X+, r7
    233e:	8d 92       	st	X+, r8
    2340:	9d 92       	st	X+, r9
    2342:	ad 92       	st	X+, r10
    2344:	bd 92       	st	X+, r11
    2346:	cd 92       	st	X+, r12
    2348:	dd 92       	st	X+, r13
    234a:	ed 92       	st	X+, r14
    234c:	fd 92       	st	X+, r15
    234e:	0d 93       	st	X+, r16
    2350:	1d 93       	st	X+, r17
    2352:	cd 93       	st	X+, r28
    2354:	dd 93       	st	X+, r29
    2356:	ff 91       	pop	r31
    2358:	ef 91       	pop	r30
    235a:	8d b7       	in	r24, 0x3d	; 61
    235c:	8d 93       	st	X+, r24
    235e:	8e b7       	in	r24, 0x3e	; 62
    2360:	8d 93       	st	X+, r24
    2362:	8f b7       	in	r24, 0x3f	; 63
    2364:	8d 93       	st	X+, r24
    2366:	ed 93       	st	X+, r30
    2368:	fd 93       	st	X+, r31
    236a:	88 27       	eor	r24, r24
    236c:	99 27       	eor	r25, r25
    236e:	09 94       	ijmp

00002370 <longjmp>:
    2370:	dc 01       	movw	r26, r24
    2372:	cb 01       	movw	r24, r22
    2374:	81 30       	cpi	r24, 0x01	; 1
    2376:	91 05       	cpc	r25, r1
    2378:	81 1d       	adc	r24, r1
    237a:	2d 90       	ld	r2, X+
    237c:	3d 90       	ld	r3, X+
    237e:	4d 90       	ld	r4, X+
    2380:	5d 90       	ld	r5, X+
    2382:	6d 90       	ld	r6, X+
    2384:	7d 90       	ld	r7, X+
    2386:	8d 90       	ld	r8, X+
    2388:	9d 90       	ld	r9, X+
    238a:	ad 90       	ld	r10, X+
    238c:	bd 90       	ld	r11, X+
    238e:	cd 90       	ld	r12, X+
    2390:	dd 90       	ld	r13, X+
    2392:	ed 90       	ld	r14, X+
    2394:	fd 90       	ld	r15, X+
    2396:	0d 91       	ld	r16, X+
    2398:	1d 91       	ld	r17, X+
    239a:	cd 91       	ld	r28, X+
    239c:	dd 91       	ld	r29, X+
    239e:	ed 91       	ld	r30, X+
    23a0:	fd 91       	ld	r31, X+
    23a2:	0d 90       	ld	r0, X+
    23a4:	f8 94       	cli
    23a6:	fe bf       	out	0x3e, r31	; 62
    23a8:	0f be       	out	0x3f, r0	; 63
    23aa:	ed bf       	out	0x3d, r30	; 61
    23ac:	ed 91       	ld	r30, X+
    23ae:	fd 91       	ld	r31, X+
    23b0:	09 94       	ijmp

000023b2 <_exit>:
    23b2:	f8 94       	cli

000023b4 <__stop_program>:
    23b4:	ff cf       	rjmp	.-2      	; 0x23b4 <__stop_program>
